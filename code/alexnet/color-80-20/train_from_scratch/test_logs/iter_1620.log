I0324 10:46:53.993105 11405 caffe.cpp:275] Use GPU with device ID 0
I0324 10:46:53.993316 11405 caffe.cpp:279] GPU device name: GeForce GTX 1060
I0324 10:46:54.168921 11405 net.cpp:294] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0324 10:46:54.169035 11405 net.cpp:51] Initializing net from parameters: 
state {
  phase: TEST
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto"
  }
  data_param {
    source: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_plantvillage"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_plantvillage"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 38
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc8_plantvillage"
  top: "prob"
  include {
    phase: TEST
  }
}
layer {
  name: "hdf5out"
  type: "HDF5Output"
  bottom: "prob"
  bottom: "label"
  include {
    phase: TEST
  }
  hdf5_output_param {
    file_name: "hdf5_dumps/iter_1620.h5"
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
I0324 10:46:54.169119 11405 layer_factory.hpp:77] Creating layer data
I0324 10:46:54.169179 11405 db_lmdb.cpp:35] Opened lmdb /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db
I0324 10:46:54.169205 11405 net.cpp:84] Creating Layer data
I0324 10:46:54.169214 11405 net.cpp:380] data -> data
I0324 10:46:54.169229 11405 net.cpp:380] data -> label
I0324 10:46:54.169236 11405 data_transformer.cpp:25] Loading mean file from: /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto
I0324 10:46:54.177248 11405 data_layer.cpp:45] output data size: 100,3,227,227
I0324 10:46:54.265105 11405 net.cpp:122] Setting up data
I0324 10:46:54.265130 11405 net.cpp:129] Top shape: 100 3 227 227 (15458700)
I0324 10:46:54.265136 11405 net.cpp:129] Top shape: 100 (100)
I0324 10:46:54.265141 11405 net.cpp:137] Memory required for data: 61835200
I0324 10:46:54.265146 11405 layer_factory.hpp:77] Creating layer label_data_1_split
I0324 10:46:54.265156 11405 net.cpp:84] Creating Layer label_data_1_split
I0324 10:46:54.265161 11405 net.cpp:406] label_data_1_split <- label
I0324 10:46:54.265167 11405 net.cpp:380] label_data_1_split -> label_data_1_split_0
I0324 10:46:54.265177 11405 net.cpp:380] label_data_1_split -> label_data_1_split_1
I0324 10:46:54.265182 11405 net.cpp:380] label_data_1_split -> label_data_1_split_2
I0324 10:46:54.265231 11405 net.cpp:122] Setting up label_data_1_split
I0324 10:46:54.265239 11405 net.cpp:129] Top shape: 100 (100)
I0324 10:46:54.265244 11405 net.cpp:129] Top shape: 100 (100)
I0324 10:46:54.265249 11405 net.cpp:129] Top shape: 100 (100)
I0324 10:46:54.265251 11405 net.cpp:137] Memory required for data: 61836400
I0324 10:46:54.265255 11405 layer_factory.hpp:77] Creating layer conv1
I0324 10:46:54.265269 11405 net.cpp:84] Creating Layer conv1
I0324 10:46:54.265273 11405 net.cpp:406] conv1 <- data
I0324 10:46:54.265280 11405 net.cpp:380] conv1 -> conv1
I0324 10:46:54.783787 11405 net.cpp:122] Setting up conv1
I0324 10:46:54.783823 11405 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:46:54.783829 11405 net.cpp:137] Memory required for data: 177996400
I0324 10:46:54.783871 11405 layer_factory.hpp:77] Creating layer relu1
I0324 10:46:54.783879 11405 net.cpp:84] Creating Layer relu1
I0324 10:46:54.783891 11405 net.cpp:406] relu1 <- conv1
I0324 10:46:54.783907 11405 net.cpp:367] relu1 -> conv1 (in-place)
I0324 10:46:54.784247 11405 net.cpp:122] Setting up relu1
I0324 10:46:54.784258 11405 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:46:54.784262 11405 net.cpp:137] Memory required for data: 294156400
I0324 10:46:54.784266 11405 layer_factory.hpp:77] Creating layer norm1
I0324 10:46:54.784273 11405 net.cpp:84] Creating Layer norm1
I0324 10:46:54.784278 11405 net.cpp:406] norm1 <- conv1
I0324 10:46:54.784283 11405 net.cpp:380] norm1 -> norm1
I0324 10:46:54.784610 11405 net.cpp:122] Setting up norm1
I0324 10:46:54.784620 11405 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:46:54.784624 11405 net.cpp:137] Memory required for data: 410316400
I0324 10:46:54.784628 11405 layer_factory.hpp:77] Creating layer pool1
I0324 10:46:54.784634 11405 net.cpp:84] Creating Layer pool1
I0324 10:46:54.784638 11405 net.cpp:406] pool1 <- norm1
I0324 10:46:54.784643 11405 net.cpp:380] pool1 -> pool1
I0324 10:46:54.784667 11405 net.cpp:122] Setting up pool1
I0324 10:46:54.784672 11405 net.cpp:129] Top shape: 100 96 27 27 (6998400)
I0324 10:46:54.784677 11405 net.cpp:137] Memory required for data: 438310000
I0324 10:46:54.784680 11405 layer_factory.hpp:77] Creating layer conv2
I0324 10:46:54.784688 11405 net.cpp:84] Creating Layer conv2
I0324 10:46:54.784693 11405 net.cpp:406] conv2 <- pool1
I0324 10:46:54.784698 11405 net.cpp:380] conv2 -> conv2
I0324 10:46:54.789716 11405 net.cpp:122] Setting up conv2
I0324 10:46:54.789738 11405 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:46:54.789742 11405 net.cpp:137] Memory required for data: 512959600
I0324 10:46:54.789752 11405 layer_factory.hpp:77] Creating layer relu2
I0324 10:46:54.789759 11405 net.cpp:84] Creating Layer relu2
I0324 10:46:54.789764 11405 net.cpp:406] relu2 <- conv2
I0324 10:46:54.789772 11405 net.cpp:367] relu2 -> conv2 (in-place)
I0324 10:46:54.790189 11405 net.cpp:122] Setting up relu2
I0324 10:46:54.790200 11405 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:46:54.790205 11405 net.cpp:137] Memory required for data: 587609200
I0324 10:46:54.790208 11405 layer_factory.hpp:77] Creating layer norm2
I0324 10:46:54.790215 11405 net.cpp:84] Creating Layer norm2
I0324 10:46:54.790221 11405 net.cpp:406] norm2 <- conv2
I0324 10:46:54.790227 11405 net.cpp:380] norm2 -> norm2
I0324 10:46:54.790551 11405 net.cpp:122] Setting up norm2
I0324 10:46:54.790561 11405 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:46:54.790565 11405 net.cpp:137] Memory required for data: 662258800
I0324 10:46:54.790570 11405 layer_factory.hpp:77] Creating layer pool2
I0324 10:46:54.790575 11405 net.cpp:84] Creating Layer pool2
I0324 10:46:54.790580 11405 net.cpp:406] pool2 <- norm2
I0324 10:46:54.790585 11405 net.cpp:380] pool2 -> pool2
I0324 10:46:54.790608 11405 net.cpp:122] Setting up pool2
I0324 10:46:54.790614 11405 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:46:54.790618 11405 net.cpp:137] Memory required for data: 679564400
I0324 10:46:54.790622 11405 layer_factory.hpp:77] Creating layer conv3
I0324 10:46:54.790630 11405 net.cpp:84] Creating Layer conv3
I0324 10:46:54.790634 11405 net.cpp:406] conv3 <- pool2
I0324 10:46:54.790639 11405 net.cpp:380] conv3 -> conv3
I0324 10:46:54.797746 11405 net.cpp:122] Setting up conv3
I0324 10:46:54.797768 11405 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:46:54.797773 11405 net.cpp:137] Memory required for data: 705522800
I0324 10:46:54.797782 11405 layer_factory.hpp:77] Creating layer relu3
I0324 10:46:54.797788 11405 net.cpp:84] Creating Layer relu3
I0324 10:46:54.797793 11405 net.cpp:406] relu3 <- conv3
I0324 10:46:54.797799 11405 net.cpp:367] relu3 -> conv3 (in-place)
I0324 10:46:54.798118 11405 net.cpp:122] Setting up relu3
I0324 10:46:54.798127 11405 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:46:54.798132 11405 net.cpp:137] Memory required for data: 731481200
I0324 10:46:54.798136 11405 layer_factory.hpp:77] Creating layer conv4
I0324 10:46:54.798152 11405 net.cpp:84] Creating Layer conv4
I0324 10:46:54.798156 11405 net.cpp:406] conv4 <- conv3
I0324 10:46:54.798174 11405 net.cpp:380] conv4 -> conv4
I0324 10:46:54.806071 11405 net.cpp:122] Setting up conv4
I0324 10:46:54.806097 11405 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:46:54.806102 11405 net.cpp:137] Memory required for data: 757439600
I0324 10:46:54.806109 11405 layer_factory.hpp:77] Creating layer relu4
I0324 10:46:54.806118 11405 net.cpp:84] Creating Layer relu4
I0324 10:46:54.806123 11405 net.cpp:406] relu4 <- conv4
I0324 10:46:54.806128 11405 net.cpp:367] relu4 -> conv4 (in-place)
I0324 10:46:54.806535 11405 net.cpp:122] Setting up relu4
I0324 10:46:54.806547 11405 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:46:54.806551 11405 net.cpp:137] Memory required for data: 783398000
I0324 10:46:54.806556 11405 layer_factory.hpp:77] Creating layer conv5
I0324 10:46:54.806565 11405 net.cpp:84] Creating Layer conv5
I0324 10:46:54.806569 11405 net.cpp:406] conv5 <- conv4
I0324 10:46:54.806589 11405 net.cpp:380] conv5 -> conv5
I0324 10:46:54.812953 11405 net.cpp:122] Setting up conv5
I0324 10:46:54.812981 11405 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:46:54.812985 11405 net.cpp:137] Memory required for data: 800703600
I0324 10:46:54.812995 11405 layer_factory.hpp:77] Creating layer relu5
I0324 10:46:54.813001 11405 net.cpp:84] Creating Layer relu5
I0324 10:46:54.813006 11405 net.cpp:406] relu5 <- conv5
I0324 10:46:54.813014 11405 net.cpp:367] relu5 -> conv5 (in-place)
I0324 10:46:54.813405 11405 net.cpp:122] Setting up relu5
I0324 10:46:54.813416 11405 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:46:54.813419 11405 net.cpp:137] Memory required for data: 818009200
I0324 10:46:54.813423 11405 layer_factory.hpp:77] Creating layer pool5
I0324 10:46:54.813431 11405 net.cpp:84] Creating Layer pool5
I0324 10:46:54.813436 11405 net.cpp:406] pool5 <- conv5
I0324 10:46:54.813441 11405 net.cpp:380] pool5 -> pool5
I0324 10:46:54.813470 11405 net.cpp:122] Setting up pool5
I0324 10:46:54.813477 11405 net.cpp:129] Top shape: 100 256 6 6 (921600)
I0324 10:46:54.813480 11405 net.cpp:137] Memory required for data: 821695600
I0324 10:46:54.813484 11405 layer_factory.hpp:77] Creating layer fc6
I0324 10:46:54.813489 11405 net.cpp:84] Creating Layer fc6
I0324 10:46:54.813493 11405 net.cpp:406] fc6 <- pool5
I0324 10:46:54.813499 11405 net.cpp:380] fc6 -> fc6
I0324 10:46:55.068295 11405 net.cpp:122] Setting up fc6
I0324 10:46:55.068322 11405 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:46:55.068327 11405 net.cpp:137] Memory required for data: 823334000
I0324 10:46:55.068337 11405 layer_factory.hpp:77] Creating layer relu6
I0324 10:46:55.068344 11405 net.cpp:84] Creating Layer relu6
I0324 10:46:55.068349 11405 net.cpp:406] relu6 <- fc6
I0324 10:46:55.068356 11405 net.cpp:367] relu6 -> fc6 (in-place)
I0324 10:46:55.068739 11405 net.cpp:122] Setting up relu6
I0324 10:46:55.068749 11405 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:46:55.068753 11405 net.cpp:137] Memory required for data: 824972400
I0324 10:46:55.068758 11405 layer_factory.hpp:77] Creating layer drop6
I0324 10:46:55.068763 11405 net.cpp:84] Creating Layer drop6
I0324 10:46:55.068768 11405 net.cpp:406] drop6 <- fc6
I0324 10:46:55.068773 11405 net.cpp:367] drop6 -> fc6 (in-place)
I0324 10:46:55.068792 11405 net.cpp:122] Setting up drop6
I0324 10:46:55.068799 11405 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:46:55.068804 11405 net.cpp:137] Memory required for data: 826610800
I0324 10:46:55.068809 11405 layer_factory.hpp:77] Creating layer fc7
I0324 10:46:55.068825 11405 net.cpp:84] Creating Layer fc7
I0324 10:46:55.068828 11405 net.cpp:406] fc7 <- fc6
I0324 10:46:55.068835 11405 net.cpp:380] fc7 -> fc7
I0324 10:46:55.185237 11405 net.cpp:122] Setting up fc7
I0324 10:46:55.185286 11405 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:46:55.185292 11405 net.cpp:137] Memory required for data: 828249200
I0324 10:46:55.185302 11405 layer_factory.hpp:77] Creating layer relu7
I0324 10:46:55.185312 11405 net.cpp:84] Creating Layer relu7
I0324 10:46:55.185323 11405 net.cpp:406] relu7 <- fc7
I0324 10:46:55.185340 11405 net.cpp:367] relu7 -> fc7 (in-place)
I0324 10:46:55.185916 11405 net.cpp:122] Setting up relu7
I0324 10:46:55.185927 11405 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:46:55.185932 11405 net.cpp:137] Memory required for data: 829887600
I0324 10:46:55.185936 11405 layer_factory.hpp:77] Creating layer drop7
I0324 10:46:55.185942 11405 net.cpp:84] Creating Layer drop7
I0324 10:46:55.185946 11405 net.cpp:406] drop7 <- fc7
I0324 10:46:55.185953 11405 net.cpp:367] drop7 -> fc7 (in-place)
I0324 10:46:55.185976 11405 net.cpp:122] Setting up drop7
I0324 10:46:55.185982 11405 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:46:55.185986 11405 net.cpp:137] Memory required for data: 831526000
I0324 10:46:55.185990 11405 layer_factory.hpp:77] Creating layer fc8_plantvillage
I0324 10:46:55.185997 11405 net.cpp:84] Creating Layer fc8_plantvillage
I0324 10:46:55.186002 11405 net.cpp:406] fc8_plantvillage <- fc7
I0324 10:46:55.186007 11405 net.cpp:380] fc8_plantvillage -> fc8_plantvillage
I0324 10:46:55.187036 11405 net.cpp:122] Setting up fc8_plantvillage
I0324 10:46:55.187045 11405 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:46:55.187049 11405 net.cpp:137] Memory required for data: 831541200
I0324 10:46:55.187057 11405 layer_factory.hpp:77] Creating layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:46:55.187063 11405 net.cpp:84] Creating Layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:46:55.187068 11405 net.cpp:406] fc8_plantvillage_fc8_plantvillage_0_split <- fc8_plantvillage
I0324 10:46:55.187073 11405 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:46:55.187080 11405 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:46:55.187088 11405 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:46:55.187119 11405 net.cpp:122] Setting up fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:46:55.187124 11405 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:46:55.187129 11405 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:46:55.187134 11405 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:46:55.187139 11405 net.cpp:137] Memory required for data: 831586800
I0324 10:46:55.187145 11405 layer_factory.hpp:77] Creating layer prob
I0324 10:46:55.187151 11405 net.cpp:84] Creating Layer prob
I0324 10:46:55.187156 11405 net.cpp:406] prob <- fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:46:55.187166 11405 net.cpp:380] prob -> prob
I0324 10:46:55.187660 11405 net.cpp:122] Setting up prob
I0324 10:46:55.187671 11405 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:46:55.187675 11405 net.cpp:137] Memory required for data: 831602000
I0324 10:46:55.187680 11405 layer_factory.hpp:77] Creating layer hdf5out
I0324 10:46:55.187687 11405 net.cpp:84] Creating Layer hdf5out
I0324 10:46:55.187692 11405 net.cpp:406] hdf5out <- prob
I0324 10:46:55.187697 11405 net.cpp:406] hdf5out <- label_data_1_split_0
I0324 10:46:55.188473 11405 net.cpp:122] Setting up hdf5out
I0324 10:46:55.188482 11405 net.cpp:137] Memory required for data: 831602000
I0324 10:46:55.188486 11405 layer_factory.hpp:77] Creating layer loss
I0324 10:46:55.188493 11405 net.cpp:84] Creating Layer loss
I0324 10:46:55.188496 11405 net.cpp:406] loss <- fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:46:55.188501 11405 net.cpp:406] loss <- label_data_1_split_1
I0324 10:46:55.188508 11405 net.cpp:380] loss -> loss
I0324 10:46:55.188515 11405 layer_factory.hpp:77] Creating layer loss
I0324 10:46:55.189000 11405 net.cpp:122] Setting up loss
I0324 10:46:55.189010 11405 net.cpp:129] Top shape: (1)
I0324 10:46:55.189014 11405 net.cpp:132]     with loss weight 1
I0324 10:46:55.189031 11405 net.cpp:137] Memory required for data: 831602004
I0324 10:46:55.189036 11405 layer_factory.hpp:77] Creating layer accuracy
I0324 10:46:55.189043 11405 net.cpp:84] Creating Layer accuracy
I0324 10:46:55.189049 11405 net.cpp:406] accuracy <- fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:46:55.189065 11405 net.cpp:406] accuracy <- label_data_1_split_2
I0324 10:46:55.189072 11405 net.cpp:380] accuracy -> accuracy
I0324 10:46:55.189080 11405 net.cpp:122] Setting up accuracy
I0324 10:46:55.189085 11405 net.cpp:129] Top shape: (1)
I0324 10:46:55.189088 11405 net.cpp:137] Memory required for data: 831602008
I0324 10:46:55.189092 11405 net.cpp:200] accuracy does not need backward computation.
I0324 10:46:55.189100 11405 net.cpp:198] loss needs backward computation.
I0324 10:46:55.189103 11405 net.cpp:200] hdf5out does not need backward computation.
I0324 10:46:55.189108 11405 net.cpp:200] prob does not need backward computation.
I0324 10:46:55.189112 11405 net.cpp:198] fc8_plantvillage_fc8_plantvillage_0_split needs backward computation.
I0324 10:46:55.189116 11405 net.cpp:198] fc8_plantvillage needs backward computation.
I0324 10:46:55.189121 11405 net.cpp:198] drop7 needs backward computation.
I0324 10:46:55.189126 11405 net.cpp:198] relu7 needs backward computation.
I0324 10:46:55.189131 11405 net.cpp:198] fc7 needs backward computation.
I0324 10:46:55.189141 11405 net.cpp:198] drop6 needs backward computation.
I0324 10:46:55.189144 11405 net.cpp:198] relu6 needs backward computation.
I0324 10:46:55.189147 11405 net.cpp:198] fc6 needs backward computation.
I0324 10:46:55.189152 11405 net.cpp:198] pool5 needs backward computation.
I0324 10:46:55.189155 11405 net.cpp:198] relu5 needs backward computation.
I0324 10:46:55.189159 11405 net.cpp:198] conv5 needs backward computation.
I0324 10:46:55.189163 11405 net.cpp:198] relu4 needs backward computation.
I0324 10:46:55.189167 11405 net.cpp:198] conv4 needs backward computation.
I0324 10:46:55.189172 11405 net.cpp:198] relu3 needs backward computation.
I0324 10:46:55.189175 11405 net.cpp:198] conv3 needs backward computation.
I0324 10:46:55.189179 11405 net.cpp:198] pool2 needs backward computation.
I0324 10:46:55.189183 11405 net.cpp:198] norm2 needs backward computation.
I0324 10:46:55.189188 11405 net.cpp:198] relu2 needs backward computation.
I0324 10:46:55.189191 11405 net.cpp:198] conv2 needs backward computation.
I0324 10:46:55.189195 11405 net.cpp:198] pool1 needs backward computation.
I0324 10:46:55.189200 11405 net.cpp:198] norm1 needs backward computation.
I0324 10:46:55.189205 11405 net.cpp:198] relu1 needs backward computation.
I0324 10:46:55.189209 11405 net.cpp:198] conv1 needs backward computation.
I0324 10:46:55.189213 11405 net.cpp:200] label_data_1_split does not need backward computation.
I0324 10:46:55.189218 11405 net.cpp:200] data does not need backward computation.
I0324 10:46:55.189221 11405 net.cpp:242] This network produces output accuracy
I0324 10:46:55.189225 11405 net.cpp:242] This network produces output loss
I0324 10:46:55.189239 11405 net.cpp:255] Network initialization done.
I0324 10:47:04.812371 11405 caffe.cpp:290] Running for 1 iterations.
I0324 10:47:04.898972 11405 hdf5_output_layer.cpp:32] Saving HDF5 file hdf5_dumps/iter_1620.h5
I0324 10:47:04.899163 11405 hdf5_output_layer.cpp:37] Successfully saved 100 rows
I0324 10:47:04.899418 11405 caffe.cpp:313] Batch 0, accuracy = 0.88
I0324 10:47:04.899435 11405 caffe.cpp:313] Batch 0, loss = 0.416991
I0324 10:47:04.899441 11405 caffe.cpp:318] Loss: 0.416991
I0324 10:47:04.899446 11405 caffe.cpp:330] accuracy = 0.88
I0324 10:47:04.899453 11405 caffe.cpp:330] loss = 0.416991 (* 1 = 0.416991 loss)
