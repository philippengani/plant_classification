I0324 10:48:23.423907 11569 caffe.cpp:275] Use GPU with device ID 0
I0324 10:48:23.424131 11569 caffe.cpp:279] GPU device name: GeForce GTX 1060
I0324 10:48:23.591199 11569 net.cpp:294] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0324 10:48:23.591327 11569 net.cpp:51] Initializing net from parameters: 
state {
  phase: TEST
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto"
  }
  data_param {
    source: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_plantvillage"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_plantvillage"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 38
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc8_plantvillage"
  top: "prob"
  include {
    phase: TEST
  }
}
layer {
  name: "hdf5out"
  type: "HDF5Output"
  bottom: "prob"
  bottom: "label"
  include {
    phase: TEST
  }
  hdf5_output_param {
    file_name: "hdf5_dumps/iter_2808.h5"
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
I0324 10:48:23.691771 11569 layer_factory.hpp:77] Creating layer data
I0324 10:48:23.692049 11569 db_lmdb.cpp:35] Opened lmdb /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db
I0324 10:48:23.692137 11569 net.cpp:84] Creating Layer data
I0324 10:48:23.692181 11569 net.cpp:380] data -> data
I0324 10:48:23.692245 11569 net.cpp:380] data -> label
I0324 10:48:23.692279 11569 data_transformer.cpp:25] Loading mean file from: /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto
I0324 10:48:23.726377 11569 data_layer.cpp:45] output data size: 100,3,227,227
I0324 10:48:23.824223 11569 net.cpp:122] Setting up data
I0324 10:48:23.824250 11569 net.cpp:129] Top shape: 100 3 227 227 (15458700)
I0324 10:48:23.824256 11569 net.cpp:129] Top shape: 100 (100)
I0324 10:48:23.824259 11569 net.cpp:137] Memory required for data: 61835200
I0324 10:48:23.824265 11569 layer_factory.hpp:77] Creating layer label_data_1_split
I0324 10:48:23.824275 11569 net.cpp:84] Creating Layer label_data_1_split
I0324 10:48:23.824280 11569 net.cpp:406] label_data_1_split <- label
I0324 10:48:23.824286 11569 net.cpp:380] label_data_1_split -> label_data_1_split_0
I0324 10:48:23.824295 11569 net.cpp:380] label_data_1_split -> label_data_1_split_1
I0324 10:48:23.824299 11569 net.cpp:380] label_data_1_split -> label_data_1_split_2
I0324 10:48:23.824376 11569 net.cpp:122] Setting up label_data_1_split
I0324 10:48:23.824383 11569 net.cpp:129] Top shape: 100 (100)
I0324 10:48:23.824388 11569 net.cpp:129] Top shape: 100 (100)
I0324 10:48:23.824393 11569 net.cpp:129] Top shape: 100 (100)
I0324 10:48:23.824396 11569 net.cpp:137] Memory required for data: 61836400
I0324 10:48:23.824400 11569 layer_factory.hpp:77] Creating layer conv1
I0324 10:48:23.824409 11569 net.cpp:84] Creating Layer conv1
I0324 10:48:23.824414 11569 net.cpp:406] conv1 <- data
I0324 10:48:23.824419 11569 net.cpp:380] conv1 -> conv1
I0324 10:48:24.346385 11569 net.cpp:122] Setting up conv1
I0324 10:48:24.346421 11569 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:48:24.346427 11569 net.cpp:137] Memory required for data: 177996400
I0324 10:48:24.346452 11569 layer_factory.hpp:77] Creating layer relu1
I0324 10:48:24.346459 11569 net.cpp:84] Creating Layer relu1
I0324 10:48:24.346473 11569 net.cpp:406] relu1 <- conv1
I0324 10:48:24.346544 11569 net.cpp:367] relu1 -> conv1 (in-place)
I0324 10:48:24.346915 11569 net.cpp:122] Setting up relu1
I0324 10:48:24.346925 11569 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:48:24.346930 11569 net.cpp:137] Memory required for data: 294156400
I0324 10:48:24.346933 11569 layer_factory.hpp:77] Creating layer norm1
I0324 10:48:24.346941 11569 net.cpp:84] Creating Layer norm1
I0324 10:48:24.346946 11569 net.cpp:406] norm1 <- conv1
I0324 10:48:24.346951 11569 net.cpp:380] norm1 -> norm1
I0324 10:48:24.347292 11569 net.cpp:122] Setting up norm1
I0324 10:48:24.347303 11569 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:48:24.347307 11569 net.cpp:137] Memory required for data: 410316400
I0324 10:48:24.347311 11569 layer_factory.hpp:77] Creating layer pool1
I0324 10:48:24.347317 11569 net.cpp:84] Creating Layer pool1
I0324 10:48:24.347321 11569 net.cpp:406] pool1 <- norm1
I0324 10:48:24.347326 11569 net.cpp:380] pool1 -> pool1
I0324 10:48:24.347350 11569 net.cpp:122] Setting up pool1
I0324 10:48:24.347357 11569 net.cpp:129] Top shape: 100 96 27 27 (6998400)
I0324 10:48:24.347360 11569 net.cpp:137] Memory required for data: 438310000
I0324 10:48:24.347364 11569 layer_factory.hpp:77] Creating layer conv2
I0324 10:48:24.347373 11569 net.cpp:84] Creating Layer conv2
I0324 10:48:24.347376 11569 net.cpp:406] conv2 <- pool1
I0324 10:48:24.347383 11569 net.cpp:380] conv2 -> conv2
I0324 10:48:24.352458 11569 net.cpp:122] Setting up conv2
I0324 10:48:24.352483 11569 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:48:24.352486 11569 net.cpp:137] Memory required for data: 512959600
I0324 10:48:24.352496 11569 layer_factory.hpp:77] Creating layer relu2
I0324 10:48:24.352504 11569 net.cpp:84] Creating Layer relu2
I0324 10:48:24.352507 11569 net.cpp:406] relu2 <- conv2
I0324 10:48:24.352514 11569 net.cpp:367] relu2 -> conv2 (in-place)
I0324 10:48:24.352861 11569 net.cpp:122] Setting up relu2
I0324 10:48:24.352874 11569 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:48:24.352879 11569 net.cpp:137] Memory required for data: 587609200
I0324 10:48:24.352882 11569 layer_factory.hpp:77] Creating layer norm2
I0324 10:48:24.352890 11569 net.cpp:84] Creating Layer norm2
I0324 10:48:24.352895 11569 net.cpp:406] norm2 <- conv2
I0324 10:48:24.352900 11569 net.cpp:380] norm2 -> norm2
I0324 10:48:24.353147 11569 net.cpp:122] Setting up norm2
I0324 10:48:24.353157 11569 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:48:24.353160 11569 net.cpp:137] Memory required for data: 662258800
I0324 10:48:24.353164 11569 layer_factory.hpp:77] Creating layer pool2
I0324 10:48:24.353169 11569 net.cpp:84] Creating Layer pool2
I0324 10:48:24.353174 11569 net.cpp:406] pool2 <- norm2
I0324 10:48:24.353178 11569 net.cpp:380] pool2 -> pool2
I0324 10:48:24.353200 11569 net.cpp:122] Setting up pool2
I0324 10:48:24.353206 11569 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:48:24.353210 11569 net.cpp:137] Memory required for data: 679564400
I0324 10:48:24.353214 11569 layer_factory.hpp:77] Creating layer conv3
I0324 10:48:24.353221 11569 net.cpp:84] Creating Layer conv3
I0324 10:48:24.353226 11569 net.cpp:406] conv3 <- pool2
I0324 10:48:24.353231 11569 net.cpp:380] conv3 -> conv3
I0324 10:48:24.360136 11569 net.cpp:122] Setting up conv3
I0324 10:48:24.360159 11569 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:48:24.360163 11569 net.cpp:137] Memory required for data: 705522800
I0324 10:48:24.360172 11569 layer_factory.hpp:77] Creating layer relu3
I0324 10:48:24.360179 11569 net.cpp:84] Creating Layer relu3
I0324 10:48:24.360184 11569 net.cpp:406] relu3 <- conv3
I0324 10:48:24.360189 11569 net.cpp:367] relu3 -> conv3 (in-place)
I0324 10:48:24.360435 11569 net.cpp:122] Setting up relu3
I0324 10:48:24.360443 11569 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:48:24.360447 11569 net.cpp:137] Memory required for data: 731481200
I0324 10:48:24.360451 11569 layer_factory.hpp:77] Creating layer conv4
I0324 10:48:24.360466 11569 net.cpp:84] Creating Layer conv4
I0324 10:48:24.360471 11569 net.cpp:406] conv4 <- conv3
I0324 10:48:24.360486 11569 net.cpp:380] conv4 -> conv4
I0324 10:48:24.367673 11569 net.cpp:122] Setting up conv4
I0324 10:48:24.367698 11569 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:48:24.367703 11569 net.cpp:137] Memory required for data: 757439600
I0324 10:48:24.367712 11569 layer_factory.hpp:77] Creating layer relu4
I0324 10:48:24.367718 11569 net.cpp:84] Creating Layer relu4
I0324 10:48:24.367723 11569 net.cpp:406] relu4 <- conv4
I0324 10:48:24.367729 11569 net.cpp:367] relu4 -> conv4 (in-place)
I0324 10:48:24.368055 11569 net.cpp:122] Setting up relu4
I0324 10:48:24.368067 11569 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:48:24.368070 11569 net.cpp:137] Memory required for data: 783398000
I0324 10:48:24.368074 11569 layer_factory.hpp:77] Creating layer conv5
I0324 10:48:24.368083 11569 net.cpp:84] Creating Layer conv5
I0324 10:48:24.368086 11569 net.cpp:406] conv5 <- conv4
I0324 10:48:24.368091 11569 net.cpp:380] conv5 -> conv5
I0324 10:48:24.373931 11569 net.cpp:122] Setting up conv5
I0324 10:48:24.373955 11569 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:48:24.373960 11569 net.cpp:137] Memory required for data: 800703600
I0324 10:48:24.373970 11569 layer_factory.hpp:77] Creating layer relu5
I0324 10:48:24.373976 11569 net.cpp:84] Creating Layer relu5
I0324 10:48:24.373980 11569 net.cpp:406] relu5 <- conv5
I0324 10:48:24.373986 11569 net.cpp:367] relu5 -> conv5 (in-place)
I0324 10:48:24.374390 11569 net.cpp:122] Setting up relu5
I0324 10:48:24.374403 11569 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:48:24.374408 11569 net.cpp:137] Memory required for data: 818009200
I0324 10:48:24.374413 11569 layer_factory.hpp:77] Creating layer pool5
I0324 10:48:24.374419 11569 net.cpp:84] Creating Layer pool5
I0324 10:48:24.374423 11569 net.cpp:406] pool5 <- conv5
I0324 10:48:24.374428 11569 net.cpp:380] pool5 -> pool5
I0324 10:48:24.374461 11569 net.cpp:122] Setting up pool5
I0324 10:48:24.374467 11569 net.cpp:129] Top shape: 100 256 6 6 (921600)
I0324 10:48:24.374471 11569 net.cpp:137] Memory required for data: 821695600
I0324 10:48:24.374475 11569 layer_factory.hpp:77] Creating layer fc6
I0324 10:48:24.374482 11569 net.cpp:84] Creating Layer fc6
I0324 10:48:24.374486 11569 net.cpp:406] fc6 <- pool5
I0324 10:48:24.374491 11569 net.cpp:380] fc6 -> fc6
I0324 10:48:24.631323 11569 net.cpp:122] Setting up fc6
I0324 10:48:24.631351 11569 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:48:24.631356 11569 net.cpp:137] Memory required for data: 823334000
I0324 10:48:24.631366 11569 layer_factory.hpp:77] Creating layer relu6
I0324 10:48:24.631373 11569 net.cpp:84] Creating Layer relu6
I0324 10:48:24.631378 11569 net.cpp:406] relu6 <- fc6
I0324 10:48:24.631384 11569 net.cpp:367] relu6 -> fc6 (in-place)
I0324 10:48:24.631768 11569 net.cpp:122] Setting up relu6
I0324 10:48:24.631778 11569 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:48:24.631783 11569 net.cpp:137] Memory required for data: 824972400
I0324 10:48:24.631788 11569 layer_factory.hpp:77] Creating layer drop6
I0324 10:48:24.631800 11569 net.cpp:84] Creating Layer drop6
I0324 10:48:24.631805 11569 net.cpp:406] drop6 <- fc6
I0324 10:48:24.631809 11569 net.cpp:367] drop6 -> fc6 (in-place)
I0324 10:48:24.631830 11569 net.cpp:122] Setting up drop6
I0324 10:48:24.631836 11569 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:48:24.631840 11569 net.cpp:137] Memory required for data: 826610800
I0324 10:48:24.631844 11569 layer_factory.hpp:77] Creating layer fc7
I0324 10:48:24.631851 11569 net.cpp:84] Creating Layer fc7
I0324 10:48:24.631855 11569 net.cpp:406] fc7 <- fc6
I0324 10:48:24.631860 11569 net.cpp:380] fc7 -> fc7
I0324 10:48:24.743608 11569 net.cpp:122] Setting up fc7
I0324 10:48:24.743638 11569 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:48:24.743643 11569 net.cpp:137] Memory required for data: 828249200
I0324 10:48:24.743651 11569 layer_factory.hpp:77] Creating layer relu7
I0324 10:48:24.743659 11569 net.cpp:84] Creating Layer relu7
I0324 10:48:24.743669 11569 net.cpp:406] relu7 <- fc7
I0324 10:48:24.743685 11569 net.cpp:367] relu7 -> fc7 (in-place)
I0324 10:48:24.744202 11569 net.cpp:122] Setting up relu7
I0324 10:48:24.744213 11569 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:48:24.744217 11569 net.cpp:137] Memory required for data: 829887600
I0324 10:48:24.744221 11569 layer_factory.hpp:77] Creating layer drop7
I0324 10:48:24.744227 11569 net.cpp:84] Creating Layer drop7
I0324 10:48:24.744231 11569 net.cpp:406] drop7 <- fc7
I0324 10:48:24.744237 11569 net.cpp:367] drop7 -> fc7 (in-place)
I0324 10:48:24.744258 11569 net.cpp:122] Setting up drop7
I0324 10:48:24.744263 11569 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:48:24.744267 11569 net.cpp:137] Memory required for data: 831526000
I0324 10:48:24.744271 11569 layer_factory.hpp:77] Creating layer fc8_plantvillage
I0324 10:48:24.744277 11569 net.cpp:84] Creating Layer fc8_plantvillage
I0324 10:48:24.744282 11569 net.cpp:406] fc8_plantvillage <- fc7
I0324 10:48:24.744289 11569 net.cpp:380] fc8_plantvillage -> fc8_plantvillage
I0324 10:48:24.745250 11569 net.cpp:122] Setting up fc8_plantvillage
I0324 10:48:24.745257 11569 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:48:24.745261 11569 net.cpp:137] Memory required for data: 831541200
I0324 10:48:24.745266 11569 layer_factory.hpp:77] Creating layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:48:24.745272 11569 net.cpp:84] Creating Layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:48:24.745276 11569 net.cpp:406] fc8_plantvillage_fc8_plantvillage_0_split <- fc8_plantvillage
I0324 10:48:24.745282 11569 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:48:24.745288 11569 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:48:24.745294 11569 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:48:24.745326 11569 net.cpp:122] Setting up fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:48:24.745332 11569 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:48:24.745337 11569 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:48:24.745340 11569 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:48:24.745343 11569 net.cpp:137] Memory required for data: 831586800
I0324 10:48:24.745347 11569 layer_factory.hpp:77] Creating layer prob
I0324 10:48:24.745353 11569 net.cpp:84] Creating Layer prob
I0324 10:48:24.745357 11569 net.cpp:406] prob <- fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:48:24.745362 11569 net.cpp:380] prob -> prob
I0324 10:48:24.745816 11569 net.cpp:122] Setting up prob
I0324 10:48:24.745826 11569 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:48:24.745831 11569 net.cpp:137] Memory required for data: 831602000
I0324 10:48:24.745836 11569 layer_factory.hpp:77] Creating layer hdf5out
I0324 10:48:24.745843 11569 net.cpp:84] Creating Layer hdf5out
I0324 10:48:24.745848 11569 net.cpp:406] hdf5out <- prob
I0324 10:48:24.745852 11569 net.cpp:406] hdf5out <- label_data_1_split_0
I0324 10:48:24.746592 11569 net.cpp:122] Setting up hdf5out
I0324 10:48:24.746600 11569 net.cpp:137] Memory required for data: 831602000
I0324 10:48:24.746604 11569 layer_factory.hpp:77] Creating layer loss
I0324 10:48:24.746611 11569 net.cpp:84] Creating Layer loss
I0324 10:48:24.746615 11569 net.cpp:406] loss <- fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:48:24.746620 11569 net.cpp:406] loss <- label_data_1_split_1
I0324 10:48:24.746625 11569 net.cpp:380] loss -> loss
I0324 10:48:24.746632 11569 layer_factory.hpp:77] Creating layer loss
I0324 10:48:24.747115 11569 net.cpp:122] Setting up loss
I0324 10:48:24.747125 11569 net.cpp:129] Top shape: (1)
I0324 10:48:24.747129 11569 net.cpp:132]     with loss weight 1
I0324 10:48:24.747148 11569 net.cpp:137] Memory required for data: 831602004
I0324 10:48:24.747151 11569 layer_factory.hpp:77] Creating layer accuracy
I0324 10:48:24.747169 11569 net.cpp:84] Creating Layer accuracy
I0324 10:48:24.747174 11569 net.cpp:406] accuracy <- fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:48:24.747189 11569 net.cpp:406] accuracy <- label_data_1_split_2
I0324 10:48:24.747195 11569 net.cpp:380] accuracy -> accuracy
I0324 10:48:24.747201 11569 net.cpp:122] Setting up accuracy
I0324 10:48:24.747206 11569 net.cpp:129] Top shape: (1)
I0324 10:48:24.747210 11569 net.cpp:137] Memory required for data: 831602008
I0324 10:48:24.747213 11569 net.cpp:200] accuracy does not need backward computation.
I0324 10:48:24.747220 11569 net.cpp:198] loss needs backward computation.
I0324 10:48:24.747225 11569 net.cpp:200] hdf5out does not need backward computation.
I0324 10:48:24.747231 11569 net.cpp:200] prob does not need backward computation.
I0324 10:48:24.747234 11569 net.cpp:198] fc8_plantvillage_fc8_plantvillage_0_split needs backward computation.
I0324 10:48:24.747238 11569 net.cpp:198] fc8_plantvillage needs backward computation.
I0324 10:48:24.747242 11569 net.cpp:198] drop7 needs backward computation.
I0324 10:48:24.747246 11569 net.cpp:198] relu7 needs backward computation.
I0324 10:48:24.747249 11569 net.cpp:198] fc7 needs backward computation.
I0324 10:48:24.747253 11569 net.cpp:198] drop6 needs backward computation.
I0324 10:48:24.747257 11569 net.cpp:198] relu6 needs backward computation.
I0324 10:48:24.747262 11569 net.cpp:198] fc6 needs backward computation.
I0324 10:48:24.747265 11569 net.cpp:198] pool5 needs backward computation.
I0324 10:48:24.747269 11569 net.cpp:198] relu5 needs backward computation.
I0324 10:48:24.747273 11569 net.cpp:198] conv5 needs backward computation.
I0324 10:48:24.747277 11569 net.cpp:198] relu4 needs backward computation.
I0324 10:48:24.747280 11569 net.cpp:198] conv4 needs backward computation.
I0324 10:48:24.747284 11569 net.cpp:198] relu3 needs backward computation.
I0324 10:48:24.747288 11569 net.cpp:198] conv3 needs backward computation.
I0324 10:48:24.747292 11569 net.cpp:198] pool2 needs backward computation.
I0324 10:48:24.747296 11569 net.cpp:198] norm2 needs backward computation.
I0324 10:48:24.747300 11569 net.cpp:198] relu2 needs backward computation.
I0324 10:48:24.747303 11569 net.cpp:198] conv2 needs backward computation.
I0324 10:48:24.747308 11569 net.cpp:198] pool1 needs backward computation.
I0324 10:48:24.747311 11569 net.cpp:198] norm1 needs backward computation.
I0324 10:48:24.747315 11569 net.cpp:198] relu1 needs backward computation.
I0324 10:48:24.747319 11569 net.cpp:198] conv1 needs backward computation.
I0324 10:48:24.747323 11569 net.cpp:200] label_data_1_split does not need backward computation.
I0324 10:48:24.747328 11569 net.cpp:200] data does not need backward computation.
I0324 10:48:24.747331 11569 net.cpp:242] This network produces output accuracy
I0324 10:48:24.747335 11569 net.cpp:242] This network produces output loss
I0324 10:48:24.747351 11569 net.cpp:255] Network initialization done.
I0324 10:48:37.328797 11569 caffe.cpp:290] Running for 1 iterations.
I0324 10:48:37.423871 11569 hdf5_output_layer.cpp:32] Saving HDF5 file hdf5_dumps/iter_2808.h5
I0324 10:48:37.424029 11569 hdf5_output_layer.cpp:37] Successfully saved 100 rows
I0324 10:48:37.424304 11569 caffe.cpp:313] Batch 0, accuracy = 0.91
I0324 10:48:37.424319 11569 caffe.cpp:313] Batch 0, loss = 0.385616
I0324 10:48:37.424324 11569 caffe.cpp:318] Loss: 0.385616
I0324 10:48:37.424329 11569 caffe.cpp:330] accuracy = 0.91
I0324 10:48:37.424336 11569 caffe.cpp:330] loss = 0.385616 (* 1 = 0.385616 loss)
