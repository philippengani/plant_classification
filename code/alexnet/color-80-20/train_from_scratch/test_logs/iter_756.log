I0324 10:43:22.285504 11288 caffe.cpp:275] Use GPU with device ID 0
I0324 10:43:22.285769 11288 caffe.cpp:279] GPU device name: GeForce GTX 1060
I0324 10:43:22.479756 11288 net.cpp:294] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0324 10:43:22.479898 11288 net.cpp:51] Initializing net from parameters: 
state {
  phase: TEST
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto"
  }
  data_param {
    source: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_plantvillage"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_plantvillage"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 38
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc8_plantvillage"
  top: "prob"
  include {
    phase: TEST
  }
}
layer {
  name: "hdf5out"
  type: "HDF5Output"
  bottom: "prob"
  bottom: "label"
  include {
    phase: TEST
  }
  hdf5_output_param {
    file_name: "hdf5_dumps/iter_756.h5"
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
I0324 10:43:22.479995 11288 layer_factory.hpp:77] Creating layer data
I0324 10:43:22.480052 11288 db_lmdb.cpp:35] Opened lmdb /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db
I0324 10:43:22.480072 11288 net.cpp:84] Creating Layer data
I0324 10:43:22.480078 11288 net.cpp:380] data -> data
I0324 10:43:22.480087 11288 net.cpp:380] data -> label
I0324 10:43:22.480093 11288 data_transformer.cpp:25] Loading mean file from: /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto
I0324 10:43:22.488411 11288 data_layer.cpp:45] output data size: 100,3,227,227
I0324 10:43:22.579483 11288 net.cpp:122] Setting up data
I0324 10:43:22.579504 11288 net.cpp:129] Top shape: 100 3 227 227 (15458700)
I0324 10:43:22.579510 11288 net.cpp:129] Top shape: 100 (100)
I0324 10:43:22.579514 11288 net.cpp:137] Memory required for data: 61835200
I0324 10:43:22.579530 11288 layer_factory.hpp:77] Creating layer label_data_1_split
I0324 10:43:22.579540 11288 net.cpp:84] Creating Layer label_data_1_split
I0324 10:43:22.579545 11288 net.cpp:406] label_data_1_split <- label
I0324 10:43:22.579552 11288 net.cpp:380] label_data_1_split -> label_data_1_split_0
I0324 10:43:22.579560 11288 net.cpp:380] label_data_1_split -> label_data_1_split_1
I0324 10:43:22.579566 11288 net.cpp:380] label_data_1_split -> label_data_1_split_2
I0324 10:43:22.579607 11288 net.cpp:122] Setting up label_data_1_split
I0324 10:43:22.579613 11288 net.cpp:129] Top shape: 100 (100)
I0324 10:43:22.579618 11288 net.cpp:129] Top shape: 100 (100)
I0324 10:43:22.579622 11288 net.cpp:129] Top shape: 100 (100)
I0324 10:43:22.579627 11288 net.cpp:137] Memory required for data: 61836400
I0324 10:43:22.579630 11288 layer_factory.hpp:77] Creating layer conv1
I0324 10:43:22.579639 11288 net.cpp:84] Creating Layer conv1
I0324 10:43:22.579644 11288 net.cpp:406] conv1 <- data
I0324 10:43:22.579649 11288 net.cpp:380] conv1 -> conv1
I0324 10:43:23.105692 11288 net.cpp:122] Setting up conv1
I0324 10:43:23.105717 11288 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:43:23.105722 11288 net.cpp:137] Memory required for data: 177996400
I0324 10:43:23.105746 11288 layer_factory.hpp:77] Creating layer relu1
I0324 10:43:23.105754 11288 net.cpp:84] Creating Layer relu1
I0324 10:43:23.105770 11288 net.cpp:406] relu1 <- conv1
I0324 10:43:23.105787 11288 net.cpp:367] relu1 -> conv1 (in-place)
I0324 10:43:23.106142 11288 net.cpp:122] Setting up relu1
I0324 10:43:23.106153 11288 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:43:23.106158 11288 net.cpp:137] Memory required for data: 294156400
I0324 10:43:23.106161 11288 layer_factory.hpp:77] Creating layer norm1
I0324 10:43:23.106169 11288 net.cpp:84] Creating Layer norm1
I0324 10:43:23.106173 11288 net.cpp:406] norm1 <- conv1
I0324 10:43:23.106179 11288 net.cpp:380] norm1 -> norm1
I0324 10:43:23.106508 11288 net.cpp:122] Setting up norm1
I0324 10:43:23.106529 11288 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:43:23.106534 11288 net.cpp:137] Memory required for data: 410316400
I0324 10:43:23.106539 11288 layer_factory.hpp:77] Creating layer pool1
I0324 10:43:23.106544 11288 net.cpp:84] Creating Layer pool1
I0324 10:43:23.106549 11288 net.cpp:406] pool1 <- norm1
I0324 10:43:23.106554 11288 net.cpp:380] pool1 -> pool1
I0324 10:43:23.106578 11288 net.cpp:122] Setting up pool1
I0324 10:43:23.106585 11288 net.cpp:129] Top shape: 100 96 27 27 (6998400)
I0324 10:43:23.106588 11288 net.cpp:137] Memory required for data: 438310000
I0324 10:43:23.106591 11288 layer_factory.hpp:77] Creating layer conv2
I0324 10:43:23.106600 11288 net.cpp:84] Creating Layer conv2
I0324 10:43:23.106604 11288 net.cpp:406] conv2 <- pool1
I0324 10:43:23.106609 11288 net.cpp:380] conv2 -> conv2
I0324 10:43:23.111595 11288 net.cpp:122] Setting up conv2
I0324 10:43:23.111620 11288 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:43:23.111625 11288 net.cpp:137] Memory required for data: 512959600
I0324 10:43:23.111635 11288 layer_factory.hpp:77] Creating layer relu2
I0324 10:43:23.111641 11288 net.cpp:84] Creating Layer relu2
I0324 10:43:23.111646 11288 net.cpp:406] relu2 <- conv2
I0324 10:43:23.111652 11288 net.cpp:367] relu2 -> conv2 (in-place)
I0324 10:43:23.111999 11288 net.cpp:122] Setting up relu2
I0324 10:43:23.112010 11288 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:43:23.112016 11288 net.cpp:137] Memory required for data: 587609200
I0324 10:43:23.112023 11288 layer_factory.hpp:77] Creating layer norm2
I0324 10:43:23.112035 11288 net.cpp:84] Creating Layer norm2
I0324 10:43:23.112040 11288 net.cpp:406] norm2 <- conv2
I0324 10:43:23.112046 11288 net.cpp:380] norm2 -> norm2
I0324 10:43:23.112288 11288 net.cpp:122] Setting up norm2
I0324 10:43:23.112298 11288 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:43:23.112301 11288 net.cpp:137] Memory required for data: 662258800
I0324 10:43:23.112305 11288 layer_factory.hpp:77] Creating layer pool2
I0324 10:43:23.112311 11288 net.cpp:84] Creating Layer pool2
I0324 10:43:23.112315 11288 net.cpp:406] pool2 <- norm2
I0324 10:43:23.112320 11288 net.cpp:380] pool2 -> pool2
I0324 10:43:23.112342 11288 net.cpp:122] Setting up pool2
I0324 10:43:23.112349 11288 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:43:23.112354 11288 net.cpp:137] Memory required for data: 679564400
I0324 10:43:23.112362 11288 layer_factory.hpp:77] Creating layer conv3
I0324 10:43:23.112373 11288 net.cpp:84] Creating Layer conv3
I0324 10:43:23.112377 11288 net.cpp:406] conv3 <- pool2
I0324 10:43:23.112382 11288 net.cpp:380] conv3 -> conv3
I0324 10:43:23.119431 11288 net.cpp:122] Setting up conv3
I0324 10:43:23.119455 11288 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:43:23.119460 11288 net.cpp:137] Memory required for data: 705522800
I0324 10:43:23.119470 11288 layer_factory.hpp:77] Creating layer relu3
I0324 10:43:23.119477 11288 net.cpp:84] Creating Layer relu3
I0324 10:43:23.119482 11288 net.cpp:406] relu3 <- conv3
I0324 10:43:23.119488 11288 net.cpp:367] relu3 -> conv3 (in-place)
I0324 10:43:23.119733 11288 net.cpp:122] Setting up relu3
I0324 10:43:23.119742 11288 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:43:23.119746 11288 net.cpp:137] Memory required for data: 731481200
I0324 10:43:23.119750 11288 layer_factory.hpp:77] Creating layer conv4
I0324 10:43:23.119765 11288 net.cpp:84] Creating Layer conv4
I0324 10:43:23.119768 11288 net.cpp:406] conv4 <- conv3
I0324 10:43:23.119786 11288 net.cpp:380] conv4 -> conv4
I0324 10:43:23.127110 11288 net.cpp:122] Setting up conv4
I0324 10:43:23.127133 11288 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:43:23.127138 11288 net.cpp:137] Memory required for data: 757439600
I0324 10:43:23.127147 11288 layer_factory.hpp:77] Creating layer relu4
I0324 10:43:23.127156 11288 net.cpp:84] Creating Layer relu4
I0324 10:43:23.127161 11288 net.cpp:406] relu4 <- conv4
I0324 10:43:23.127167 11288 net.cpp:367] relu4 -> conv4 (in-place)
I0324 10:43:23.127504 11288 net.cpp:122] Setting up relu4
I0324 10:43:23.127516 11288 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:43:23.127519 11288 net.cpp:137] Memory required for data: 783398000
I0324 10:43:23.127523 11288 layer_factory.hpp:77] Creating layer conv5
I0324 10:43:23.127532 11288 net.cpp:84] Creating Layer conv5
I0324 10:43:23.127537 11288 net.cpp:406] conv5 <- conv4
I0324 10:43:23.127542 11288 net.cpp:380] conv5 -> conv5
I0324 10:43:23.133579 11288 net.cpp:122] Setting up conv5
I0324 10:43:23.133603 11288 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:43:23.133608 11288 net.cpp:137] Memory required for data: 800703600
I0324 10:43:23.133620 11288 layer_factory.hpp:77] Creating layer relu5
I0324 10:43:23.133626 11288 net.cpp:84] Creating Layer relu5
I0324 10:43:23.133631 11288 net.cpp:406] relu5 <- conv5
I0324 10:43:23.133636 11288 net.cpp:367] relu5 -> conv5 (in-place)
I0324 10:43:23.133970 11288 net.cpp:122] Setting up relu5
I0324 10:43:23.133981 11288 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:43:23.133985 11288 net.cpp:137] Memory required for data: 818009200
I0324 10:43:23.133991 11288 layer_factory.hpp:77] Creating layer pool5
I0324 10:43:23.133997 11288 net.cpp:84] Creating Layer pool5
I0324 10:43:23.134002 11288 net.cpp:406] pool5 <- conv5
I0324 10:43:23.134007 11288 net.cpp:380] pool5 -> pool5
I0324 10:43:23.134037 11288 net.cpp:122] Setting up pool5
I0324 10:43:23.134044 11288 net.cpp:129] Top shape: 100 256 6 6 (921600)
I0324 10:43:23.134048 11288 net.cpp:137] Memory required for data: 821695600
I0324 10:43:23.134052 11288 layer_factory.hpp:77] Creating layer fc6
I0324 10:43:23.134058 11288 net.cpp:84] Creating Layer fc6
I0324 10:43:23.134063 11288 net.cpp:406] fc6 <- pool5
I0324 10:43:23.134068 11288 net.cpp:380] fc6 -> fc6
I0324 10:43:23.390318 11288 net.cpp:122] Setting up fc6
I0324 10:43:23.390341 11288 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:43:23.390345 11288 net.cpp:137] Memory required for data: 823334000
I0324 10:43:23.390354 11288 layer_factory.hpp:77] Creating layer relu6
I0324 10:43:23.390362 11288 net.cpp:84] Creating Layer relu6
I0324 10:43:23.390367 11288 net.cpp:406] relu6 <- fc6
I0324 10:43:23.390394 11288 net.cpp:367] relu6 -> fc6 (in-place)
I0324 10:43:23.390787 11288 net.cpp:122] Setting up relu6
I0324 10:43:23.390797 11288 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:43:23.390802 11288 net.cpp:137] Memory required for data: 824972400
I0324 10:43:23.390805 11288 layer_factory.hpp:77] Creating layer drop6
I0324 10:43:23.390811 11288 net.cpp:84] Creating Layer drop6
I0324 10:43:23.390815 11288 net.cpp:406] drop6 <- fc6
I0324 10:43:23.390820 11288 net.cpp:367] drop6 -> fc6 (in-place)
I0324 10:43:23.390837 11288 net.cpp:122] Setting up drop6
I0324 10:43:23.390843 11288 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:43:23.390846 11288 net.cpp:137] Memory required for data: 826610800
I0324 10:43:23.390851 11288 layer_factory.hpp:77] Creating layer fc7
I0324 10:43:23.390856 11288 net.cpp:84] Creating Layer fc7
I0324 10:43:23.390861 11288 net.cpp:406] fc7 <- fc6
I0324 10:43:23.390866 11288 net.cpp:380] fc7 -> fc7
I0324 10:43:23.503341 11288 net.cpp:122] Setting up fc7
I0324 10:43:23.503366 11288 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:43:23.503371 11288 net.cpp:137] Memory required for data: 828249200
I0324 10:43:23.503381 11288 layer_factory.hpp:77] Creating layer relu7
I0324 10:43:23.503387 11288 net.cpp:84] Creating Layer relu7
I0324 10:43:23.503396 11288 net.cpp:406] relu7 <- fc7
I0324 10:43:23.503412 11288 net.cpp:367] relu7 -> fc7 (in-place)
I0324 10:43:23.503893 11288 net.cpp:122] Setting up relu7
I0324 10:43:23.503906 11288 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:43:23.503909 11288 net.cpp:137] Memory required for data: 829887600
I0324 10:43:23.503913 11288 layer_factory.hpp:77] Creating layer drop7
I0324 10:43:23.503919 11288 net.cpp:84] Creating Layer drop7
I0324 10:43:23.503924 11288 net.cpp:406] drop7 <- fc7
I0324 10:43:23.503929 11288 net.cpp:367] drop7 -> fc7 (in-place)
I0324 10:43:23.503948 11288 net.cpp:122] Setting up drop7
I0324 10:43:23.503953 11288 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:43:23.503957 11288 net.cpp:137] Memory required for data: 831526000
I0324 10:43:23.503962 11288 layer_factory.hpp:77] Creating layer fc8_plantvillage
I0324 10:43:23.503968 11288 net.cpp:84] Creating Layer fc8_plantvillage
I0324 10:43:23.503973 11288 net.cpp:406] fc8_plantvillage <- fc7
I0324 10:43:23.503978 11288 net.cpp:380] fc8_plantvillage -> fc8_plantvillage
I0324 10:43:23.504916 11288 net.cpp:122] Setting up fc8_plantvillage
I0324 10:43:23.504923 11288 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:43:23.504927 11288 net.cpp:137] Memory required for data: 831541200
I0324 10:43:23.504932 11288 layer_factory.hpp:77] Creating layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:43:23.504940 11288 net.cpp:84] Creating Layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:43:23.504943 11288 net.cpp:406] fc8_plantvillage_fc8_plantvillage_0_split <- fc8_plantvillage
I0324 10:43:23.504948 11288 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:43:23.504953 11288 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:43:23.504959 11288 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:43:23.504987 11288 net.cpp:122] Setting up fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:43:23.504992 11288 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:43:23.504997 11288 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:43:23.505002 11288 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:43:23.505004 11288 net.cpp:137] Memory required for data: 831586800
I0324 10:43:23.505008 11288 layer_factory.hpp:77] Creating layer prob
I0324 10:43:23.505014 11288 net.cpp:84] Creating Layer prob
I0324 10:43:23.505018 11288 net.cpp:406] prob <- fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:43:23.505023 11288 net.cpp:380] prob -> prob
I0324 10:43:23.505405 11288 net.cpp:122] Setting up prob
I0324 10:43:23.505415 11288 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:43:23.505419 11288 net.cpp:137] Memory required for data: 831602000
I0324 10:43:23.505424 11288 layer_factory.hpp:77] Creating layer hdf5out
I0324 10:43:23.505429 11288 net.cpp:84] Creating Layer hdf5out
I0324 10:43:23.505434 11288 net.cpp:406] hdf5out <- prob
I0324 10:43:23.505439 11288 net.cpp:406] hdf5out <- label_data_1_split_0
I0324 10:43:23.505970 11288 net.cpp:122] Setting up hdf5out
I0324 10:43:23.505976 11288 net.cpp:137] Memory required for data: 831602000
I0324 10:43:23.505980 11288 layer_factory.hpp:77] Creating layer loss
I0324 10:43:23.505986 11288 net.cpp:84] Creating Layer loss
I0324 10:43:23.505990 11288 net.cpp:406] loss <- fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:43:23.505995 11288 net.cpp:406] loss <- label_data_1_split_1
I0324 10:43:23.506000 11288 net.cpp:380] loss -> loss
I0324 10:43:23.506007 11288 layer_factory.hpp:77] Creating layer loss
I0324 10:43:23.506494 11288 net.cpp:122] Setting up loss
I0324 10:43:23.506531 11288 net.cpp:129] Top shape: (1)
I0324 10:43:23.506536 11288 net.cpp:132]     with loss weight 1
I0324 10:43:23.506567 11288 net.cpp:137] Memory required for data: 831602004
I0324 10:43:23.506570 11288 layer_factory.hpp:77] Creating layer accuracy
I0324 10:43:23.506578 11288 net.cpp:84] Creating Layer accuracy
I0324 10:43:23.506582 11288 net.cpp:406] accuracy <- fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:43:23.506597 11288 net.cpp:406] accuracy <- label_data_1_split_2
I0324 10:43:23.506603 11288 net.cpp:380] accuracy -> accuracy
I0324 10:43:23.506610 11288 net.cpp:122] Setting up accuracy
I0324 10:43:23.506618 11288 net.cpp:129] Top shape: (1)
I0324 10:43:23.506623 11288 net.cpp:137] Memory required for data: 831602008
I0324 10:43:23.506625 11288 net.cpp:200] accuracy does not need backward computation.
I0324 10:43:23.506633 11288 net.cpp:198] loss needs backward computation.
I0324 10:43:23.506636 11288 net.cpp:200] hdf5out does not need backward computation.
I0324 10:43:23.506641 11288 net.cpp:200] prob does not need backward computation.
I0324 10:43:23.506645 11288 net.cpp:198] fc8_plantvillage_fc8_plantvillage_0_split needs backward computation.
I0324 10:43:23.506649 11288 net.cpp:198] fc8_plantvillage needs backward computation.
I0324 10:43:23.506654 11288 net.cpp:198] drop7 needs backward computation.
I0324 10:43:23.506656 11288 net.cpp:198] relu7 needs backward computation.
I0324 10:43:23.506660 11288 net.cpp:198] fc7 needs backward computation.
I0324 10:43:23.506664 11288 net.cpp:198] drop6 needs backward computation.
I0324 10:43:23.506669 11288 net.cpp:198] relu6 needs backward computation.
I0324 10:43:23.506672 11288 net.cpp:198] fc6 needs backward computation.
I0324 10:43:23.506676 11288 net.cpp:198] pool5 needs backward computation.
I0324 10:43:23.506680 11288 net.cpp:198] relu5 needs backward computation.
I0324 10:43:23.506685 11288 net.cpp:198] conv5 needs backward computation.
I0324 10:43:23.506688 11288 net.cpp:198] relu4 needs backward computation.
I0324 10:43:23.506692 11288 net.cpp:198] conv4 needs backward computation.
I0324 10:43:23.506696 11288 net.cpp:198] relu3 needs backward computation.
I0324 10:43:23.506700 11288 net.cpp:198] conv3 needs backward computation.
I0324 10:43:23.506705 11288 net.cpp:198] pool2 needs backward computation.
I0324 10:43:23.506708 11288 net.cpp:198] norm2 needs backward computation.
I0324 10:43:23.506712 11288 net.cpp:198] relu2 needs backward computation.
I0324 10:43:23.506716 11288 net.cpp:198] conv2 needs backward computation.
I0324 10:43:23.506719 11288 net.cpp:198] pool1 needs backward computation.
I0324 10:43:23.506724 11288 net.cpp:198] norm1 needs backward computation.
I0324 10:43:23.506728 11288 net.cpp:198] relu1 needs backward computation.
I0324 10:43:23.506731 11288 net.cpp:198] conv1 needs backward computation.
I0324 10:43:23.506736 11288 net.cpp:200] label_data_1_split does not need backward computation.
I0324 10:43:23.506741 11288 net.cpp:200] data does not need backward computation.
I0324 10:43:23.506744 11288 net.cpp:242] This network produces output accuracy
I0324 10:43:23.506748 11288 net.cpp:242] This network produces output loss
I0324 10:43:23.506762 11288 net.cpp:255] Network initialization done.
I0324 10:44:13.617260 11288 caffe.cpp:290] Running for 1 iterations.
I0324 10:44:13.706193 11288 hdf5_output_layer.cpp:32] Saving HDF5 file hdf5_dumps/iter_756.h5
I0324 10:44:13.706348 11288 hdf5_output_layer.cpp:37] Successfully saved 100 rows
I0324 10:44:13.706651 11288 caffe.cpp:313] Batch 0, accuracy = 0.78
I0324 10:44:13.706668 11288 caffe.cpp:313] Batch 0, loss = 0.690597
I0324 10:44:13.706674 11288 caffe.cpp:318] Loss: 0.690597
I0324 10:44:13.706679 11288 caffe.cpp:330] accuracy = 0.78
I0324 10:44:13.706686 11288 caffe.cpp:330] loss = 0.690597 (* 1 = 0.690597 loss)
