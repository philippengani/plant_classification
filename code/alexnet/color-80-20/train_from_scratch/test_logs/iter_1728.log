I0324 10:47:05.081948 11411 caffe.cpp:275] Use GPU with device ID 0
I0324 10:47:05.082144 11411 caffe.cpp:279] GPU device name: GeForce GTX 1060
I0324 10:47:05.262370 11411 net.cpp:294] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0324 10:47:05.262488 11411 net.cpp:51] Initializing net from parameters: 
state {
  phase: TEST
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto"
  }
  data_param {
    source: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_plantvillage"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_plantvillage"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 38
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc8_plantvillage"
  top: "prob"
  include {
    phase: TEST
  }
}
layer {
  name: "hdf5out"
  type: "HDF5Output"
  bottom: "prob"
  bottom: "label"
  include {
    phase: TEST
  }
  hdf5_output_param {
    file_name: "hdf5_dumps/iter_1728.h5"
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
I0324 10:47:05.262581 11411 layer_factory.hpp:77] Creating layer data
I0324 10:47:05.347962 11411 db_lmdb.cpp:35] Opened lmdb /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db
I0324 10:47:05.348101 11411 net.cpp:84] Creating Layer data
I0324 10:47:05.348142 11411 net.cpp:380] data -> data
I0324 10:47:05.348199 11411 net.cpp:380] data -> label
I0324 10:47:05.348234 11411 data_transformer.cpp:25] Loading mean file from: /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto
I0324 10:47:05.382483 11411 data_layer.cpp:45] output data size: 100,3,227,227
I0324 10:47:05.479868 11411 net.cpp:122] Setting up data
I0324 10:47:05.479897 11411 net.cpp:129] Top shape: 100 3 227 227 (15458700)
I0324 10:47:05.479904 11411 net.cpp:129] Top shape: 100 (100)
I0324 10:47:05.479929 11411 net.cpp:137] Memory required for data: 61835200
I0324 10:47:05.479936 11411 layer_factory.hpp:77] Creating layer label_data_1_split
I0324 10:47:05.479946 11411 net.cpp:84] Creating Layer label_data_1_split
I0324 10:47:05.479952 11411 net.cpp:406] label_data_1_split <- label
I0324 10:47:05.479976 11411 net.cpp:380] label_data_1_split -> label_data_1_split_0
I0324 10:47:05.479998 11411 net.cpp:380] label_data_1_split -> label_data_1_split_1
I0324 10:47:05.480005 11411 net.cpp:380] label_data_1_split -> label_data_1_split_2
I0324 10:47:05.480072 11411 net.cpp:122] Setting up label_data_1_split
I0324 10:47:05.480080 11411 net.cpp:129] Top shape: 100 (100)
I0324 10:47:05.480085 11411 net.cpp:129] Top shape: 100 (100)
I0324 10:47:05.480089 11411 net.cpp:129] Top shape: 100 (100)
I0324 10:47:05.480093 11411 net.cpp:137] Memory required for data: 61836400
I0324 10:47:05.480098 11411 layer_factory.hpp:77] Creating layer conv1
I0324 10:47:05.480105 11411 net.cpp:84] Creating Layer conv1
I0324 10:47:05.480110 11411 net.cpp:406] conv1 <- data
I0324 10:47:05.480115 11411 net.cpp:380] conv1 -> conv1
I0324 10:47:05.981571 11411 net.cpp:122] Setting up conv1
I0324 10:47:05.981612 11411 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:47:05.981621 11411 net.cpp:137] Memory required for data: 177996400
I0324 10:47:05.981652 11411 layer_factory.hpp:77] Creating layer relu1
I0324 10:47:05.981663 11411 net.cpp:84] Creating Layer relu1
I0324 10:47:05.981679 11411 net.cpp:406] relu1 <- conv1
I0324 10:47:05.981699 11411 net.cpp:367] relu1 -> conv1 (in-place)
I0324 10:47:05.982038 11411 net.cpp:122] Setting up relu1
I0324 10:47:05.982048 11411 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:47:05.982053 11411 net.cpp:137] Memory required for data: 294156400
I0324 10:47:05.982057 11411 layer_factory.hpp:77] Creating layer norm1
I0324 10:47:05.982064 11411 net.cpp:84] Creating Layer norm1
I0324 10:47:05.982069 11411 net.cpp:406] norm1 <- conv1
I0324 10:47:05.982074 11411 net.cpp:380] norm1 -> norm1
I0324 10:47:05.982404 11411 net.cpp:122] Setting up norm1
I0324 10:47:05.982414 11411 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:47:05.982419 11411 net.cpp:137] Memory required for data: 410316400
I0324 10:47:05.982424 11411 layer_factory.hpp:77] Creating layer pool1
I0324 10:47:05.982429 11411 net.cpp:84] Creating Layer pool1
I0324 10:47:05.982434 11411 net.cpp:406] pool1 <- norm1
I0324 10:47:05.982439 11411 net.cpp:380] pool1 -> pool1
I0324 10:47:05.982462 11411 net.cpp:122] Setting up pool1
I0324 10:47:05.982468 11411 net.cpp:129] Top shape: 100 96 27 27 (6998400)
I0324 10:47:05.982472 11411 net.cpp:137] Memory required for data: 438310000
I0324 10:47:05.982476 11411 layer_factory.hpp:77] Creating layer conv2
I0324 10:47:05.982484 11411 net.cpp:84] Creating Layer conv2
I0324 10:47:05.982488 11411 net.cpp:406] conv2 <- pool1
I0324 10:47:05.982493 11411 net.cpp:380] conv2 -> conv2
I0324 10:47:05.987470 11411 net.cpp:122] Setting up conv2
I0324 10:47:05.987496 11411 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:47:05.987500 11411 net.cpp:137] Memory required for data: 512959600
I0324 10:47:05.987510 11411 layer_factory.hpp:77] Creating layer relu2
I0324 10:47:05.987517 11411 net.cpp:84] Creating Layer relu2
I0324 10:47:05.987521 11411 net.cpp:406] relu2 <- conv2
I0324 10:47:05.987527 11411 net.cpp:367] relu2 -> conv2 (in-place)
I0324 10:47:05.987857 11411 net.cpp:122] Setting up relu2
I0324 10:47:05.987869 11411 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:47:05.987874 11411 net.cpp:137] Memory required for data: 587609200
I0324 10:47:05.987877 11411 layer_factory.hpp:77] Creating layer norm2
I0324 10:47:05.987884 11411 net.cpp:84] Creating Layer norm2
I0324 10:47:05.987888 11411 net.cpp:406] norm2 <- conv2
I0324 10:47:05.987895 11411 net.cpp:380] norm2 -> norm2
I0324 10:47:05.988143 11411 net.cpp:122] Setting up norm2
I0324 10:47:05.988152 11411 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:47:05.988157 11411 net.cpp:137] Memory required for data: 662258800
I0324 10:47:05.988162 11411 layer_factory.hpp:77] Creating layer pool2
I0324 10:47:05.988166 11411 net.cpp:84] Creating Layer pool2
I0324 10:47:05.988171 11411 net.cpp:406] pool2 <- norm2
I0324 10:47:05.988176 11411 net.cpp:380] pool2 -> pool2
I0324 10:47:05.988196 11411 net.cpp:122] Setting up pool2
I0324 10:47:05.988202 11411 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:47:05.988206 11411 net.cpp:137] Memory required for data: 679564400
I0324 10:47:05.988210 11411 layer_factory.hpp:77] Creating layer conv3
I0324 10:47:05.988219 11411 net.cpp:84] Creating Layer conv3
I0324 10:47:05.988222 11411 net.cpp:406] conv3 <- pool2
I0324 10:47:05.988227 11411 net.cpp:380] conv3 -> conv3
I0324 10:47:05.995142 11411 net.cpp:122] Setting up conv3
I0324 10:47:05.995163 11411 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:05.995167 11411 net.cpp:137] Memory required for data: 705522800
I0324 10:47:05.995177 11411 layer_factory.hpp:77] Creating layer relu3
I0324 10:47:05.995183 11411 net.cpp:84] Creating Layer relu3
I0324 10:47:05.995188 11411 net.cpp:406] relu3 <- conv3
I0324 10:47:05.995193 11411 net.cpp:367] relu3 -> conv3 (in-place)
I0324 10:47:05.995441 11411 net.cpp:122] Setting up relu3
I0324 10:47:05.995450 11411 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:05.995455 11411 net.cpp:137] Memory required for data: 731481200
I0324 10:47:05.995458 11411 layer_factory.hpp:77] Creating layer conv4
I0324 10:47:05.995474 11411 net.cpp:84] Creating Layer conv4
I0324 10:47:05.995479 11411 net.cpp:406] conv4 <- conv3
I0324 10:47:05.995496 11411 net.cpp:380] conv4 -> conv4
I0324 10:47:06.003157 11411 net.cpp:122] Setting up conv4
I0324 10:47:06.003187 11411 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:06.003191 11411 net.cpp:137] Memory required for data: 757439600
I0324 10:47:06.003201 11411 layer_factory.hpp:77] Creating layer relu4
I0324 10:47:06.003208 11411 net.cpp:84] Creating Layer relu4
I0324 10:47:06.003213 11411 net.cpp:406] relu4 <- conv4
I0324 10:47:06.003221 11411 net.cpp:367] relu4 -> conv4 (in-place)
I0324 10:47:06.003624 11411 net.cpp:122] Setting up relu4
I0324 10:47:06.003634 11411 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:06.003639 11411 net.cpp:137] Memory required for data: 783398000
I0324 10:47:06.003643 11411 layer_factory.hpp:77] Creating layer conv5
I0324 10:47:06.003652 11411 net.cpp:84] Creating Layer conv5
I0324 10:47:06.003657 11411 net.cpp:406] conv5 <- conv4
I0324 10:47:06.003665 11411 net.cpp:380] conv5 -> conv5
I0324 10:47:06.010072 11411 net.cpp:122] Setting up conv5
I0324 10:47:06.010098 11411 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:47:06.010102 11411 net.cpp:137] Memory required for data: 800703600
I0324 10:47:06.010113 11411 layer_factory.hpp:77] Creating layer relu5
I0324 10:47:06.010121 11411 net.cpp:84] Creating Layer relu5
I0324 10:47:06.010126 11411 net.cpp:406] relu5 <- conv5
I0324 10:47:06.010133 11411 net.cpp:367] relu5 -> conv5 (in-place)
I0324 10:47:06.010545 11411 net.cpp:122] Setting up relu5
I0324 10:47:06.010555 11411 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:47:06.010560 11411 net.cpp:137] Memory required for data: 818009200
I0324 10:47:06.010563 11411 layer_factory.hpp:77] Creating layer pool5
I0324 10:47:06.010571 11411 net.cpp:84] Creating Layer pool5
I0324 10:47:06.010576 11411 net.cpp:406] pool5 <- conv5
I0324 10:47:06.010581 11411 net.cpp:380] pool5 -> pool5
I0324 10:47:06.010625 11411 net.cpp:122] Setting up pool5
I0324 10:47:06.010632 11411 net.cpp:129] Top shape: 100 256 6 6 (921600)
I0324 10:47:06.010637 11411 net.cpp:137] Memory required for data: 821695600
I0324 10:47:06.010640 11411 layer_factory.hpp:77] Creating layer fc6
I0324 10:47:06.010648 11411 net.cpp:84] Creating Layer fc6
I0324 10:47:06.010653 11411 net.cpp:406] fc6 <- pool5
I0324 10:47:06.010658 11411 net.cpp:380] fc6 -> fc6
I0324 10:47:06.259272 11411 net.cpp:122] Setting up fc6
I0324 10:47:06.259304 11411 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:06.259310 11411 net.cpp:137] Memory required for data: 823334000
I0324 10:47:06.259322 11411 layer_factory.hpp:77] Creating layer relu6
I0324 10:47:06.259330 11411 net.cpp:84] Creating Layer relu6
I0324 10:47:06.259335 11411 net.cpp:406] relu6 <- fc6
I0324 10:47:06.259343 11411 net.cpp:367] relu6 -> fc6 (in-place)
I0324 10:47:06.259711 11411 net.cpp:122] Setting up relu6
I0324 10:47:06.259719 11411 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:06.259723 11411 net.cpp:137] Memory required for data: 824972400
I0324 10:47:06.259727 11411 layer_factory.hpp:77] Creating layer drop6
I0324 10:47:06.259737 11411 net.cpp:84] Creating Layer drop6
I0324 10:47:06.259742 11411 net.cpp:406] drop6 <- fc6
I0324 10:47:06.259748 11411 net.cpp:367] drop6 -> fc6 (in-place)
I0324 10:47:06.259768 11411 net.cpp:122] Setting up drop6
I0324 10:47:06.259774 11411 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:06.259778 11411 net.cpp:137] Memory required for data: 826610800
I0324 10:47:06.259783 11411 layer_factory.hpp:77] Creating layer fc7
I0324 10:47:06.259788 11411 net.cpp:84] Creating Layer fc7
I0324 10:47:06.259793 11411 net.cpp:406] fc7 <- fc6
I0324 10:47:06.259799 11411 net.cpp:380] fc7 -> fc7
I0324 10:47:06.368649 11411 net.cpp:122] Setting up fc7
I0324 10:47:06.368680 11411 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:06.368687 11411 net.cpp:137] Memory required for data: 828249200
I0324 10:47:06.368700 11411 layer_factory.hpp:77] Creating layer relu7
I0324 10:47:06.368707 11411 net.cpp:84] Creating Layer relu7
I0324 10:47:06.368719 11411 net.cpp:406] relu7 <- fc7
I0324 10:47:06.368736 11411 net.cpp:367] relu7 -> fc7 (in-place)
I0324 10:47:06.369249 11411 net.cpp:122] Setting up relu7
I0324 10:47:06.369259 11411 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:06.369264 11411 net.cpp:137] Memory required for data: 829887600
I0324 10:47:06.369268 11411 layer_factory.hpp:77] Creating layer drop7
I0324 10:47:06.369277 11411 net.cpp:84] Creating Layer drop7
I0324 10:47:06.369280 11411 net.cpp:406] drop7 <- fc7
I0324 10:47:06.369287 11411 net.cpp:367] drop7 -> fc7 (in-place)
I0324 10:47:06.369318 11411 net.cpp:122] Setting up drop7
I0324 10:47:06.369324 11411 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:06.369328 11411 net.cpp:137] Memory required for data: 831526000
I0324 10:47:06.369333 11411 layer_factory.hpp:77] Creating layer fc8_plantvillage
I0324 10:47:06.369340 11411 net.cpp:84] Creating Layer fc8_plantvillage
I0324 10:47:06.369344 11411 net.cpp:406] fc8_plantvillage <- fc7
I0324 10:47:06.369350 11411 net.cpp:380] fc8_plantvillage -> fc8_plantvillage
I0324 10:47:06.370316 11411 net.cpp:122] Setting up fc8_plantvillage
I0324 10:47:06.370323 11411 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:06.370328 11411 net.cpp:137] Memory required for data: 831541200
I0324 10:47:06.370334 11411 layer_factory.hpp:77] Creating layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:47:06.370342 11411 net.cpp:84] Creating Layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:47:06.370345 11411 net.cpp:406] fc8_plantvillage_fc8_plantvillage_0_split <- fc8_plantvillage
I0324 10:47:06.370352 11411 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:47:06.370357 11411 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:47:06.370362 11411 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:47:06.370393 11411 net.cpp:122] Setting up fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:47:06.370399 11411 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:06.370404 11411 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:06.370409 11411 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:06.370412 11411 net.cpp:137] Memory required for data: 831586800
I0324 10:47:06.370416 11411 layer_factory.hpp:77] Creating layer prob
I0324 10:47:06.370422 11411 net.cpp:84] Creating Layer prob
I0324 10:47:06.370427 11411 net.cpp:406] prob <- fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:47:06.370432 11411 net.cpp:380] prob -> prob
I0324 10:47:06.370880 11411 net.cpp:122] Setting up prob
I0324 10:47:06.370890 11411 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:06.370895 11411 net.cpp:137] Memory required for data: 831602000
I0324 10:47:06.370899 11411 layer_factory.hpp:77] Creating layer hdf5out
I0324 10:47:06.370908 11411 net.cpp:84] Creating Layer hdf5out
I0324 10:47:06.370911 11411 net.cpp:406] hdf5out <- prob
I0324 10:47:06.370916 11411 net.cpp:406] hdf5out <- label_data_1_split_0
I0324 10:47:06.371678 11411 net.cpp:122] Setting up hdf5out
I0324 10:47:06.371685 11411 net.cpp:137] Memory required for data: 831602000
I0324 10:47:06.371690 11411 layer_factory.hpp:77] Creating layer loss
I0324 10:47:06.371696 11411 net.cpp:84] Creating Layer loss
I0324 10:47:06.371701 11411 net.cpp:406] loss <- fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:47:06.371706 11411 net.cpp:406] loss <- label_data_1_split_1
I0324 10:47:06.371712 11411 net.cpp:380] loss -> loss
I0324 10:47:06.371721 11411 layer_factory.hpp:77] Creating layer loss
I0324 10:47:06.372189 11411 net.cpp:122] Setting up loss
I0324 10:47:06.372197 11411 net.cpp:129] Top shape: (1)
I0324 10:47:06.372202 11411 net.cpp:132]     with loss weight 1
I0324 10:47:06.372220 11411 net.cpp:137] Memory required for data: 831602004
I0324 10:47:06.372225 11411 layer_factory.hpp:77] Creating layer accuracy
I0324 10:47:06.372231 11411 net.cpp:84] Creating Layer accuracy
I0324 10:47:06.372236 11411 net.cpp:406] accuracy <- fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:47:06.372251 11411 net.cpp:406] accuracy <- label_data_1_split_2
I0324 10:47:06.372258 11411 net.cpp:380] accuracy -> accuracy
I0324 10:47:06.372267 11411 net.cpp:122] Setting up accuracy
I0324 10:47:06.372272 11411 net.cpp:129] Top shape: (1)
I0324 10:47:06.372275 11411 net.cpp:137] Memory required for data: 831602008
I0324 10:47:06.372282 11411 net.cpp:200] accuracy does not need backward computation.
I0324 10:47:06.372298 11411 net.cpp:198] loss needs backward computation.
I0324 10:47:06.372303 11411 net.cpp:200] hdf5out does not need backward computation.
I0324 10:47:06.372308 11411 net.cpp:200] prob does not need backward computation.
I0324 10:47:06.372311 11411 net.cpp:198] fc8_plantvillage_fc8_plantvillage_0_split needs backward computation.
I0324 10:47:06.372315 11411 net.cpp:198] fc8_plantvillage needs backward computation.
I0324 10:47:06.372320 11411 net.cpp:198] drop7 needs backward computation.
I0324 10:47:06.372326 11411 net.cpp:198] relu7 needs backward computation.
I0324 10:47:06.372330 11411 net.cpp:198] fc7 needs backward computation.
I0324 10:47:06.372334 11411 net.cpp:198] drop6 needs backward computation.
I0324 10:47:06.372339 11411 net.cpp:198] relu6 needs backward computation.
I0324 10:47:06.372344 11411 net.cpp:198] fc6 needs backward computation.
I0324 10:47:06.372347 11411 net.cpp:198] pool5 needs backward computation.
I0324 10:47:06.372351 11411 net.cpp:198] relu5 needs backward computation.
I0324 10:47:06.372355 11411 net.cpp:198] conv5 needs backward computation.
I0324 10:47:06.372360 11411 net.cpp:198] relu4 needs backward computation.
I0324 10:47:06.372364 11411 net.cpp:198] conv4 needs backward computation.
I0324 10:47:06.372368 11411 net.cpp:198] relu3 needs backward computation.
I0324 10:47:06.372372 11411 net.cpp:198] conv3 needs backward computation.
I0324 10:47:06.372377 11411 net.cpp:198] pool2 needs backward computation.
I0324 10:47:06.372381 11411 net.cpp:198] norm2 needs backward computation.
I0324 10:47:06.372385 11411 net.cpp:198] relu2 needs backward computation.
I0324 10:47:06.372390 11411 net.cpp:198] conv2 needs backward computation.
I0324 10:47:06.372395 11411 net.cpp:198] pool1 needs backward computation.
I0324 10:47:06.372400 11411 net.cpp:198] norm1 needs backward computation.
I0324 10:47:06.372403 11411 net.cpp:198] relu1 needs backward computation.
I0324 10:47:06.372407 11411 net.cpp:198] conv1 needs backward computation.
I0324 10:47:06.372412 11411 net.cpp:200] label_data_1_split does not need backward computation.
I0324 10:47:06.372417 11411 net.cpp:200] data does not need backward computation.
I0324 10:47:06.372421 11411 net.cpp:242] This network produces output accuracy
I0324 10:47:06.372426 11411 net.cpp:242] This network produces output loss
I0324 10:47:06.372440 11411 net.cpp:255] Network initialization done.
I0324 10:47:13.883966 11411 caffe.cpp:290] Running for 1 iterations.
I0324 10:47:13.961971 11411 hdf5_output_layer.cpp:32] Saving HDF5 file hdf5_dumps/iter_1728.h5
I0324 10:47:13.962117 11411 hdf5_output_layer.cpp:37] Successfully saved 100 rows
I0324 10:47:13.962352 11411 caffe.cpp:313] Batch 0, accuracy = 0.89
I0324 10:47:13.962397 11411 caffe.cpp:313] Batch 0, loss = 0.392334
I0324 10:47:13.962402 11411 caffe.cpp:318] Loss: 0.392334
I0324 10:47:13.962407 11411 caffe.cpp:330] accuracy = 0.89
I0324 10:47:13.962415 11411 caffe.cpp:330] loss = 0.392334 (* 1 = 0.392334 loss)
