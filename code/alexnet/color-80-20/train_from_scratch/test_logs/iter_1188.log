I0324 10:45:52.868976 11366 caffe.cpp:275] Use GPU with device ID 0
I0324 10:45:52.869176 11366 caffe.cpp:279] GPU device name: GeForce GTX 1060
I0324 10:45:53.215711 11366 net.cpp:294] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0324 10:45:53.475548 11366 net.cpp:51] Initializing net from parameters: 
state {
  phase: TEST
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto"
  }
  data_param {
    source: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_plantvillage"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_plantvillage"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 38
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc8_plantvillage"
  top: "prob"
  include {
    phase: TEST
  }
}
layer {
  name: "hdf5out"
  type: "HDF5Output"
  bottom: "prob"
  bottom: "label"
  include {
    phase: TEST
  }
  hdf5_output_param {
    file_name: "hdf5_dumps/iter_1188.h5"
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
I0324 10:45:53.475980 11366 layer_factory.hpp:77] Creating layer data
I0324 10:45:53.476189 11366 db_lmdb.cpp:35] Opened lmdb /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db
I0324 10:45:53.476280 11366 net.cpp:84] Creating Layer data
I0324 10:45:53.476310 11366 net.cpp:380] data -> data
I0324 10:45:53.476346 11366 net.cpp:380] data -> label
I0324 10:45:53.476372 11366 data_transformer.cpp:25] Loading mean file from: /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto
I0324 10:45:53.506876 11366 data_layer.cpp:45] output data size: 100,3,227,227
I0324 10:45:53.611234 11366 net.cpp:122] Setting up data
I0324 10:45:53.611265 11366 net.cpp:129] Top shape: 100 3 227 227 (15458700)
I0324 10:45:53.611272 11366 net.cpp:129] Top shape: 100 (100)
I0324 10:45:53.611284 11366 net.cpp:137] Memory required for data: 61835200
I0324 10:45:53.611294 11366 layer_factory.hpp:77] Creating layer label_data_1_split
I0324 10:45:53.611342 11366 net.cpp:84] Creating Layer label_data_1_split
I0324 10:45:53.611366 11366 net.cpp:406] label_data_1_split <- label
I0324 10:45:53.611387 11366 net.cpp:380] label_data_1_split -> label_data_1_split_0
I0324 10:45:53.611404 11366 net.cpp:380] label_data_1_split -> label_data_1_split_1
I0324 10:45:53.611413 11366 net.cpp:380] label_data_1_split -> label_data_1_split_2
I0324 10:45:53.611510 11366 net.cpp:122] Setting up label_data_1_split
I0324 10:45:53.611521 11366 net.cpp:129] Top shape: 100 (100)
I0324 10:45:53.611528 11366 net.cpp:129] Top shape: 100 (100)
I0324 10:45:53.611536 11366 net.cpp:129] Top shape: 100 (100)
I0324 10:45:53.611541 11366 net.cpp:137] Memory required for data: 61836400
I0324 10:45:53.611546 11366 layer_factory.hpp:77] Creating layer conv1
I0324 10:45:53.611562 11366 net.cpp:84] Creating Layer conv1
I0324 10:45:53.611569 11366 net.cpp:406] conv1 <- data
I0324 10:45:53.611577 11366 net.cpp:380] conv1 -> conv1
I0324 10:45:54.139438 11366 net.cpp:122] Setting up conv1
I0324 10:45:54.139511 11366 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:45:54.139516 11366 net.cpp:137] Memory required for data: 177996400
I0324 10:45:54.139559 11366 layer_factory.hpp:77] Creating layer relu1
I0324 10:45:54.139570 11366 net.cpp:84] Creating Layer relu1
I0324 10:45:54.139609 11366 net.cpp:406] relu1 <- conv1
I0324 10:45:54.139668 11366 net.cpp:367] relu1 -> conv1 (in-place)
I0324 10:45:54.140048 11366 net.cpp:122] Setting up relu1
I0324 10:45:54.140059 11366 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:45:54.140064 11366 net.cpp:137] Memory required for data: 294156400
I0324 10:45:54.140067 11366 layer_factory.hpp:77] Creating layer norm1
I0324 10:45:54.140074 11366 net.cpp:84] Creating Layer norm1
I0324 10:45:54.140079 11366 net.cpp:406] norm1 <- conv1
I0324 10:45:54.140084 11366 net.cpp:380] norm1 -> norm1
I0324 10:45:54.140417 11366 net.cpp:122] Setting up norm1
I0324 10:45:54.140427 11366 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:45:54.140432 11366 net.cpp:137] Memory required for data: 410316400
I0324 10:45:54.140436 11366 layer_factory.hpp:77] Creating layer pool1
I0324 10:45:54.140441 11366 net.cpp:84] Creating Layer pool1
I0324 10:45:54.140445 11366 net.cpp:406] pool1 <- norm1
I0324 10:45:54.140450 11366 net.cpp:380] pool1 -> pool1
I0324 10:45:54.140475 11366 net.cpp:122] Setting up pool1
I0324 10:45:54.140481 11366 net.cpp:129] Top shape: 100 96 27 27 (6998400)
I0324 10:45:54.140486 11366 net.cpp:137] Memory required for data: 438310000
I0324 10:45:54.140489 11366 layer_factory.hpp:77] Creating layer conv2
I0324 10:45:54.140497 11366 net.cpp:84] Creating Layer conv2
I0324 10:45:54.140501 11366 net.cpp:406] conv2 <- pool1
I0324 10:45:54.140506 11366 net.cpp:380] conv2 -> conv2
I0324 10:45:54.145576 11366 net.cpp:122] Setting up conv2
I0324 10:45:54.145601 11366 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:45:54.145606 11366 net.cpp:137] Memory required for data: 512959600
I0324 10:45:54.145615 11366 layer_factory.hpp:77] Creating layer relu2
I0324 10:45:54.145622 11366 net.cpp:84] Creating Layer relu2
I0324 10:45:54.145627 11366 net.cpp:406] relu2 <- conv2
I0324 10:45:54.145632 11366 net.cpp:367] relu2 -> conv2 (in-place)
I0324 10:45:54.145967 11366 net.cpp:122] Setting up relu2
I0324 10:45:54.145977 11366 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:45:54.145982 11366 net.cpp:137] Memory required for data: 587609200
I0324 10:45:54.145985 11366 layer_factory.hpp:77] Creating layer norm2
I0324 10:45:54.145992 11366 net.cpp:84] Creating Layer norm2
I0324 10:45:54.145997 11366 net.cpp:406] norm2 <- conv2
I0324 10:45:54.146001 11366 net.cpp:380] norm2 -> norm2
I0324 10:45:54.146260 11366 net.cpp:122] Setting up norm2
I0324 10:45:54.146268 11366 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:45:54.146272 11366 net.cpp:137] Memory required for data: 662258800
I0324 10:45:54.146276 11366 layer_factory.hpp:77] Creating layer pool2
I0324 10:45:54.146281 11366 net.cpp:84] Creating Layer pool2
I0324 10:45:54.146286 11366 net.cpp:406] pool2 <- norm2
I0324 10:45:54.146291 11366 net.cpp:380] pool2 -> pool2
I0324 10:45:54.146311 11366 net.cpp:122] Setting up pool2
I0324 10:45:54.146317 11366 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:45:54.146322 11366 net.cpp:137] Memory required for data: 679564400
I0324 10:45:54.146325 11366 layer_factory.hpp:77] Creating layer conv3
I0324 10:45:54.146333 11366 net.cpp:84] Creating Layer conv3
I0324 10:45:54.146337 11366 net.cpp:406] conv3 <- pool2
I0324 10:45:54.146342 11366 net.cpp:380] conv3 -> conv3
I0324 10:45:54.153259 11366 net.cpp:122] Setting up conv3
I0324 10:45:54.153281 11366 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:45:54.153286 11366 net.cpp:137] Memory required for data: 705522800
I0324 10:45:54.153295 11366 layer_factory.hpp:77] Creating layer relu3
I0324 10:45:54.153301 11366 net.cpp:84] Creating Layer relu3
I0324 10:45:54.153306 11366 net.cpp:406] relu3 <- conv3
I0324 10:45:54.153311 11366 net.cpp:367] relu3 -> conv3 (in-place)
I0324 10:45:54.153601 11366 net.cpp:122] Setting up relu3
I0324 10:45:54.153610 11366 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:45:54.153615 11366 net.cpp:137] Memory required for data: 731481200
I0324 10:45:54.153618 11366 layer_factory.hpp:77] Creating layer conv4
I0324 10:45:54.153635 11366 net.cpp:84] Creating Layer conv4
I0324 10:45:54.153638 11366 net.cpp:406] conv4 <- conv3
I0324 10:45:54.153656 11366 net.cpp:380] conv4 -> conv4
I0324 10:45:54.161708 11366 net.cpp:122] Setting up conv4
I0324 10:45:54.161736 11366 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:45:54.161739 11366 net.cpp:137] Memory required for data: 757439600
I0324 10:45:54.161748 11366 layer_factory.hpp:77] Creating layer relu4
I0324 10:45:54.161756 11366 net.cpp:84] Creating Layer relu4
I0324 10:45:54.161761 11366 net.cpp:406] relu4 <- conv4
I0324 10:45:54.161767 11366 net.cpp:367] relu4 -> conv4 (in-place)
I0324 10:45:54.162160 11366 net.cpp:122] Setting up relu4
I0324 10:45:54.162173 11366 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:45:54.162176 11366 net.cpp:137] Memory required for data: 783398000
I0324 10:45:54.162180 11366 layer_factory.hpp:77] Creating layer conv5
I0324 10:45:54.162190 11366 net.cpp:84] Creating Layer conv5
I0324 10:45:54.162195 11366 net.cpp:406] conv5 <- conv4
I0324 10:45:54.162200 11366 net.cpp:380] conv5 -> conv5
I0324 10:45:54.168651 11366 net.cpp:122] Setting up conv5
I0324 10:45:54.168676 11366 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:45:54.168681 11366 net.cpp:137] Memory required for data: 800703600
I0324 10:45:54.168691 11366 layer_factory.hpp:77] Creating layer relu5
I0324 10:45:54.168699 11366 net.cpp:84] Creating Layer relu5
I0324 10:45:54.168704 11366 net.cpp:406] relu5 <- conv5
I0324 10:45:54.168709 11366 net.cpp:367] relu5 -> conv5 (in-place)
I0324 10:45:54.169104 11366 net.cpp:122] Setting up relu5
I0324 10:45:54.169116 11366 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:45:54.169119 11366 net.cpp:137] Memory required for data: 818009200
I0324 10:45:54.169123 11366 layer_factory.hpp:77] Creating layer pool5
I0324 10:45:54.169131 11366 net.cpp:84] Creating Layer pool5
I0324 10:45:54.169134 11366 net.cpp:406] pool5 <- conv5
I0324 10:45:54.169139 11366 net.cpp:380] pool5 -> pool5
I0324 10:45:54.169173 11366 net.cpp:122] Setting up pool5
I0324 10:45:54.169179 11366 net.cpp:129] Top shape: 100 256 6 6 (921600)
I0324 10:45:54.169183 11366 net.cpp:137] Memory required for data: 821695600
I0324 10:45:54.169188 11366 layer_factory.hpp:77] Creating layer fc6
I0324 10:45:54.169194 11366 net.cpp:84] Creating Layer fc6
I0324 10:45:54.169198 11366 net.cpp:406] fc6 <- pool5
I0324 10:45:54.169203 11366 net.cpp:380] fc6 -> fc6
I0324 10:45:54.420007 11366 net.cpp:122] Setting up fc6
I0324 10:45:54.420035 11366 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:45:54.420040 11366 net.cpp:137] Memory required for data: 823334000
I0324 10:45:54.420050 11366 layer_factory.hpp:77] Creating layer relu6
I0324 10:45:54.420058 11366 net.cpp:84] Creating Layer relu6
I0324 10:45:54.420063 11366 net.cpp:406] relu6 <- fc6
I0324 10:45:54.420068 11366 net.cpp:367] relu6 -> fc6 (in-place)
I0324 10:45:54.420446 11366 net.cpp:122] Setting up relu6
I0324 10:45:54.420462 11366 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:45:54.420469 11366 net.cpp:137] Memory required for data: 824972400
I0324 10:45:54.420507 11366 layer_factory.hpp:77] Creating layer drop6
I0324 10:45:54.420513 11366 net.cpp:84] Creating Layer drop6
I0324 10:45:54.420517 11366 net.cpp:406] drop6 <- fc6
I0324 10:45:54.420523 11366 net.cpp:367] drop6 -> fc6 (in-place)
I0324 10:45:54.420555 11366 net.cpp:122] Setting up drop6
I0324 10:45:54.420562 11366 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:45:54.420565 11366 net.cpp:137] Memory required for data: 826610800
I0324 10:45:54.420568 11366 layer_factory.hpp:77] Creating layer fc7
I0324 10:45:54.420578 11366 net.cpp:84] Creating Layer fc7
I0324 10:45:54.420581 11366 net.cpp:406] fc7 <- fc6
I0324 10:45:54.420586 11366 net.cpp:380] fc7 -> fc7
I0324 10:45:54.530352 11366 net.cpp:122] Setting up fc7
I0324 10:45:54.530375 11366 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:45:54.530380 11366 net.cpp:137] Memory required for data: 828249200
I0324 10:45:54.530390 11366 layer_factory.hpp:77] Creating layer relu7
I0324 10:45:54.530396 11366 net.cpp:84] Creating Layer relu7
I0324 10:45:54.530405 11366 net.cpp:406] relu7 <- fc7
I0324 10:45:54.530422 11366 net.cpp:367] relu7 -> fc7 (in-place)
I0324 10:45:54.530987 11366 net.cpp:122] Setting up relu7
I0324 10:45:54.530997 11366 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:45:54.531002 11366 net.cpp:137] Memory required for data: 829887600
I0324 10:45:54.531006 11366 layer_factory.hpp:77] Creating layer drop7
I0324 10:45:54.531013 11366 net.cpp:84] Creating Layer drop7
I0324 10:45:54.531016 11366 net.cpp:406] drop7 <- fc7
I0324 10:45:54.531021 11366 net.cpp:367] drop7 -> fc7 (in-place)
I0324 10:45:54.531041 11366 net.cpp:122] Setting up drop7
I0324 10:45:54.531047 11366 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:45:54.531054 11366 net.cpp:137] Memory required for data: 831526000
I0324 10:45:54.531059 11366 layer_factory.hpp:77] Creating layer fc8_plantvillage
I0324 10:45:54.531064 11366 net.cpp:84] Creating Layer fc8_plantvillage
I0324 10:45:54.531069 11366 net.cpp:406] fc8_plantvillage <- fc7
I0324 10:45:54.531074 11366 net.cpp:380] fc8_plantvillage -> fc8_plantvillage
I0324 10:45:54.532021 11366 net.cpp:122] Setting up fc8_plantvillage
I0324 10:45:54.532028 11366 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:45:54.532032 11366 net.cpp:137] Memory required for data: 831541200
I0324 10:45:54.532038 11366 layer_factory.hpp:77] Creating layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:45:54.532045 11366 net.cpp:84] Creating Layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:45:54.532049 11366 net.cpp:406] fc8_plantvillage_fc8_plantvillage_0_split <- fc8_plantvillage
I0324 10:45:54.532054 11366 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:45:54.532059 11366 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:45:54.532065 11366 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:45:54.532097 11366 net.cpp:122] Setting up fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:45:54.532104 11366 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:45:54.532107 11366 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:45:54.532111 11366 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:45:54.532115 11366 net.cpp:137] Memory required for data: 831586800
I0324 10:45:54.532119 11366 layer_factory.hpp:77] Creating layer prob
I0324 10:45:54.532125 11366 net.cpp:84] Creating Layer prob
I0324 10:45:54.532130 11366 net.cpp:406] prob <- fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:45:54.532135 11366 net.cpp:380] prob -> prob
I0324 10:45:54.532600 11366 net.cpp:122] Setting up prob
I0324 10:45:54.532610 11366 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:45:54.532614 11366 net.cpp:137] Memory required for data: 831602000
I0324 10:45:54.532618 11366 layer_factory.hpp:77] Creating layer hdf5out
I0324 10:45:54.532624 11366 net.cpp:84] Creating Layer hdf5out
I0324 10:45:54.532629 11366 net.cpp:406] hdf5out <- prob
I0324 10:45:54.532634 11366 net.cpp:406] hdf5out <- label_data_1_split_0
I0324 10:45:54.533361 11366 net.cpp:122] Setting up hdf5out
I0324 10:45:54.533368 11366 net.cpp:137] Memory required for data: 831602000
I0324 10:45:54.533373 11366 layer_factory.hpp:77] Creating layer loss
I0324 10:45:54.533378 11366 net.cpp:84] Creating Layer loss
I0324 10:45:54.533383 11366 net.cpp:406] loss <- fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:45:54.533387 11366 net.cpp:406] loss <- label_data_1_split_1
I0324 10:45:54.533392 11366 net.cpp:380] loss -> loss
I0324 10:45:54.533401 11366 layer_factory.hpp:77] Creating layer loss
I0324 10:45:54.533895 11366 net.cpp:122] Setting up loss
I0324 10:45:54.533905 11366 net.cpp:129] Top shape: (1)
I0324 10:45:54.533910 11366 net.cpp:132]     with loss weight 1
I0324 10:45:54.533926 11366 net.cpp:137] Memory required for data: 831602004
I0324 10:45:54.533931 11366 layer_factory.hpp:77] Creating layer accuracy
I0324 10:45:54.533936 11366 net.cpp:84] Creating Layer accuracy
I0324 10:45:54.533941 11366 net.cpp:406] accuracy <- fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:45:54.533958 11366 net.cpp:406] accuracy <- label_data_1_split_2
I0324 10:45:54.533964 11366 net.cpp:380] accuracy -> accuracy
I0324 10:45:54.533972 11366 net.cpp:122] Setting up accuracy
I0324 10:45:54.533977 11366 net.cpp:129] Top shape: (1)
I0324 10:45:54.533980 11366 net.cpp:137] Memory required for data: 831602008
I0324 10:45:54.533984 11366 net.cpp:200] accuracy does not need backward computation.
I0324 10:45:54.533990 11366 net.cpp:198] loss needs backward computation.
I0324 10:45:54.533996 11366 net.cpp:200] hdf5out does not need backward computation.
I0324 10:45:54.534001 11366 net.cpp:200] prob does not need backward computation.
I0324 10:45:54.534005 11366 net.cpp:198] fc8_plantvillage_fc8_plantvillage_0_split needs backward computation.
I0324 10:45:54.534009 11366 net.cpp:198] fc8_plantvillage needs backward computation.
I0324 10:45:54.534013 11366 net.cpp:198] drop7 needs backward computation.
I0324 10:45:54.534018 11366 net.cpp:198] relu7 needs backward computation.
I0324 10:45:54.534021 11366 net.cpp:198] fc7 needs backward computation.
I0324 10:45:54.534025 11366 net.cpp:198] drop6 needs backward computation.
I0324 10:45:54.534029 11366 net.cpp:198] relu6 needs backward computation.
I0324 10:45:54.534032 11366 net.cpp:198] fc6 needs backward computation.
I0324 10:45:54.534036 11366 net.cpp:198] pool5 needs backward computation.
I0324 10:45:54.534040 11366 net.cpp:198] relu5 needs backward computation.
I0324 10:45:54.534044 11366 net.cpp:198] conv5 needs backward computation.
I0324 10:45:54.534049 11366 net.cpp:198] relu4 needs backward computation.
I0324 10:45:54.534052 11366 net.cpp:198] conv4 needs backward computation.
I0324 10:45:54.534056 11366 net.cpp:198] relu3 needs backward computation.
I0324 10:45:54.534060 11366 net.cpp:198] conv3 needs backward computation.
I0324 10:45:54.534065 11366 net.cpp:198] pool2 needs backward computation.
I0324 10:45:54.534068 11366 net.cpp:198] norm2 needs backward computation.
I0324 10:45:54.534072 11366 net.cpp:198] relu2 needs backward computation.
I0324 10:45:54.534075 11366 net.cpp:198] conv2 needs backward computation.
I0324 10:45:54.534080 11366 net.cpp:198] pool1 needs backward computation.
I0324 10:45:54.534085 11366 net.cpp:198] norm1 needs backward computation.
I0324 10:45:54.534088 11366 net.cpp:198] relu1 needs backward computation.
I0324 10:45:54.534091 11366 net.cpp:198] conv1 needs backward computation.
I0324 10:45:54.534096 11366 net.cpp:200] label_data_1_split does not need backward computation.
I0324 10:45:54.534101 11366 net.cpp:200] data does not need backward computation.
I0324 10:45:54.534104 11366 net.cpp:242] This network produces output accuracy
I0324 10:45:54.534108 11366 net.cpp:242] This network produces output loss
I0324 10:45:54.534123 11366 net.cpp:255] Network initialization done.
I0324 10:46:11.103160 11366 caffe.cpp:290] Running for 1 iterations.
I0324 10:46:11.180438 11366 hdf5_output_layer.cpp:32] Saving HDF5 file hdf5_dumps/iter_1188.h5
I0324 10:46:11.180603 11366 hdf5_output_layer.cpp:37] Successfully saved 100 rows
I0324 10:46:11.180886 11366 caffe.cpp:313] Batch 0, accuracy = 0.87
I0324 10:46:11.180900 11366 caffe.cpp:313] Batch 0, loss = 0.476195
I0324 10:46:11.180905 11366 caffe.cpp:318] Loss: 0.476195
I0324 10:46:11.180909 11366 caffe.cpp:330] accuracy = 0.87
I0324 10:46:11.180917 11366 caffe.cpp:330] loss = 0.476195 (* 1 = 0.476195 loss)
