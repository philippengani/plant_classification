I0324 10:42:32.375777 11251 caffe.cpp:275] Use GPU with device ID 0
I0324 10:42:32.375984 11251 caffe.cpp:279] GPU device name: GeForce GTX 1060
I0324 10:42:32.657245 11251 net.cpp:294] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0324 10:42:32.657706 11251 net.cpp:51] Initializing net from parameters: 
state {
  phase: TEST
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto"
  }
  data_param {
    source: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_plantvillage"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_plantvillage"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 38
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc8_plantvillage"
  top: "prob"
  include {
    phase: TEST
  }
}
layer {
  name: "hdf5out"
  type: "HDF5Output"
  bottom: "prob"
  bottom: "label"
  include {
    phase: TEST
  }
  hdf5_output_param {
    file_name: "hdf5_dumps/iter_648.h5"
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
I0324 10:42:32.658073 11251 layer_factory.hpp:77] Creating layer data
I0324 10:42:32.658293 11251 db_lmdb.cpp:35] Opened lmdb /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db
I0324 10:42:32.658370 11251 net.cpp:84] Creating Layer data
I0324 10:42:32.658394 11251 net.cpp:380] data -> data
I0324 10:42:32.658447 11251 net.cpp:380] data -> label
I0324 10:42:32.658478 11251 data_transformer.cpp:25] Loading mean file from: /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto
I0324 10:42:32.690057 11251 data_layer.cpp:45] output data size: 100,3,227,227
I0324 10:42:32.793442 11251 net.cpp:122] Setting up data
I0324 10:42:32.793470 11251 net.cpp:129] Top shape: 100 3 227 227 (15458700)
I0324 10:42:32.793476 11251 net.cpp:129] Top shape: 100 (100)
I0324 10:42:32.793480 11251 net.cpp:137] Memory required for data: 61835200
I0324 10:42:32.793486 11251 layer_factory.hpp:77] Creating layer label_data_1_split
I0324 10:42:32.793498 11251 net.cpp:84] Creating Layer label_data_1_split
I0324 10:42:32.793504 11251 net.cpp:406] label_data_1_split <- label
I0324 10:42:32.793512 11251 net.cpp:380] label_data_1_split -> label_data_1_split_0
I0324 10:42:32.793522 11251 net.cpp:380] label_data_1_split -> label_data_1_split_1
I0324 10:42:32.793529 11251 net.cpp:380] label_data_1_split -> label_data_1_split_2
I0324 10:42:32.793637 11251 net.cpp:122] Setting up label_data_1_split
I0324 10:42:32.793649 11251 net.cpp:129] Top shape: 100 (100)
I0324 10:42:32.793654 11251 net.cpp:129] Top shape: 100 (100)
I0324 10:42:32.793659 11251 net.cpp:129] Top shape: 100 (100)
I0324 10:42:32.793663 11251 net.cpp:137] Memory required for data: 61836400
I0324 10:42:32.793668 11251 layer_factory.hpp:77] Creating layer conv1
I0324 10:42:32.793676 11251 net.cpp:84] Creating Layer conv1
I0324 10:42:32.793681 11251 net.cpp:406] conv1 <- data
I0324 10:42:32.793687 11251 net.cpp:380] conv1 -> conv1
I0324 10:42:33.354900 11251 net.cpp:122] Setting up conv1
I0324 10:42:33.354925 11251 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:42:33.354930 11251 net.cpp:137] Memory required for data: 177996400
I0324 10:42:33.354956 11251 layer_factory.hpp:77] Creating layer relu1
I0324 10:42:33.354964 11251 net.cpp:84] Creating Layer relu1
I0324 10:42:33.354995 11251 net.cpp:406] relu1 <- conv1
I0324 10:42:33.355011 11251 net.cpp:367] relu1 -> conv1 (in-place)
I0324 10:42:33.355366 11251 net.cpp:122] Setting up relu1
I0324 10:42:33.355377 11251 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:42:33.355381 11251 net.cpp:137] Memory required for data: 294156400
I0324 10:42:33.355386 11251 layer_factory.hpp:77] Creating layer norm1
I0324 10:42:33.355393 11251 net.cpp:84] Creating Layer norm1
I0324 10:42:33.355397 11251 net.cpp:406] norm1 <- conv1
I0324 10:42:33.355403 11251 net.cpp:380] norm1 -> norm1
I0324 10:42:33.355772 11251 net.cpp:122] Setting up norm1
I0324 10:42:33.355784 11251 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:42:33.355788 11251 net.cpp:137] Memory required for data: 410316400
I0324 10:42:33.355792 11251 layer_factory.hpp:77] Creating layer pool1
I0324 10:42:33.355798 11251 net.cpp:84] Creating Layer pool1
I0324 10:42:33.355803 11251 net.cpp:406] pool1 <- norm1
I0324 10:42:33.355808 11251 net.cpp:380] pool1 -> pool1
I0324 10:42:33.355832 11251 net.cpp:122] Setting up pool1
I0324 10:42:33.355839 11251 net.cpp:129] Top shape: 100 96 27 27 (6998400)
I0324 10:42:33.355842 11251 net.cpp:137] Memory required for data: 438310000
I0324 10:42:33.355846 11251 layer_factory.hpp:77] Creating layer conv2
I0324 10:42:33.355856 11251 net.cpp:84] Creating Layer conv2
I0324 10:42:33.355860 11251 net.cpp:406] conv2 <- pool1
I0324 10:42:33.355865 11251 net.cpp:380] conv2 -> conv2
I0324 10:42:33.361508 11251 net.cpp:122] Setting up conv2
I0324 10:42:33.361539 11251 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:42:33.361547 11251 net.cpp:137] Memory required for data: 512959600
I0324 10:42:33.361564 11251 layer_factory.hpp:77] Creating layer relu2
I0324 10:42:33.361598 11251 net.cpp:84] Creating Layer relu2
I0324 10:42:33.361606 11251 net.cpp:406] relu2 <- conv2
I0324 10:42:33.361618 11251 net.cpp:367] relu2 -> conv2 (in-place)
I0324 10:42:33.362208 11251 net.cpp:122] Setting up relu2
I0324 10:42:33.362224 11251 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:42:33.362229 11251 net.cpp:137] Memory required for data: 587609200
I0324 10:42:33.362233 11251 layer_factory.hpp:77] Creating layer norm2
I0324 10:42:33.362251 11251 net.cpp:84] Creating Layer norm2
I0324 10:42:33.362258 11251 net.cpp:406] norm2 <- conv2
I0324 10:42:33.362268 11251 net.cpp:380] norm2 -> norm2
I0324 10:42:33.362634 11251 net.cpp:122] Setting up norm2
I0324 10:42:33.362644 11251 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:42:33.362649 11251 net.cpp:137] Memory required for data: 662258800
I0324 10:42:33.362653 11251 layer_factory.hpp:77] Creating layer pool2
I0324 10:42:33.362659 11251 net.cpp:84] Creating Layer pool2
I0324 10:42:33.362664 11251 net.cpp:406] pool2 <- norm2
I0324 10:42:33.362670 11251 net.cpp:380] pool2 -> pool2
I0324 10:42:33.362695 11251 net.cpp:122] Setting up pool2
I0324 10:42:33.362702 11251 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:42:33.362706 11251 net.cpp:137] Memory required for data: 679564400
I0324 10:42:33.362710 11251 layer_factory.hpp:77] Creating layer conv3
I0324 10:42:33.362721 11251 net.cpp:84] Creating Layer conv3
I0324 10:42:33.362726 11251 net.cpp:406] conv3 <- pool2
I0324 10:42:33.362731 11251 net.cpp:380] conv3 -> conv3
I0324 10:42:33.370358 11251 net.cpp:122] Setting up conv3
I0324 10:42:33.370379 11251 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:42:33.370384 11251 net.cpp:137] Memory required for data: 705522800
I0324 10:42:33.370396 11251 layer_factory.hpp:77] Creating layer relu3
I0324 10:42:33.370404 11251 net.cpp:84] Creating Layer relu3
I0324 10:42:33.370409 11251 net.cpp:406] relu3 <- conv3
I0324 10:42:33.370414 11251 net.cpp:367] relu3 -> conv3 (in-place)
I0324 10:42:33.370754 11251 net.cpp:122] Setting up relu3
I0324 10:42:33.370764 11251 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:42:33.370769 11251 net.cpp:137] Memory required for data: 731481200
I0324 10:42:33.370772 11251 layer_factory.hpp:77] Creating layer conv4
I0324 10:42:33.370786 11251 net.cpp:84] Creating Layer conv4
I0324 10:42:33.370790 11251 net.cpp:406] conv4 <- conv3
I0324 10:42:33.370807 11251 net.cpp:380] conv4 -> conv4
I0324 10:42:33.378907 11251 net.cpp:122] Setting up conv4
I0324 10:42:33.378928 11251 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:42:33.378933 11251 net.cpp:137] Memory required for data: 757439600
I0324 10:42:33.378943 11251 layer_factory.hpp:77] Creating layer relu4
I0324 10:42:33.378950 11251 net.cpp:84] Creating Layer relu4
I0324 10:42:33.378955 11251 net.cpp:406] relu4 <- conv4
I0324 10:42:33.378963 11251 net.cpp:367] relu4 -> conv4 (in-place)
I0324 10:42:33.379365 11251 net.cpp:122] Setting up relu4
I0324 10:42:33.379376 11251 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:42:33.379381 11251 net.cpp:137] Memory required for data: 783398000
I0324 10:42:33.379385 11251 layer_factory.hpp:77] Creating layer conv5
I0324 10:42:33.379398 11251 net.cpp:84] Creating Layer conv5
I0324 10:42:33.379405 11251 net.cpp:406] conv5 <- conv4
I0324 10:42:33.379415 11251 net.cpp:380] conv5 -> conv5
I0324 10:42:33.386243 11251 net.cpp:122] Setting up conv5
I0324 10:42:33.386276 11251 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:42:33.386281 11251 net.cpp:137] Memory required for data: 800703600
I0324 10:42:33.386296 11251 layer_factory.hpp:77] Creating layer relu5
I0324 10:42:33.386303 11251 net.cpp:84] Creating Layer relu5
I0324 10:42:33.386309 11251 net.cpp:406] relu5 <- conv5
I0324 10:42:33.386317 11251 net.cpp:367] relu5 -> conv5 (in-place)
I0324 10:42:33.386781 11251 net.cpp:122] Setting up relu5
I0324 10:42:33.386793 11251 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:42:33.386797 11251 net.cpp:137] Memory required for data: 818009200
I0324 10:42:33.386801 11251 layer_factory.hpp:77] Creating layer pool5
I0324 10:42:33.386809 11251 net.cpp:84] Creating Layer pool5
I0324 10:42:33.386818 11251 net.cpp:406] pool5 <- conv5
I0324 10:42:33.386823 11251 net.cpp:380] pool5 -> pool5
I0324 10:42:33.386860 11251 net.cpp:122] Setting up pool5
I0324 10:42:33.386867 11251 net.cpp:129] Top shape: 100 256 6 6 (921600)
I0324 10:42:33.386870 11251 net.cpp:137] Memory required for data: 821695600
I0324 10:42:33.386874 11251 layer_factory.hpp:77] Creating layer fc6
I0324 10:42:33.386881 11251 net.cpp:84] Creating Layer fc6
I0324 10:42:33.386885 11251 net.cpp:406] fc6 <- pool5
I0324 10:42:33.386891 11251 net.cpp:380] fc6 -> fc6
I0324 10:42:33.656312 11251 net.cpp:122] Setting up fc6
I0324 10:42:33.656344 11251 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:42:33.656349 11251 net.cpp:137] Memory required for data: 823334000
I0324 10:42:33.656361 11251 layer_factory.hpp:77] Creating layer relu6
I0324 10:42:33.656371 11251 net.cpp:84] Creating Layer relu6
I0324 10:42:33.656376 11251 net.cpp:406] relu6 <- fc6
I0324 10:42:33.656383 11251 net.cpp:367] relu6 -> fc6 (in-place)
I0324 10:42:33.656788 11251 net.cpp:122] Setting up relu6
I0324 10:42:33.656798 11251 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:42:33.656803 11251 net.cpp:137] Memory required for data: 824972400
I0324 10:42:33.656807 11251 layer_factory.hpp:77] Creating layer drop6
I0324 10:42:33.656818 11251 net.cpp:84] Creating Layer drop6
I0324 10:42:33.656823 11251 net.cpp:406] drop6 <- fc6
I0324 10:42:33.656828 11251 net.cpp:367] drop6 -> fc6 (in-place)
I0324 10:42:33.656850 11251 net.cpp:122] Setting up drop6
I0324 10:42:33.656857 11251 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:42:33.656860 11251 net.cpp:137] Memory required for data: 826610800
I0324 10:42:33.656864 11251 layer_factory.hpp:77] Creating layer fc7
I0324 10:42:33.656872 11251 net.cpp:84] Creating Layer fc7
I0324 10:42:33.656877 11251 net.cpp:406] fc7 <- fc6
I0324 10:42:33.656883 11251 net.cpp:380] fc7 -> fc7
I0324 10:42:33.769675 11251 net.cpp:122] Setting up fc7
I0324 10:42:33.769706 11251 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:42:33.769711 11251 net.cpp:137] Memory required for data: 828249200
I0324 10:42:33.769721 11251 layer_factory.hpp:77] Creating layer relu7
I0324 10:42:33.769729 11251 net.cpp:84] Creating Layer relu7
I0324 10:42:33.769740 11251 net.cpp:406] relu7 <- fc7
I0324 10:42:33.769757 11251 net.cpp:367] relu7 -> fc7 (in-place)
I0324 10:42:33.770311 11251 net.cpp:122] Setting up relu7
I0324 10:42:33.770323 11251 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:42:33.770328 11251 net.cpp:137] Memory required for data: 829887600
I0324 10:42:33.770331 11251 layer_factory.hpp:77] Creating layer drop7
I0324 10:42:33.770337 11251 net.cpp:84] Creating Layer drop7
I0324 10:42:33.770342 11251 net.cpp:406] drop7 <- fc7
I0324 10:42:33.770347 11251 net.cpp:367] drop7 -> fc7 (in-place)
I0324 10:42:33.770370 11251 net.cpp:122] Setting up drop7
I0324 10:42:33.770375 11251 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:42:33.770380 11251 net.cpp:137] Memory required for data: 831526000
I0324 10:42:33.770383 11251 layer_factory.hpp:77] Creating layer fc8_plantvillage
I0324 10:42:33.770390 11251 net.cpp:84] Creating Layer fc8_plantvillage
I0324 10:42:33.770395 11251 net.cpp:406] fc8_plantvillage <- fc7
I0324 10:42:33.770401 11251 net.cpp:380] fc8_plantvillage -> fc8_plantvillage
I0324 10:42:33.771574 11251 net.cpp:122] Setting up fc8_plantvillage
I0324 10:42:33.771591 11251 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:42:33.771596 11251 net.cpp:137] Memory required for data: 831541200
I0324 10:42:33.771606 11251 layer_factory.hpp:77] Creating layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:42:33.771615 11251 net.cpp:84] Creating Layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:42:33.771620 11251 net.cpp:406] fc8_plantvillage_fc8_plantvillage_0_split <- fc8_plantvillage
I0324 10:42:33.771627 11251 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:42:33.771636 11251 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:42:33.771643 11251 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:42:33.771687 11251 net.cpp:122] Setting up fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:42:33.771693 11251 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:42:33.771698 11251 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:42:33.771703 11251 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:42:33.771706 11251 net.cpp:137] Memory required for data: 831586800
I0324 10:42:33.771710 11251 layer_factory.hpp:77] Creating layer prob
I0324 10:42:33.771718 11251 net.cpp:84] Creating Layer prob
I0324 10:42:33.771721 11251 net.cpp:406] prob <- fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:42:33.771728 11251 net.cpp:380] prob -> prob
I0324 10:42:33.772401 11251 net.cpp:122] Setting up prob
I0324 10:42:33.772419 11251 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:42:33.772423 11251 net.cpp:137] Memory required for data: 831602000
I0324 10:42:33.772428 11251 layer_factory.hpp:77] Creating layer hdf5out
I0324 10:42:33.772435 11251 net.cpp:84] Creating Layer hdf5out
I0324 10:42:33.772440 11251 net.cpp:406] hdf5out <- prob
I0324 10:42:33.772446 11251 net.cpp:406] hdf5out <- label_data_1_split_0
I0324 10:42:33.773250 11251 net.cpp:122] Setting up hdf5out
I0324 10:42:33.773258 11251 net.cpp:137] Memory required for data: 831602000
I0324 10:42:33.773263 11251 layer_factory.hpp:77] Creating layer loss
I0324 10:42:33.773270 11251 net.cpp:84] Creating Layer loss
I0324 10:42:33.773274 11251 net.cpp:406] loss <- fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:42:33.773280 11251 net.cpp:406] loss <- label_data_1_split_1
I0324 10:42:33.773286 11251 net.cpp:380] loss -> loss
I0324 10:42:33.773296 11251 layer_factory.hpp:77] Creating layer loss
I0324 10:42:33.773908 11251 net.cpp:122] Setting up loss
I0324 10:42:33.773919 11251 net.cpp:129] Top shape: (1)
I0324 10:42:33.773924 11251 net.cpp:132]     with loss weight 1
I0324 10:42:33.773941 11251 net.cpp:137] Memory required for data: 831602004
I0324 10:42:33.773947 11251 layer_factory.hpp:77] Creating layer accuracy
I0324 10:42:33.773954 11251 net.cpp:84] Creating Layer accuracy
I0324 10:42:33.773959 11251 net.cpp:406] accuracy <- fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:42:33.773978 11251 net.cpp:406] accuracy <- label_data_1_split_2
I0324 10:42:33.773983 11251 net.cpp:380] accuracy -> accuracy
I0324 10:42:33.773991 11251 net.cpp:122] Setting up accuracy
I0324 10:42:33.773996 11251 net.cpp:129] Top shape: (1)
I0324 10:42:33.774000 11251 net.cpp:137] Memory required for data: 831602008
I0324 10:42:33.774004 11251 net.cpp:200] accuracy does not need backward computation.
I0324 10:42:33.774013 11251 net.cpp:198] loss needs backward computation.
I0324 10:42:33.774017 11251 net.cpp:200] hdf5out does not need backward computation.
I0324 10:42:33.774021 11251 net.cpp:200] prob does not need backward computation.
I0324 10:42:33.774026 11251 net.cpp:198] fc8_plantvillage_fc8_plantvillage_0_split needs backward computation.
I0324 10:42:33.774030 11251 net.cpp:198] fc8_plantvillage needs backward computation.
I0324 10:42:33.774034 11251 net.cpp:198] drop7 needs backward computation.
I0324 10:42:33.774039 11251 net.cpp:198] relu7 needs backward computation.
I0324 10:42:33.774042 11251 net.cpp:198] fc7 needs backward computation.
I0324 10:42:33.774046 11251 net.cpp:198] drop6 needs backward computation.
I0324 10:42:33.774051 11251 net.cpp:198] relu6 needs backward computation.
I0324 10:42:33.774055 11251 net.cpp:198] fc6 needs backward computation.
I0324 10:42:33.774060 11251 net.cpp:198] pool5 needs backward computation.
I0324 10:42:33.774063 11251 net.cpp:198] relu5 needs backward computation.
I0324 10:42:33.774067 11251 net.cpp:198] conv5 needs backward computation.
I0324 10:42:33.774071 11251 net.cpp:198] relu4 needs backward computation.
I0324 10:42:33.774075 11251 net.cpp:198] conv4 needs backward computation.
I0324 10:42:33.774085 11251 net.cpp:198] relu3 needs backward computation.
I0324 10:42:33.774093 11251 net.cpp:198] conv3 needs backward computation.
I0324 10:42:33.774101 11251 net.cpp:198] pool2 needs backward computation.
I0324 10:42:33.774106 11251 net.cpp:198] norm2 needs backward computation.
I0324 10:42:33.774109 11251 net.cpp:198] relu2 needs backward computation.
I0324 10:42:33.774113 11251 net.cpp:198] conv2 needs backward computation.
I0324 10:42:33.774117 11251 net.cpp:198] pool1 needs backward computation.
I0324 10:42:33.774121 11251 net.cpp:198] norm1 needs backward computation.
I0324 10:42:33.774127 11251 net.cpp:198] relu1 needs backward computation.
I0324 10:42:33.774130 11251 net.cpp:198] conv1 needs backward computation.
I0324 10:42:33.774134 11251 net.cpp:200] label_data_1_split does not need backward computation.
I0324 10:42:33.774139 11251 net.cpp:200] data does not need backward computation.
I0324 10:42:33.774143 11251 net.cpp:242] This network produces output accuracy
I0324 10:42:33.774147 11251 net.cpp:242] This network produces output loss
I0324 10:42:33.774163 11251 net.cpp:255] Network initialization done.
I0324 10:43:21.822252 11251 caffe.cpp:290] Running for 1 iterations.
I0324 10:43:21.926596 11251 hdf5_output_layer.cpp:32] Saving HDF5 file hdf5_dumps/iter_648.h5
I0324 10:43:21.926805 11251 hdf5_output_layer.cpp:37] Successfully saved 100 rows
I0324 10:43:21.927505 11251 caffe.cpp:313] Batch 0, accuracy = 0.77
I0324 10:43:21.927520 11251 caffe.cpp:313] Batch 0, loss = 0.809788
I0324 10:43:21.927526 11251 caffe.cpp:318] Loss: 0.809788
I0324 10:43:21.927531 11251 caffe.cpp:330] accuracy = 0.77
I0324 10:43:21.927541 11251 caffe.cpp:330] loss = 0.809788 (* 1 = 0.809788 loss)
