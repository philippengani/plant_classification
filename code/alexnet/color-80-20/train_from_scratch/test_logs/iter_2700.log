I0324 10:48:15.273212 11563 caffe.cpp:275] Use GPU with device ID 0
I0324 10:48:15.273409 11563 caffe.cpp:279] GPU device name: GeForce GTX 1060
I0324 10:48:15.453105 11563 net.cpp:294] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0324 10:48:15.453229 11563 net.cpp:51] Initializing net from parameters: 
state {
  phase: TEST
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto"
  }
  data_param {
    source: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_plantvillage"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_plantvillage"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 38
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc8_plantvillage"
  top: "prob"
  include {
    phase: TEST
  }
}
layer {
  name: "hdf5out"
  type: "HDF5Output"
  bottom: "prob"
  bottom: "label"
  include {
    phase: TEST
  }
  hdf5_output_param {
    file_name: "hdf5_dumps/iter_2700.h5"
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
I0324 10:48:15.453327 11563 layer_factory.hpp:77] Creating layer data
I0324 10:48:15.453408 11563 db_lmdb.cpp:35] Opened lmdb /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db
I0324 10:48:15.453429 11563 net.cpp:84] Creating Layer data
I0324 10:48:15.453435 11563 net.cpp:380] data -> data
I0324 10:48:15.453446 11563 net.cpp:380] data -> label
I0324 10:48:15.453454 11563 data_transformer.cpp:25] Loading mean file from: /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto
I0324 10:48:15.462554 11563 data_layer.cpp:45] output data size: 100,3,227,227
I0324 10:48:15.552732 11563 net.cpp:122] Setting up data
I0324 10:48:15.552759 11563 net.cpp:129] Top shape: 100 3 227 227 (15458700)
I0324 10:48:15.552765 11563 net.cpp:129] Top shape: 100 (100)
I0324 10:48:15.552769 11563 net.cpp:137] Memory required for data: 61835200
I0324 10:48:15.552775 11563 layer_factory.hpp:77] Creating layer label_data_1_split
I0324 10:48:15.552783 11563 net.cpp:84] Creating Layer label_data_1_split
I0324 10:48:15.552788 11563 net.cpp:406] label_data_1_split <- label
I0324 10:48:15.552795 11563 net.cpp:380] label_data_1_split -> label_data_1_split_0
I0324 10:48:15.552803 11563 net.cpp:380] label_data_1_split -> label_data_1_split_1
I0324 10:48:15.552809 11563 net.cpp:380] label_data_1_split -> label_data_1_split_2
I0324 10:48:15.552857 11563 net.cpp:122] Setting up label_data_1_split
I0324 10:48:15.552865 11563 net.cpp:129] Top shape: 100 (100)
I0324 10:48:15.552870 11563 net.cpp:129] Top shape: 100 (100)
I0324 10:48:15.552873 11563 net.cpp:129] Top shape: 100 (100)
I0324 10:48:15.552877 11563 net.cpp:137] Memory required for data: 61836400
I0324 10:48:15.552881 11563 layer_factory.hpp:77] Creating layer conv1
I0324 10:48:15.552898 11563 net.cpp:84] Creating Layer conv1
I0324 10:48:15.552902 11563 net.cpp:406] conv1 <- data
I0324 10:48:15.552907 11563 net.cpp:380] conv1 -> conv1
I0324 10:48:16.068130 11563 net.cpp:122] Setting up conv1
I0324 10:48:16.068168 11563 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:48:16.068174 11563 net.cpp:137] Memory required for data: 177996400
I0324 10:48:16.068199 11563 layer_factory.hpp:77] Creating layer relu1
I0324 10:48:16.068208 11563 net.cpp:84] Creating Layer relu1
I0324 10:48:16.068223 11563 net.cpp:406] relu1 <- conv1
I0324 10:48:16.068243 11563 net.cpp:367] relu1 -> conv1 (in-place)
I0324 10:48:16.068608 11563 net.cpp:122] Setting up relu1
I0324 10:48:16.068619 11563 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:48:16.068624 11563 net.cpp:137] Memory required for data: 294156400
I0324 10:48:16.068627 11563 layer_factory.hpp:77] Creating layer norm1
I0324 10:48:16.068639 11563 net.cpp:84] Creating Layer norm1
I0324 10:48:16.068642 11563 net.cpp:406] norm1 <- conv1
I0324 10:48:16.068650 11563 net.cpp:380] norm1 -> norm1
I0324 10:48:16.069010 11563 net.cpp:122] Setting up norm1
I0324 10:48:16.069020 11563 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:48:16.069025 11563 net.cpp:137] Memory required for data: 410316400
I0324 10:48:16.069028 11563 layer_factory.hpp:77] Creating layer pool1
I0324 10:48:16.069034 11563 net.cpp:84] Creating Layer pool1
I0324 10:48:16.069038 11563 net.cpp:406] pool1 <- norm1
I0324 10:48:16.069044 11563 net.cpp:380] pool1 -> pool1
I0324 10:48:16.069068 11563 net.cpp:122] Setting up pool1
I0324 10:48:16.069074 11563 net.cpp:129] Top shape: 100 96 27 27 (6998400)
I0324 10:48:16.069078 11563 net.cpp:137] Memory required for data: 438310000
I0324 10:48:16.069082 11563 layer_factory.hpp:77] Creating layer conv2
I0324 10:48:16.069092 11563 net.cpp:84] Creating Layer conv2
I0324 10:48:16.069095 11563 net.cpp:406] conv2 <- pool1
I0324 10:48:16.069101 11563 net.cpp:380] conv2 -> conv2
I0324 10:48:16.074193 11563 net.cpp:122] Setting up conv2
I0324 10:48:16.074216 11563 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:48:16.074221 11563 net.cpp:137] Memory required for data: 512959600
I0324 10:48:16.074231 11563 layer_factory.hpp:77] Creating layer relu2
I0324 10:48:16.074237 11563 net.cpp:84] Creating Layer relu2
I0324 10:48:16.074242 11563 net.cpp:406] relu2 <- conv2
I0324 10:48:16.074261 11563 net.cpp:367] relu2 -> conv2 (in-place)
I0324 10:48:16.074622 11563 net.cpp:122] Setting up relu2
I0324 10:48:16.074636 11563 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:48:16.074640 11563 net.cpp:137] Memory required for data: 587609200
I0324 10:48:16.074645 11563 layer_factory.hpp:77] Creating layer norm2
I0324 10:48:16.074652 11563 net.cpp:84] Creating Layer norm2
I0324 10:48:16.074656 11563 net.cpp:406] norm2 <- conv2
I0324 10:48:16.074662 11563 net.cpp:380] norm2 -> norm2
I0324 10:48:16.074936 11563 net.cpp:122] Setting up norm2
I0324 10:48:16.074949 11563 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:48:16.074954 11563 net.cpp:137] Memory required for data: 662258800
I0324 10:48:16.074957 11563 layer_factory.hpp:77] Creating layer pool2
I0324 10:48:16.074962 11563 net.cpp:84] Creating Layer pool2
I0324 10:48:16.074967 11563 net.cpp:406] pool2 <- norm2
I0324 10:48:16.074972 11563 net.cpp:380] pool2 -> pool2
I0324 10:48:16.074995 11563 net.cpp:122] Setting up pool2
I0324 10:48:16.075001 11563 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:48:16.075004 11563 net.cpp:137] Memory required for data: 679564400
I0324 10:48:16.075008 11563 layer_factory.hpp:77] Creating layer conv3
I0324 10:48:16.075016 11563 net.cpp:84] Creating Layer conv3
I0324 10:48:16.075021 11563 net.cpp:406] conv3 <- pool2
I0324 10:48:16.075026 11563 net.cpp:380] conv3 -> conv3
I0324 10:48:16.082366 11563 net.cpp:122] Setting up conv3
I0324 10:48:16.082389 11563 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:48:16.082394 11563 net.cpp:137] Memory required for data: 705522800
I0324 10:48:16.082403 11563 layer_factory.hpp:77] Creating layer relu3
I0324 10:48:16.082410 11563 net.cpp:84] Creating Layer relu3
I0324 10:48:16.082414 11563 net.cpp:406] relu3 <- conv3
I0324 10:48:16.082420 11563 net.cpp:367] relu3 -> conv3 (in-place)
I0324 10:48:16.082690 11563 net.cpp:122] Setting up relu3
I0324 10:48:16.082701 11563 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:48:16.082705 11563 net.cpp:137] Memory required for data: 731481200
I0324 10:48:16.082710 11563 layer_factory.hpp:77] Creating layer conv4
I0324 10:48:16.082726 11563 net.cpp:84] Creating Layer conv4
I0324 10:48:16.082731 11563 net.cpp:406] conv4 <- conv3
I0324 10:48:16.082747 11563 net.cpp:380] conv4 -> conv4
I0324 10:48:16.090835 11563 net.cpp:122] Setting up conv4
I0324 10:48:16.090864 11563 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:48:16.090868 11563 net.cpp:137] Memory required for data: 757439600
I0324 10:48:16.090878 11563 layer_factory.hpp:77] Creating layer relu4
I0324 10:48:16.090885 11563 net.cpp:84] Creating Layer relu4
I0324 10:48:16.090890 11563 net.cpp:406] relu4 <- conv4
I0324 10:48:16.090898 11563 net.cpp:367] relu4 -> conv4 (in-place)
I0324 10:48:16.091308 11563 net.cpp:122] Setting up relu4
I0324 10:48:16.091320 11563 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:48:16.091325 11563 net.cpp:137] Memory required for data: 783398000
I0324 10:48:16.091328 11563 layer_factory.hpp:77] Creating layer conv5
I0324 10:48:16.091337 11563 net.cpp:84] Creating Layer conv5
I0324 10:48:16.091342 11563 net.cpp:406] conv5 <- conv4
I0324 10:48:16.091349 11563 net.cpp:380] conv5 -> conv5
I0324 10:48:16.097970 11563 net.cpp:122] Setting up conv5
I0324 10:48:16.097997 11563 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:48:16.098002 11563 net.cpp:137] Memory required for data: 800703600
I0324 10:48:16.098013 11563 layer_factory.hpp:77] Creating layer relu5
I0324 10:48:16.098022 11563 net.cpp:84] Creating Layer relu5
I0324 10:48:16.098027 11563 net.cpp:406] relu5 <- conv5
I0324 10:48:16.098032 11563 net.cpp:367] relu5 -> conv5 (in-place)
I0324 10:48:16.098472 11563 net.cpp:122] Setting up relu5
I0324 10:48:16.098486 11563 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:48:16.098490 11563 net.cpp:137] Memory required for data: 818009200
I0324 10:48:16.098495 11563 layer_factory.hpp:77] Creating layer pool5
I0324 10:48:16.098501 11563 net.cpp:84] Creating Layer pool5
I0324 10:48:16.098506 11563 net.cpp:406] pool5 <- conv5
I0324 10:48:16.098520 11563 net.cpp:380] pool5 -> pool5
I0324 10:48:16.098559 11563 net.cpp:122] Setting up pool5
I0324 10:48:16.098567 11563 net.cpp:129] Top shape: 100 256 6 6 (921600)
I0324 10:48:16.098570 11563 net.cpp:137] Memory required for data: 821695600
I0324 10:48:16.098574 11563 layer_factory.hpp:77] Creating layer fc6
I0324 10:48:16.098582 11563 net.cpp:84] Creating Layer fc6
I0324 10:48:16.098587 11563 net.cpp:406] fc6 <- pool5
I0324 10:48:16.098592 11563 net.cpp:380] fc6 -> fc6
I0324 10:48:16.348271 11563 net.cpp:122] Setting up fc6
I0324 10:48:16.348301 11563 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:48:16.348306 11563 net.cpp:137] Memory required for data: 823334000
I0324 10:48:16.348316 11563 layer_factory.hpp:77] Creating layer relu6
I0324 10:48:16.348323 11563 net.cpp:84] Creating Layer relu6
I0324 10:48:16.348328 11563 net.cpp:406] relu6 <- fc6
I0324 10:48:16.348357 11563 net.cpp:367] relu6 -> fc6 (in-place)
I0324 10:48:16.348731 11563 net.cpp:122] Setting up relu6
I0324 10:48:16.348739 11563 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:48:16.348743 11563 net.cpp:137] Memory required for data: 824972400
I0324 10:48:16.348748 11563 layer_factory.hpp:77] Creating layer drop6
I0324 10:48:16.348757 11563 net.cpp:84] Creating Layer drop6
I0324 10:48:16.348762 11563 net.cpp:406] drop6 <- fc6
I0324 10:48:16.348768 11563 net.cpp:367] drop6 -> fc6 (in-place)
I0324 10:48:16.348788 11563 net.cpp:122] Setting up drop6
I0324 10:48:16.348794 11563 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:48:16.348798 11563 net.cpp:137] Memory required for data: 826610800
I0324 10:48:16.348803 11563 layer_factory.hpp:77] Creating layer fc7
I0324 10:48:16.348809 11563 net.cpp:84] Creating Layer fc7
I0324 10:48:16.348812 11563 net.cpp:406] fc7 <- fc6
I0324 10:48:16.348817 11563 net.cpp:380] fc7 -> fc7
I0324 10:48:16.464815 11563 net.cpp:122] Setting up fc7
I0324 10:48:16.464843 11563 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:48:16.464848 11563 net.cpp:137] Memory required for data: 828249200
I0324 10:48:16.464857 11563 layer_factory.hpp:77] Creating layer relu7
I0324 10:48:16.464864 11563 net.cpp:84] Creating Layer relu7
I0324 10:48:16.464875 11563 net.cpp:406] relu7 <- fc7
I0324 10:48:16.464892 11563 net.cpp:367] relu7 -> fc7 (in-place)
I0324 10:48:16.465453 11563 net.cpp:122] Setting up relu7
I0324 10:48:16.465464 11563 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:48:16.465468 11563 net.cpp:137] Memory required for data: 829887600
I0324 10:48:16.465473 11563 layer_factory.hpp:77] Creating layer drop7
I0324 10:48:16.465481 11563 net.cpp:84] Creating Layer drop7
I0324 10:48:16.465484 11563 net.cpp:406] drop7 <- fc7
I0324 10:48:16.465489 11563 net.cpp:367] drop7 -> fc7 (in-place)
I0324 10:48:16.465510 11563 net.cpp:122] Setting up drop7
I0324 10:48:16.465517 11563 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:48:16.465520 11563 net.cpp:137] Memory required for data: 831526000
I0324 10:48:16.465524 11563 layer_factory.hpp:77] Creating layer fc8_plantvillage
I0324 10:48:16.465533 11563 net.cpp:84] Creating Layer fc8_plantvillage
I0324 10:48:16.465536 11563 net.cpp:406] fc8_plantvillage <- fc7
I0324 10:48:16.465541 11563 net.cpp:380] fc8_plantvillage -> fc8_plantvillage
I0324 10:48:16.466563 11563 net.cpp:122] Setting up fc8_plantvillage
I0324 10:48:16.466572 11563 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:48:16.466575 11563 net.cpp:137] Memory required for data: 831541200
I0324 10:48:16.466583 11563 layer_factory.hpp:77] Creating layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:48:16.466589 11563 net.cpp:84] Creating Layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:48:16.466593 11563 net.cpp:406] fc8_plantvillage_fc8_plantvillage_0_split <- fc8_plantvillage
I0324 10:48:16.466598 11563 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:48:16.466605 11563 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:48:16.466610 11563 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:48:16.466641 11563 net.cpp:122] Setting up fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:48:16.466647 11563 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:48:16.466651 11563 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:48:16.466655 11563 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:48:16.466660 11563 net.cpp:137] Memory required for data: 831586800
I0324 10:48:16.466662 11563 layer_factory.hpp:77] Creating layer prob
I0324 10:48:16.466668 11563 net.cpp:84] Creating Layer prob
I0324 10:48:16.466672 11563 net.cpp:406] prob <- fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:48:16.466678 11563 net.cpp:380] prob -> prob
I0324 10:48:16.467144 11563 net.cpp:122] Setting up prob
I0324 10:48:16.467154 11563 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:48:16.467157 11563 net.cpp:137] Memory required for data: 831602000
I0324 10:48:16.467161 11563 layer_factory.hpp:77] Creating layer hdf5out
I0324 10:48:16.467167 11563 net.cpp:84] Creating Layer hdf5out
I0324 10:48:16.467172 11563 net.cpp:406] hdf5out <- prob
I0324 10:48:16.467176 11563 net.cpp:406] hdf5out <- label_data_1_split_0
I0324 10:48:16.467900 11563 net.cpp:122] Setting up hdf5out
I0324 10:48:16.467907 11563 net.cpp:137] Memory required for data: 831602000
I0324 10:48:16.467911 11563 layer_factory.hpp:77] Creating layer loss
I0324 10:48:16.467917 11563 net.cpp:84] Creating Layer loss
I0324 10:48:16.467922 11563 net.cpp:406] loss <- fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:48:16.467926 11563 net.cpp:406] loss <- label_data_1_split_1
I0324 10:48:16.467933 11563 net.cpp:380] loss -> loss
I0324 10:48:16.467941 11563 layer_factory.hpp:77] Creating layer loss
I0324 10:48:16.468420 11563 net.cpp:122] Setting up loss
I0324 10:48:16.468430 11563 net.cpp:129] Top shape: (1)
I0324 10:48:16.468434 11563 net.cpp:132]     with loss weight 1
I0324 10:48:16.468451 11563 net.cpp:137] Memory required for data: 831602004
I0324 10:48:16.468456 11563 layer_factory.hpp:77] Creating layer accuracy
I0324 10:48:16.468461 11563 net.cpp:84] Creating Layer accuracy
I0324 10:48:16.468466 11563 net.cpp:406] accuracy <- fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:48:16.468482 11563 net.cpp:406] accuracy <- label_data_1_split_2
I0324 10:48:16.468489 11563 net.cpp:380] accuracy -> accuracy
I0324 10:48:16.468497 11563 net.cpp:122] Setting up accuracy
I0324 10:48:16.468502 11563 net.cpp:129] Top shape: (1)
I0324 10:48:16.468505 11563 net.cpp:137] Memory required for data: 831602008
I0324 10:48:16.468509 11563 net.cpp:200] accuracy does not need backward computation.
I0324 10:48:16.468515 11563 net.cpp:198] loss needs backward computation.
I0324 10:48:16.468520 11563 net.cpp:200] hdf5out does not need backward computation.
I0324 10:48:16.468524 11563 net.cpp:200] prob does not need backward computation.
I0324 10:48:16.468528 11563 net.cpp:198] fc8_plantvillage_fc8_plantvillage_0_split needs backward computation.
I0324 10:48:16.468533 11563 net.cpp:198] fc8_plantvillage needs backward computation.
I0324 10:48:16.468536 11563 net.cpp:198] drop7 needs backward computation.
I0324 10:48:16.468540 11563 net.cpp:198] relu7 needs backward computation.
I0324 10:48:16.468544 11563 net.cpp:198] fc7 needs backward computation.
I0324 10:48:16.468547 11563 net.cpp:198] drop6 needs backward computation.
I0324 10:48:16.468551 11563 net.cpp:198] relu6 needs backward computation.
I0324 10:48:16.468555 11563 net.cpp:198] fc6 needs backward computation.
I0324 10:48:16.468559 11563 net.cpp:198] pool5 needs backward computation.
I0324 10:48:16.468564 11563 net.cpp:198] relu5 needs backward computation.
I0324 10:48:16.468567 11563 net.cpp:198] conv5 needs backward computation.
I0324 10:48:16.468571 11563 net.cpp:198] relu4 needs backward computation.
I0324 10:48:16.468575 11563 net.cpp:198] conv4 needs backward computation.
I0324 10:48:16.468578 11563 net.cpp:198] relu3 needs backward computation.
I0324 10:48:16.468582 11563 net.cpp:198] conv3 needs backward computation.
I0324 10:48:16.468587 11563 net.cpp:198] pool2 needs backward computation.
I0324 10:48:16.468593 11563 net.cpp:198] norm2 needs backward computation.
I0324 10:48:16.468597 11563 net.cpp:198] relu2 needs backward computation.
I0324 10:48:16.468601 11563 net.cpp:198] conv2 needs backward computation.
I0324 10:48:16.468605 11563 net.cpp:198] pool1 needs backward computation.
I0324 10:48:16.468609 11563 net.cpp:198] norm1 needs backward computation.
I0324 10:48:16.468613 11563 net.cpp:198] relu1 needs backward computation.
I0324 10:48:16.468616 11563 net.cpp:198] conv1 needs backward computation.
I0324 10:48:16.468621 11563 net.cpp:200] label_data_1_split does not need backward computation.
I0324 10:48:16.468626 11563 net.cpp:200] data does not need backward computation.
I0324 10:48:16.468629 11563 net.cpp:242] This network produces output accuracy
I0324 10:48:16.468633 11563 net.cpp:242] This network produces output loss
I0324 10:48:16.468649 11563 net.cpp:255] Network initialization done.
I0324 10:48:22.779464 11563 caffe.cpp:290] Running for 1 iterations.
I0324 10:48:22.856895 11563 hdf5_output_layer.cpp:32] Saving HDF5 file hdf5_dumps/iter_2700.h5
I0324 10:48:22.857034 11563 hdf5_output_layer.cpp:37] Successfully saved 100 rows
I0324 10:48:22.857280 11563 caffe.cpp:313] Batch 0, accuracy = 0.91
I0324 10:48:22.857293 11563 caffe.cpp:313] Batch 0, loss = 0.386489
I0324 10:48:22.857298 11563 caffe.cpp:318] Loss: 0.386489
I0324 10:48:22.857302 11563 caffe.cpp:330] accuracy = 0.91
I0324 10:48:22.857309 11563 caffe.cpp:330] loss = 0.386489 (* 1 = 0.386489 loss)
