I0324 10:47:14.146319 11416 caffe.cpp:275] Use GPU with device ID 0
I0324 10:47:14.146575 11416 caffe.cpp:279] GPU device name: GeForce GTX 1060
I0324 10:47:14.321617 11416 net.cpp:294] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0324 10:47:14.321779 11416 net.cpp:51] Initializing net from parameters: 
state {
  phase: TEST
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto"
  }
  data_param {
    source: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_plantvillage"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_plantvillage"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 38
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc8_plantvillage"
  top: "prob"
  include {
    phase: TEST
  }
}
layer {
  name: "hdf5out"
  type: "HDF5Output"
  bottom: "prob"
  bottom: "label"
  include {
    phase: TEST
  }
  hdf5_output_param {
    file_name: "hdf5_dumps/iter_1836.h5"
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
I0324 10:47:14.321872 11416 layer_factory.hpp:77] Creating layer data
I0324 10:47:14.321936 11416 db_lmdb.cpp:35] Opened lmdb /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db
I0324 10:47:14.321955 11416 net.cpp:84] Creating Layer data
I0324 10:47:14.321961 11416 net.cpp:380] data -> data
I0324 10:47:14.321975 11416 net.cpp:380] data -> label
I0324 10:47:14.321985 11416 data_transformer.cpp:25] Loading mean file from: /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto
I0324 10:47:14.330104 11416 data_layer.cpp:45] output data size: 100,3,227,227
I0324 10:47:14.417338 11416 net.cpp:122] Setting up data
I0324 10:47:14.417363 11416 net.cpp:129] Top shape: 100 3 227 227 (15458700)
I0324 10:47:14.417369 11416 net.cpp:129] Top shape: 100 (100)
I0324 10:47:14.417372 11416 net.cpp:137] Memory required for data: 61835200
I0324 10:47:14.417378 11416 layer_factory.hpp:77] Creating layer label_data_1_split
I0324 10:47:14.417387 11416 net.cpp:84] Creating Layer label_data_1_split
I0324 10:47:14.417392 11416 net.cpp:406] label_data_1_split <- label
I0324 10:47:14.417397 11416 net.cpp:380] label_data_1_split -> label_data_1_split_0
I0324 10:47:14.417405 11416 net.cpp:380] label_data_1_split -> label_data_1_split_1
I0324 10:47:14.417412 11416 net.cpp:380] label_data_1_split -> label_data_1_split_2
I0324 10:47:14.417502 11416 net.cpp:122] Setting up label_data_1_split
I0324 10:47:14.417515 11416 net.cpp:129] Top shape: 100 (100)
I0324 10:47:14.417520 11416 net.cpp:129] Top shape: 100 (100)
I0324 10:47:14.417523 11416 net.cpp:129] Top shape: 100 (100)
I0324 10:47:14.417527 11416 net.cpp:137] Memory required for data: 61836400
I0324 10:47:14.417531 11416 layer_factory.hpp:77] Creating layer conv1
I0324 10:47:14.417541 11416 net.cpp:84] Creating Layer conv1
I0324 10:47:14.417546 11416 net.cpp:406] conv1 <- data
I0324 10:47:14.417551 11416 net.cpp:380] conv1 -> conv1
I0324 10:47:14.940286 11416 net.cpp:122] Setting up conv1
I0324 10:47:14.940322 11416 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:47:14.940328 11416 net.cpp:137] Memory required for data: 177996400
I0324 10:47:14.940353 11416 layer_factory.hpp:77] Creating layer relu1
I0324 10:47:14.940361 11416 net.cpp:84] Creating Layer relu1
I0324 10:47:14.940373 11416 net.cpp:406] relu1 <- conv1
I0324 10:47:14.940390 11416 net.cpp:367] relu1 -> conv1 (in-place)
I0324 10:47:14.940726 11416 net.cpp:122] Setting up relu1
I0324 10:47:14.940737 11416 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:47:14.940740 11416 net.cpp:137] Memory required for data: 294156400
I0324 10:47:14.940744 11416 layer_factory.hpp:77] Creating layer norm1
I0324 10:47:14.940752 11416 net.cpp:84] Creating Layer norm1
I0324 10:47:14.940757 11416 net.cpp:406] norm1 <- conv1
I0324 10:47:14.940762 11416 net.cpp:380] norm1 -> norm1
I0324 10:47:14.941090 11416 net.cpp:122] Setting up norm1
I0324 10:47:14.941102 11416 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:47:14.941105 11416 net.cpp:137] Memory required for data: 410316400
I0324 10:47:14.941109 11416 layer_factory.hpp:77] Creating layer pool1
I0324 10:47:14.941115 11416 net.cpp:84] Creating Layer pool1
I0324 10:47:14.941119 11416 net.cpp:406] pool1 <- norm1
I0324 10:47:14.941124 11416 net.cpp:380] pool1 -> pool1
I0324 10:47:14.941148 11416 net.cpp:122] Setting up pool1
I0324 10:47:14.941154 11416 net.cpp:129] Top shape: 100 96 27 27 (6998400)
I0324 10:47:14.941159 11416 net.cpp:137] Memory required for data: 438310000
I0324 10:47:14.941162 11416 layer_factory.hpp:77] Creating layer conv2
I0324 10:47:14.941170 11416 net.cpp:84] Creating Layer conv2
I0324 10:47:14.941174 11416 net.cpp:406] conv2 <- pool1
I0324 10:47:14.941179 11416 net.cpp:380] conv2 -> conv2
I0324 10:47:14.946261 11416 net.cpp:122] Setting up conv2
I0324 10:47:14.946310 11416 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:47:14.946314 11416 net.cpp:137] Memory required for data: 512959600
I0324 10:47:14.946324 11416 layer_factory.hpp:77] Creating layer relu2
I0324 10:47:14.946331 11416 net.cpp:84] Creating Layer relu2
I0324 10:47:14.946336 11416 net.cpp:406] relu2 <- conv2
I0324 10:47:14.946341 11416 net.cpp:367] relu2 -> conv2 (in-place)
I0324 10:47:14.946689 11416 net.cpp:122] Setting up relu2
I0324 10:47:14.946702 11416 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:47:14.946705 11416 net.cpp:137] Memory required for data: 587609200
I0324 10:47:14.946709 11416 layer_factory.hpp:77] Creating layer norm2
I0324 10:47:14.946717 11416 net.cpp:84] Creating Layer norm2
I0324 10:47:14.946720 11416 net.cpp:406] norm2 <- conv2
I0324 10:47:14.946725 11416 net.cpp:380] norm2 -> norm2
I0324 10:47:14.946977 11416 net.cpp:122] Setting up norm2
I0324 10:47:14.946986 11416 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:47:14.946990 11416 net.cpp:137] Memory required for data: 662258800
I0324 10:47:14.946995 11416 layer_factory.hpp:77] Creating layer pool2
I0324 10:47:14.947000 11416 net.cpp:84] Creating Layer pool2
I0324 10:47:14.947005 11416 net.cpp:406] pool2 <- norm2
I0324 10:47:14.947008 11416 net.cpp:380] pool2 -> pool2
I0324 10:47:14.947031 11416 net.cpp:122] Setting up pool2
I0324 10:47:14.947036 11416 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:47:14.947041 11416 net.cpp:137] Memory required for data: 679564400
I0324 10:47:14.947044 11416 layer_factory.hpp:77] Creating layer conv3
I0324 10:47:14.947052 11416 net.cpp:84] Creating Layer conv3
I0324 10:47:14.947057 11416 net.cpp:406] conv3 <- pool2
I0324 10:47:14.947062 11416 net.cpp:380] conv3 -> conv3
I0324 10:47:14.954058 11416 net.cpp:122] Setting up conv3
I0324 10:47:14.954079 11416 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:14.954084 11416 net.cpp:137] Memory required for data: 705522800
I0324 10:47:14.954107 11416 layer_factory.hpp:77] Creating layer relu3
I0324 10:47:14.954114 11416 net.cpp:84] Creating Layer relu3
I0324 10:47:14.954118 11416 net.cpp:406] relu3 <- conv3
I0324 10:47:14.954124 11416 net.cpp:367] relu3 -> conv3 (in-place)
I0324 10:47:14.954362 11416 net.cpp:122] Setting up relu3
I0324 10:47:14.954371 11416 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:14.954375 11416 net.cpp:137] Memory required for data: 731481200
I0324 10:47:14.954380 11416 layer_factory.hpp:77] Creating layer conv4
I0324 10:47:14.954403 11416 net.cpp:84] Creating Layer conv4
I0324 10:47:14.954408 11416 net.cpp:406] conv4 <- conv3
I0324 10:47:14.954427 11416 net.cpp:380] conv4 -> conv4
I0324 10:47:14.962325 11416 net.cpp:122] Setting up conv4
I0324 10:47:14.962353 11416 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:14.962358 11416 net.cpp:137] Memory required for data: 757439600
I0324 10:47:14.962368 11416 layer_factory.hpp:77] Creating layer relu4
I0324 10:47:14.962374 11416 net.cpp:84] Creating Layer relu4
I0324 10:47:14.962379 11416 net.cpp:406] relu4 <- conv4
I0324 10:47:14.962385 11416 net.cpp:367] relu4 -> conv4 (in-place)
I0324 10:47:14.962815 11416 net.cpp:122] Setting up relu4
I0324 10:47:14.962827 11416 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:14.962832 11416 net.cpp:137] Memory required for data: 783398000
I0324 10:47:14.962836 11416 layer_factory.hpp:77] Creating layer conv5
I0324 10:47:14.962846 11416 net.cpp:84] Creating Layer conv5
I0324 10:47:14.962850 11416 net.cpp:406] conv5 <- conv4
I0324 10:47:14.962855 11416 net.cpp:380] conv5 -> conv5
I0324 10:47:14.969290 11416 net.cpp:122] Setting up conv5
I0324 10:47:14.969314 11416 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:47:14.969319 11416 net.cpp:137] Memory required for data: 800703600
I0324 10:47:14.969331 11416 layer_factory.hpp:77] Creating layer relu5
I0324 10:47:14.969336 11416 net.cpp:84] Creating Layer relu5
I0324 10:47:14.969341 11416 net.cpp:406] relu5 <- conv5
I0324 10:47:14.969348 11416 net.cpp:367] relu5 -> conv5 (in-place)
I0324 10:47:14.969769 11416 net.cpp:122] Setting up relu5
I0324 10:47:14.969780 11416 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:47:14.969784 11416 net.cpp:137] Memory required for data: 818009200
I0324 10:47:14.969789 11416 layer_factory.hpp:77] Creating layer pool5
I0324 10:47:14.969795 11416 net.cpp:84] Creating Layer pool5
I0324 10:47:14.969799 11416 net.cpp:406] pool5 <- conv5
I0324 10:47:14.969807 11416 net.cpp:380] pool5 -> pool5
I0324 10:47:14.969841 11416 net.cpp:122] Setting up pool5
I0324 10:47:14.969847 11416 net.cpp:129] Top shape: 100 256 6 6 (921600)
I0324 10:47:14.969851 11416 net.cpp:137] Memory required for data: 821695600
I0324 10:47:14.969856 11416 layer_factory.hpp:77] Creating layer fc6
I0324 10:47:14.969862 11416 net.cpp:84] Creating Layer fc6
I0324 10:47:14.969867 11416 net.cpp:406] fc6 <- pool5
I0324 10:47:14.969873 11416 net.cpp:380] fc6 -> fc6
I0324 10:47:15.216145 11416 net.cpp:122] Setting up fc6
I0324 10:47:15.216176 11416 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:15.216181 11416 net.cpp:137] Memory required for data: 823334000
I0324 10:47:15.216189 11416 layer_factory.hpp:77] Creating layer relu6
I0324 10:47:15.216197 11416 net.cpp:84] Creating Layer relu6
I0324 10:47:15.216202 11416 net.cpp:406] relu6 <- fc6
I0324 10:47:15.216207 11416 net.cpp:367] relu6 -> fc6 (in-place)
I0324 10:47:15.216601 11416 net.cpp:122] Setting up relu6
I0324 10:47:15.216610 11416 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:15.216614 11416 net.cpp:137] Memory required for data: 824972400
I0324 10:47:15.216619 11416 layer_factory.hpp:77] Creating layer drop6
I0324 10:47:15.216624 11416 net.cpp:84] Creating Layer drop6
I0324 10:47:15.216627 11416 net.cpp:406] drop6 <- fc6
I0324 10:47:15.216632 11416 net.cpp:367] drop6 -> fc6 (in-place)
I0324 10:47:15.216652 11416 net.cpp:122] Setting up drop6
I0324 10:47:15.216657 11416 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:15.216661 11416 net.cpp:137] Memory required for data: 826610800
I0324 10:47:15.216665 11416 layer_factory.hpp:77] Creating layer fc7
I0324 10:47:15.216672 11416 net.cpp:84] Creating Layer fc7
I0324 10:47:15.216676 11416 net.cpp:406] fc7 <- fc6
I0324 10:47:15.216681 11416 net.cpp:380] fc7 -> fc7
I0324 10:47:15.323819 11416 net.cpp:122] Setting up fc7
I0324 10:47:15.323850 11416 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:15.323855 11416 net.cpp:137] Memory required for data: 828249200
I0324 10:47:15.323864 11416 layer_factory.hpp:77] Creating layer relu7
I0324 10:47:15.323873 11416 net.cpp:84] Creating Layer relu7
I0324 10:47:15.323884 11416 net.cpp:406] relu7 <- fc7
I0324 10:47:15.323920 11416 net.cpp:367] relu7 -> fc7 (in-place)
I0324 10:47:15.324442 11416 net.cpp:122] Setting up relu7
I0324 10:47:15.324453 11416 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:15.324457 11416 net.cpp:137] Memory required for data: 829887600
I0324 10:47:15.324468 11416 layer_factory.hpp:77] Creating layer drop7
I0324 10:47:15.324483 11416 net.cpp:84] Creating Layer drop7
I0324 10:47:15.324487 11416 net.cpp:406] drop7 <- fc7
I0324 10:47:15.324493 11416 net.cpp:367] drop7 -> fc7 (in-place)
I0324 10:47:15.324513 11416 net.cpp:122] Setting up drop7
I0324 10:47:15.324518 11416 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:15.324522 11416 net.cpp:137] Memory required for data: 831526000
I0324 10:47:15.324527 11416 layer_factory.hpp:77] Creating layer fc8_plantvillage
I0324 10:47:15.324532 11416 net.cpp:84] Creating Layer fc8_plantvillage
I0324 10:47:15.324535 11416 net.cpp:406] fc8_plantvillage <- fc7
I0324 10:47:15.324543 11416 net.cpp:380] fc8_plantvillage -> fc8_plantvillage
I0324 10:47:15.325516 11416 net.cpp:122] Setting up fc8_plantvillage
I0324 10:47:15.325525 11416 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:15.325528 11416 net.cpp:137] Memory required for data: 831541200
I0324 10:47:15.325533 11416 layer_factory.hpp:77] Creating layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:47:15.325541 11416 net.cpp:84] Creating Layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:47:15.325544 11416 net.cpp:406] fc8_plantvillage_fc8_plantvillage_0_split <- fc8_plantvillage
I0324 10:47:15.325549 11416 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:47:15.325556 11416 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:47:15.325562 11416 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:47:15.325592 11416 net.cpp:122] Setting up fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:47:15.325598 11416 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:15.325601 11416 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:15.325605 11416 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:15.325608 11416 net.cpp:137] Memory required for data: 831586800
I0324 10:47:15.325613 11416 layer_factory.hpp:77] Creating layer prob
I0324 10:47:15.325618 11416 net.cpp:84] Creating Layer prob
I0324 10:47:15.325623 11416 net.cpp:406] prob <- fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:47:15.325628 11416 net.cpp:380] prob -> prob
I0324 10:47:15.326069 11416 net.cpp:122] Setting up prob
I0324 10:47:15.326078 11416 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:15.326082 11416 net.cpp:137] Memory required for data: 831602000
I0324 10:47:15.326086 11416 layer_factory.hpp:77] Creating layer hdf5out
I0324 10:47:15.326092 11416 net.cpp:84] Creating Layer hdf5out
I0324 10:47:15.326097 11416 net.cpp:406] hdf5out <- prob
I0324 10:47:15.326102 11416 net.cpp:406] hdf5out <- label_data_1_split_0
I0324 10:47:15.326839 11416 net.cpp:122] Setting up hdf5out
I0324 10:47:15.326848 11416 net.cpp:137] Memory required for data: 831602000
I0324 10:47:15.326851 11416 layer_factory.hpp:77] Creating layer loss
I0324 10:47:15.326856 11416 net.cpp:84] Creating Layer loss
I0324 10:47:15.326861 11416 net.cpp:406] loss <- fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:47:15.326865 11416 net.cpp:406] loss <- label_data_1_split_1
I0324 10:47:15.326871 11416 net.cpp:380] loss -> loss
I0324 10:47:15.326879 11416 layer_factory.hpp:77] Creating layer loss
I0324 10:47:15.327342 11416 net.cpp:122] Setting up loss
I0324 10:47:15.327350 11416 net.cpp:129] Top shape: (1)
I0324 10:47:15.327354 11416 net.cpp:132]     with loss weight 1
I0324 10:47:15.327373 11416 net.cpp:137] Memory required for data: 831602004
I0324 10:47:15.327378 11416 layer_factory.hpp:77] Creating layer accuracy
I0324 10:47:15.327383 11416 net.cpp:84] Creating Layer accuracy
I0324 10:47:15.327387 11416 net.cpp:406] accuracy <- fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:47:15.327402 11416 net.cpp:406] accuracy <- label_data_1_split_2
I0324 10:47:15.327407 11416 net.cpp:380] accuracy -> accuracy
I0324 10:47:15.327414 11416 net.cpp:122] Setting up accuracy
I0324 10:47:15.327419 11416 net.cpp:129] Top shape: (1)
I0324 10:47:15.327422 11416 net.cpp:137] Memory required for data: 831602008
I0324 10:47:15.327426 11416 net.cpp:200] accuracy does not need backward computation.
I0324 10:47:15.327432 11416 net.cpp:198] loss needs backward computation.
I0324 10:47:15.327438 11416 net.cpp:200] hdf5out does not need backward computation.
I0324 10:47:15.327442 11416 net.cpp:200] prob does not need backward computation.
I0324 10:47:15.327446 11416 net.cpp:198] fc8_plantvillage_fc8_plantvillage_0_split needs backward computation.
I0324 10:47:15.327450 11416 net.cpp:198] fc8_plantvillage needs backward computation.
I0324 10:47:15.327455 11416 net.cpp:198] drop7 needs backward computation.
I0324 10:47:15.327457 11416 net.cpp:198] relu7 needs backward computation.
I0324 10:47:15.327461 11416 net.cpp:198] fc7 needs backward computation.
I0324 10:47:15.327471 11416 net.cpp:198] drop6 needs backward computation.
I0324 10:47:15.327474 11416 net.cpp:198] relu6 needs backward computation.
I0324 10:47:15.327478 11416 net.cpp:198] fc6 needs backward computation.
I0324 10:47:15.327481 11416 net.cpp:198] pool5 needs backward computation.
I0324 10:47:15.327486 11416 net.cpp:198] relu5 needs backward computation.
I0324 10:47:15.327489 11416 net.cpp:198] conv5 needs backward computation.
I0324 10:47:15.327493 11416 net.cpp:198] relu4 needs backward computation.
I0324 10:47:15.327497 11416 net.cpp:198] conv4 needs backward computation.
I0324 10:47:15.327502 11416 net.cpp:198] relu3 needs backward computation.
I0324 10:47:15.327504 11416 net.cpp:198] conv3 needs backward computation.
I0324 10:47:15.327508 11416 net.cpp:198] pool2 needs backward computation.
I0324 10:47:15.327512 11416 net.cpp:198] norm2 needs backward computation.
I0324 10:47:15.327517 11416 net.cpp:198] relu2 needs backward computation.
I0324 10:47:15.327519 11416 net.cpp:198] conv2 needs backward computation.
I0324 10:47:15.327523 11416 net.cpp:198] pool1 needs backward computation.
I0324 10:47:15.327527 11416 net.cpp:198] norm1 needs backward computation.
I0324 10:47:15.327531 11416 net.cpp:198] relu1 needs backward computation.
I0324 10:47:15.327535 11416 net.cpp:198] conv1 needs backward computation.
I0324 10:47:15.327539 11416 net.cpp:200] label_data_1_split does not need backward computation.
I0324 10:47:15.327545 11416 net.cpp:200] data does not need backward computation.
I0324 10:47:15.327549 11416 net.cpp:242] This network produces output accuracy
I0324 10:47:15.327553 11416 net.cpp:242] This network produces output loss
I0324 10:47:15.327566 11416 net.cpp:255] Network initialization done.
I0324 10:47:21.612716 11416 caffe.cpp:290] Running for 1 iterations.
I0324 10:47:21.693142 11416 hdf5_output_layer.cpp:32] Saving HDF5 file hdf5_dumps/iter_1836.h5
I0324 10:47:21.693331 11416 hdf5_output_layer.cpp:37] Successfully saved 100 rows
I0324 10:47:21.693570 11416 caffe.cpp:313] Batch 0, accuracy = 0.89
I0324 10:47:21.693583 11416 caffe.cpp:313] Batch 0, loss = 0.412568
I0324 10:47:21.693588 11416 caffe.cpp:318] Loss: 0.412568
I0324 10:47:21.693593 11416 caffe.cpp:330] accuracy = 0.89
I0324 10:47:21.693600 11416 caffe.cpp:330] loss = 0.412568 (* 1 = 0.412568 loss)
