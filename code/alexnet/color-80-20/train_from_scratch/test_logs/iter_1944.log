I0324 10:47:21.874599 11423 caffe.cpp:275] Use GPU with device ID 0
I0324 10:47:21.874795 11423 caffe.cpp:279] GPU device name: GeForce GTX 1060
I0324 10:47:22.075546 11423 net.cpp:294] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0324 10:47:22.075995 11423 net.cpp:51] Initializing net from parameters: 
state {
  phase: TEST
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto"
  }
  data_param {
    source: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_plantvillage"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_plantvillage"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 38
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc8_plantvillage"
  top: "prob"
  include {
    phase: TEST
  }
}
layer {
  name: "hdf5out"
  type: "HDF5Output"
  bottom: "prob"
  bottom: "label"
  include {
    phase: TEST
  }
  hdf5_output_param {
    file_name: "hdf5_dumps/iter_1944.h5"
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
I0324 10:47:22.076364 11423 layer_factory.hpp:77] Creating layer data
I0324 10:47:22.076591 11423 db_lmdb.cpp:35] Opened lmdb /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db
I0324 10:47:22.076661 11423 net.cpp:84] Creating Layer data
I0324 10:47:22.076685 11423 net.cpp:380] data -> data
I0324 10:47:22.076719 11423 net.cpp:380] data -> label
I0324 10:47:22.076745 11423 data_transformer.cpp:25] Loading mean file from: /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto
I0324 10:47:22.106468 11423 data_layer.cpp:45] output data size: 100,3,227,227
I0324 10:47:22.202256 11423 net.cpp:122] Setting up data
I0324 10:47:22.202284 11423 net.cpp:129] Top shape: 100 3 227 227 (15458700)
I0324 10:47:22.202291 11423 net.cpp:129] Top shape: 100 (100)
I0324 10:47:22.202294 11423 net.cpp:137] Memory required for data: 61835200
I0324 10:47:22.202299 11423 layer_factory.hpp:77] Creating layer label_data_1_split
I0324 10:47:22.202308 11423 net.cpp:84] Creating Layer label_data_1_split
I0324 10:47:22.202313 11423 net.cpp:406] label_data_1_split <- label
I0324 10:47:22.202320 11423 net.cpp:380] label_data_1_split -> label_data_1_split_0
I0324 10:47:22.202328 11423 net.cpp:380] label_data_1_split -> label_data_1_split_1
I0324 10:47:22.202333 11423 net.cpp:380] label_data_1_split -> label_data_1_split_2
I0324 10:47:22.202411 11423 net.cpp:122] Setting up label_data_1_split
I0324 10:47:22.202417 11423 net.cpp:129] Top shape: 100 (100)
I0324 10:47:22.202421 11423 net.cpp:129] Top shape: 100 (100)
I0324 10:47:22.202425 11423 net.cpp:129] Top shape: 100 (100)
I0324 10:47:22.202430 11423 net.cpp:137] Memory required for data: 61836400
I0324 10:47:22.202432 11423 layer_factory.hpp:77] Creating layer conv1
I0324 10:47:22.202441 11423 net.cpp:84] Creating Layer conv1
I0324 10:47:22.202445 11423 net.cpp:406] conv1 <- data
I0324 10:47:22.202450 11423 net.cpp:380] conv1 -> conv1
I0324 10:47:22.718884 11423 net.cpp:122] Setting up conv1
I0324 10:47:22.718919 11423 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:47:22.718924 11423 net.cpp:137] Memory required for data: 177996400
I0324 10:47:22.718955 11423 layer_factory.hpp:77] Creating layer relu1
I0324 10:47:22.719550 11423 net.cpp:84] Creating Layer relu1
I0324 10:47:22.719568 11423 net.cpp:406] relu1 <- conv1
I0324 10:47:22.719588 11423 net.cpp:367] relu1 -> conv1 (in-place)
I0324 10:47:22.719974 11423 net.cpp:122] Setting up relu1
I0324 10:47:22.719985 11423 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:47:22.719988 11423 net.cpp:137] Memory required for data: 294156400
I0324 10:47:22.719992 11423 layer_factory.hpp:77] Creating layer norm1
I0324 10:47:22.720000 11423 net.cpp:84] Creating Layer norm1
I0324 10:47:22.720003 11423 net.cpp:406] norm1 <- conv1
I0324 10:47:22.720010 11423 net.cpp:380] norm1 -> norm1
I0324 10:47:22.720361 11423 net.cpp:122] Setting up norm1
I0324 10:47:22.720371 11423 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:47:22.720376 11423 net.cpp:137] Memory required for data: 410316400
I0324 10:47:22.720379 11423 layer_factory.hpp:77] Creating layer pool1
I0324 10:47:22.720386 11423 net.cpp:84] Creating Layer pool1
I0324 10:47:22.720389 11423 net.cpp:406] pool1 <- norm1
I0324 10:47:22.720394 11423 net.cpp:380] pool1 -> pool1
I0324 10:47:22.720417 11423 net.cpp:122] Setting up pool1
I0324 10:47:22.720423 11423 net.cpp:129] Top shape: 100 96 27 27 (6998400)
I0324 10:47:22.720427 11423 net.cpp:137] Memory required for data: 438310000
I0324 10:47:22.720432 11423 layer_factory.hpp:77] Creating layer conv2
I0324 10:47:22.720439 11423 net.cpp:84] Creating Layer conv2
I0324 10:47:22.720443 11423 net.cpp:406] conv2 <- pool1
I0324 10:47:22.720448 11423 net.cpp:380] conv2 -> conv2
I0324 10:47:22.725581 11423 net.cpp:122] Setting up conv2
I0324 10:47:22.725608 11423 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:47:22.725613 11423 net.cpp:137] Memory required for data: 512959600
I0324 10:47:22.725623 11423 layer_factory.hpp:77] Creating layer relu2
I0324 10:47:22.725630 11423 net.cpp:84] Creating Layer relu2
I0324 10:47:22.725634 11423 net.cpp:406] relu2 <- conv2
I0324 10:47:22.725641 11423 net.cpp:367] relu2 -> conv2 (in-place)
I0324 10:47:22.725998 11423 net.cpp:122] Setting up relu2
I0324 10:47:22.726009 11423 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:47:22.726013 11423 net.cpp:137] Memory required for data: 587609200
I0324 10:47:22.726018 11423 layer_factory.hpp:77] Creating layer norm2
I0324 10:47:22.726024 11423 net.cpp:84] Creating Layer norm2
I0324 10:47:22.726029 11423 net.cpp:406] norm2 <- conv2
I0324 10:47:22.726034 11423 net.cpp:380] norm2 -> norm2
I0324 10:47:22.726295 11423 net.cpp:122] Setting up norm2
I0324 10:47:22.726305 11423 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:47:22.726308 11423 net.cpp:137] Memory required for data: 662258800
I0324 10:47:22.726312 11423 layer_factory.hpp:77] Creating layer pool2
I0324 10:47:22.726317 11423 net.cpp:84] Creating Layer pool2
I0324 10:47:22.726321 11423 net.cpp:406] pool2 <- norm2
I0324 10:47:22.726326 11423 net.cpp:380] pool2 -> pool2
I0324 10:47:22.726348 11423 net.cpp:122] Setting up pool2
I0324 10:47:22.726356 11423 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:47:22.726358 11423 net.cpp:137] Memory required for data: 679564400
I0324 10:47:22.726362 11423 layer_factory.hpp:77] Creating layer conv3
I0324 10:47:22.726372 11423 net.cpp:84] Creating Layer conv3
I0324 10:47:22.726377 11423 net.cpp:406] conv3 <- pool2
I0324 10:47:22.726382 11423 net.cpp:380] conv3 -> conv3
I0324 10:47:22.733482 11423 net.cpp:122] Setting up conv3
I0324 10:47:22.733505 11423 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:22.733510 11423 net.cpp:137] Memory required for data: 705522800
I0324 10:47:22.733520 11423 layer_factory.hpp:77] Creating layer relu3
I0324 10:47:22.733526 11423 net.cpp:84] Creating Layer relu3
I0324 10:47:22.733531 11423 net.cpp:406] relu3 <- conv3
I0324 10:47:22.733536 11423 net.cpp:367] relu3 -> conv3 (in-place)
I0324 10:47:22.733799 11423 net.cpp:122] Setting up relu3
I0324 10:47:22.733808 11423 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:22.733813 11423 net.cpp:137] Memory required for data: 731481200
I0324 10:47:22.733816 11423 layer_factory.hpp:77] Creating layer conv4
I0324 10:47:22.733830 11423 net.cpp:84] Creating Layer conv4
I0324 10:47:22.733835 11423 net.cpp:406] conv4 <- conv3
I0324 10:47:22.733852 11423 net.cpp:380] conv4 -> conv4
I0324 10:47:22.741796 11423 net.cpp:122] Setting up conv4
I0324 10:47:22.741823 11423 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:22.741827 11423 net.cpp:137] Memory required for data: 757439600
I0324 10:47:22.741837 11423 layer_factory.hpp:77] Creating layer relu4
I0324 10:47:22.741845 11423 net.cpp:84] Creating Layer relu4
I0324 10:47:22.741850 11423 net.cpp:406] relu4 <- conv4
I0324 10:47:22.741858 11423 net.cpp:367] relu4 -> conv4 (in-place)
I0324 10:47:22.742290 11423 net.cpp:122] Setting up relu4
I0324 10:47:22.742301 11423 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:22.742305 11423 net.cpp:137] Memory required for data: 783398000
I0324 10:47:22.742310 11423 layer_factory.hpp:77] Creating layer conv5
I0324 10:47:22.742319 11423 net.cpp:84] Creating Layer conv5
I0324 10:47:22.742323 11423 net.cpp:406] conv5 <- conv4
I0324 10:47:22.742331 11423 net.cpp:380] conv5 -> conv5
I0324 10:47:22.748852 11423 net.cpp:122] Setting up conv5
I0324 10:47:22.748878 11423 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:47:22.748883 11423 net.cpp:137] Memory required for data: 800703600
I0324 10:47:22.748893 11423 layer_factory.hpp:77] Creating layer relu5
I0324 10:47:22.748903 11423 net.cpp:84] Creating Layer relu5
I0324 10:47:22.748908 11423 net.cpp:406] relu5 <- conv5
I0324 10:47:22.748912 11423 net.cpp:367] relu5 -> conv5 (in-place)
I0324 10:47:22.749351 11423 net.cpp:122] Setting up relu5
I0324 10:47:22.749363 11423 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:47:22.749367 11423 net.cpp:137] Memory required for data: 818009200
I0324 10:47:22.749372 11423 layer_factory.hpp:77] Creating layer pool5
I0324 10:47:22.749378 11423 net.cpp:84] Creating Layer pool5
I0324 10:47:22.749382 11423 net.cpp:406] pool5 <- conv5
I0324 10:47:22.749388 11423 net.cpp:380] pool5 -> pool5
I0324 10:47:22.749419 11423 net.cpp:122] Setting up pool5
I0324 10:47:22.749428 11423 net.cpp:129] Top shape: 100 256 6 6 (921600)
I0324 10:47:22.749431 11423 net.cpp:137] Memory required for data: 821695600
I0324 10:47:22.749435 11423 layer_factory.hpp:77] Creating layer fc6
I0324 10:47:22.749441 11423 net.cpp:84] Creating Layer fc6
I0324 10:47:22.749445 11423 net.cpp:406] fc6 <- pool5
I0324 10:47:22.749450 11423 net.cpp:380] fc6 -> fc6
I0324 10:47:23.008615 11423 net.cpp:122] Setting up fc6
I0324 10:47:23.008646 11423 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:23.008651 11423 net.cpp:137] Memory required for data: 823334000
I0324 10:47:23.008661 11423 layer_factory.hpp:77] Creating layer relu6
I0324 10:47:23.008671 11423 net.cpp:84] Creating Layer relu6
I0324 10:47:23.008675 11423 net.cpp:406] relu6 <- fc6
I0324 10:47:23.008682 11423 net.cpp:367] relu6 -> fc6 (in-place)
I0324 10:47:23.009068 11423 net.cpp:122] Setting up relu6
I0324 10:47:23.009076 11423 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:23.009080 11423 net.cpp:137] Memory required for data: 824972400
I0324 10:47:23.009084 11423 layer_factory.hpp:77] Creating layer drop6
I0324 10:47:23.009090 11423 net.cpp:84] Creating Layer drop6
I0324 10:47:23.009094 11423 net.cpp:406] drop6 <- fc6
I0324 10:47:23.009101 11423 net.cpp:367] drop6 -> fc6 (in-place)
I0324 10:47:23.009135 11423 net.cpp:122] Setting up drop6
I0324 10:47:23.009140 11423 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:23.009143 11423 net.cpp:137] Memory required for data: 826610800
I0324 10:47:23.009147 11423 layer_factory.hpp:77] Creating layer fc7
I0324 10:47:23.009153 11423 net.cpp:84] Creating Layer fc7
I0324 10:47:23.009157 11423 net.cpp:406] fc7 <- fc6
I0324 10:47:23.009162 11423 net.cpp:380] fc7 -> fc7
I0324 10:47:23.120743 11423 net.cpp:122] Setting up fc7
I0324 10:47:23.120774 11423 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:23.120779 11423 net.cpp:137] Memory required for data: 828249200
I0324 10:47:23.120787 11423 layer_factory.hpp:77] Creating layer relu7
I0324 10:47:23.120795 11423 net.cpp:84] Creating Layer relu7
I0324 10:47:23.120808 11423 net.cpp:406] relu7 <- fc7
I0324 10:47:23.120824 11423 net.cpp:367] relu7 -> fc7 (in-place)
I0324 10:47:23.121383 11423 net.cpp:122] Setting up relu7
I0324 10:47:23.121394 11423 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:23.121398 11423 net.cpp:137] Memory required for data: 829887600
I0324 10:47:23.121402 11423 layer_factory.hpp:77] Creating layer drop7
I0324 10:47:23.121408 11423 net.cpp:84] Creating Layer drop7
I0324 10:47:23.121412 11423 net.cpp:406] drop7 <- fc7
I0324 10:47:23.121417 11423 net.cpp:367] drop7 -> fc7 (in-place)
I0324 10:47:23.121438 11423 net.cpp:122] Setting up drop7
I0324 10:47:23.121444 11423 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:23.121448 11423 net.cpp:137] Memory required for data: 831526000
I0324 10:47:23.121451 11423 layer_factory.hpp:77] Creating layer fc8_plantvillage
I0324 10:47:23.121460 11423 net.cpp:84] Creating Layer fc8_plantvillage
I0324 10:47:23.121464 11423 net.cpp:406] fc8_plantvillage <- fc7
I0324 10:47:23.121469 11423 net.cpp:380] fc8_plantvillage -> fc8_plantvillage
I0324 10:47:23.122443 11423 net.cpp:122] Setting up fc8_plantvillage
I0324 10:47:23.122450 11423 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:23.122454 11423 net.cpp:137] Memory required for data: 831541200
I0324 10:47:23.122460 11423 layer_factory.hpp:77] Creating layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:47:23.122465 11423 net.cpp:84] Creating Layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:47:23.122469 11423 net.cpp:406] fc8_plantvillage_fc8_plantvillage_0_split <- fc8_plantvillage
I0324 10:47:23.122476 11423 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:47:23.122483 11423 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:47:23.122488 11423 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:47:23.122529 11423 net.cpp:122] Setting up fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:47:23.122537 11423 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:23.122541 11423 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:23.122545 11423 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:23.122548 11423 net.cpp:137] Memory required for data: 831586800
I0324 10:47:23.122552 11423 layer_factory.hpp:77] Creating layer prob
I0324 10:47:23.122557 11423 net.cpp:84] Creating Layer prob
I0324 10:47:23.122561 11423 net.cpp:406] prob <- fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:47:23.122566 11423 net.cpp:380] prob -> prob
I0324 10:47:23.123031 11423 net.cpp:122] Setting up prob
I0324 10:47:23.123040 11423 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:23.123044 11423 net.cpp:137] Memory required for data: 831602000
I0324 10:47:23.123049 11423 layer_factory.hpp:77] Creating layer hdf5out
I0324 10:47:23.123054 11423 net.cpp:84] Creating Layer hdf5out
I0324 10:47:23.123059 11423 net.cpp:406] hdf5out <- prob
I0324 10:47:23.123064 11423 net.cpp:406] hdf5out <- label_data_1_split_0
I0324 10:47:23.123800 11423 net.cpp:122] Setting up hdf5out
I0324 10:47:23.123806 11423 net.cpp:137] Memory required for data: 831602000
I0324 10:47:23.123811 11423 layer_factory.hpp:77] Creating layer loss
I0324 10:47:23.123816 11423 net.cpp:84] Creating Layer loss
I0324 10:47:23.123821 11423 net.cpp:406] loss <- fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:47:23.123824 11423 net.cpp:406] loss <- label_data_1_split_1
I0324 10:47:23.123829 11423 net.cpp:380] loss -> loss
I0324 10:47:23.123836 11423 layer_factory.hpp:77] Creating layer loss
I0324 10:47:23.124331 11423 net.cpp:122] Setting up loss
I0324 10:47:23.124341 11423 net.cpp:129] Top shape: (1)
I0324 10:47:23.124346 11423 net.cpp:132]     with loss weight 1
I0324 10:47:23.124363 11423 net.cpp:137] Memory required for data: 831602004
I0324 10:47:23.124367 11423 layer_factory.hpp:77] Creating layer accuracy
I0324 10:47:23.124373 11423 net.cpp:84] Creating Layer accuracy
I0324 10:47:23.124377 11423 net.cpp:406] accuracy <- fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:47:23.124393 11423 net.cpp:406] accuracy <- label_data_1_split_2
I0324 10:47:23.124400 11423 net.cpp:380] accuracy -> accuracy
I0324 10:47:23.124408 11423 net.cpp:122] Setting up accuracy
I0324 10:47:23.124413 11423 net.cpp:129] Top shape: (1)
I0324 10:47:23.124415 11423 net.cpp:137] Memory required for data: 831602008
I0324 10:47:23.124419 11423 net.cpp:200] accuracy does not need backward computation.
I0324 10:47:23.124426 11423 net.cpp:198] loss needs backward computation.
I0324 10:47:23.124430 11423 net.cpp:200] hdf5out does not need backward computation.
I0324 10:47:23.124434 11423 net.cpp:200] prob does not need backward computation.
I0324 10:47:23.124440 11423 net.cpp:198] fc8_plantvillage_fc8_plantvillage_0_split needs backward computation.
I0324 10:47:23.124444 11423 net.cpp:198] fc8_plantvillage needs backward computation.
I0324 10:47:23.124449 11423 net.cpp:198] drop7 needs backward computation.
I0324 10:47:23.124451 11423 net.cpp:198] relu7 needs backward computation.
I0324 10:47:23.124455 11423 net.cpp:198] fc7 needs backward computation.
I0324 10:47:23.124459 11423 net.cpp:198] drop6 needs backward computation.
I0324 10:47:23.124464 11423 net.cpp:198] relu6 needs backward computation.
I0324 10:47:23.124466 11423 net.cpp:198] fc6 needs backward computation.
I0324 10:47:23.124470 11423 net.cpp:198] pool5 needs backward computation.
I0324 10:47:23.124475 11423 net.cpp:198] relu5 needs backward computation.
I0324 10:47:23.124478 11423 net.cpp:198] conv5 needs backward computation.
I0324 10:47:23.124482 11423 net.cpp:198] relu4 needs backward computation.
I0324 10:47:23.124485 11423 net.cpp:198] conv4 needs backward computation.
I0324 10:47:23.124490 11423 net.cpp:198] relu3 needs backward computation.
I0324 10:47:23.124493 11423 net.cpp:198] conv3 needs backward computation.
I0324 10:47:23.124497 11423 net.cpp:198] pool2 needs backward computation.
I0324 10:47:23.124500 11423 net.cpp:198] norm2 needs backward computation.
I0324 10:47:23.124505 11423 net.cpp:198] relu2 needs backward computation.
I0324 10:47:23.124508 11423 net.cpp:198] conv2 needs backward computation.
I0324 10:47:23.124516 11423 net.cpp:198] pool1 needs backward computation.
I0324 10:47:23.124521 11423 net.cpp:198] norm1 needs backward computation.
I0324 10:47:23.124529 11423 net.cpp:198] relu1 needs backward computation.
I0324 10:47:23.124533 11423 net.cpp:198] conv1 needs backward computation.
I0324 10:47:23.124537 11423 net.cpp:200] label_data_1_split does not need backward computation.
I0324 10:47:23.124542 11423 net.cpp:200] data does not need backward computation.
I0324 10:47:23.124545 11423 net.cpp:242] This network produces output accuracy
I0324 10:47:23.124549 11423 net.cpp:242] This network produces output loss
I0324 10:47:23.124563 11423 net.cpp:255] Network initialization done.
I0324 10:47:27.641793 11423 caffe.cpp:290] Running for 1 iterations.
I0324 10:47:27.722219 11423 hdf5_output_layer.cpp:32] Saving HDF5 file hdf5_dumps/iter_1944.h5
I0324 10:47:27.722822 11423 hdf5_output_layer.cpp:37] Successfully saved 100 rows
I0324 10:47:27.723098 11423 caffe.cpp:313] Batch 0, accuracy = 0.89
I0324 10:47:27.723111 11423 caffe.cpp:313] Batch 0, loss = 0.425424
I0324 10:47:27.723116 11423 caffe.cpp:318] Loss: 0.425424
I0324 10:47:27.723121 11423 caffe.cpp:330] accuracy = 0.89
I0324 10:47:27.723129 11423 caffe.cpp:330] loss = 0.425424 (* 1 = 0.425424 loss)
