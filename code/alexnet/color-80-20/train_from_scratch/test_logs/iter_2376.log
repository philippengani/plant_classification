I0324 10:47:55.243103 11543 caffe.cpp:275] Use GPU with device ID 0
I0324 10:47:55.243340 11543 caffe.cpp:279] GPU device name: GeForce GTX 1060
I0324 10:47:55.442023 11543 net.cpp:294] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0324 10:47:55.442134 11543 net.cpp:51] Initializing net from parameters: 
state {
  phase: TEST
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto"
  }
  data_param {
    source: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_plantvillage"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_plantvillage"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 38
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc8_plantvillage"
  top: "prob"
  include {
    phase: TEST
  }
}
layer {
  name: "hdf5out"
  type: "HDF5Output"
  bottom: "prob"
  bottom: "label"
  include {
    phase: TEST
  }
  hdf5_output_param {
    file_name: "hdf5_dumps/iter_2376.h5"
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
I0324 10:47:55.442239 11543 layer_factory.hpp:77] Creating layer data
I0324 10:47:55.442299 11543 db_lmdb.cpp:35] Opened lmdb /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db
I0324 10:47:55.442319 11543 net.cpp:84] Creating Layer data
I0324 10:47:55.442324 11543 net.cpp:380] data -> data
I0324 10:47:55.442337 11543 net.cpp:380] data -> label
I0324 10:47:55.442343 11543 data_transformer.cpp:25] Loading mean file from: /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto
I0324 10:47:55.451004 11543 data_layer.cpp:45] output data size: 100,3,227,227
I0324 10:47:55.544399 11543 net.cpp:122] Setting up data
I0324 10:47:55.544430 11543 net.cpp:129] Top shape: 100 3 227 227 (15458700)
I0324 10:47:55.544440 11543 net.cpp:129] Top shape: 100 (100)
I0324 10:47:55.544445 11543 net.cpp:137] Memory required for data: 61835200
I0324 10:47:55.544453 11543 layer_factory.hpp:77] Creating layer label_data_1_split
I0324 10:47:55.544466 11543 net.cpp:84] Creating Layer label_data_1_split
I0324 10:47:55.544493 11543 net.cpp:406] label_data_1_split <- label
I0324 10:47:55.544503 11543 net.cpp:380] label_data_1_split -> label_data_1_split_0
I0324 10:47:55.544517 11543 net.cpp:380] label_data_1_split -> label_data_1_split_1
I0324 10:47:55.544540 11543 net.cpp:380] label_data_1_split -> label_data_1_split_2
I0324 10:47:55.544592 11543 net.cpp:122] Setting up label_data_1_split
I0324 10:47:55.544603 11543 net.cpp:129] Top shape: 100 (100)
I0324 10:47:55.544611 11543 net.cpp:129] Top shape: 100 (100)
I0324 10:47:55.544618 11543 net.cpp:129] Top shape: 100 (100)
I0324 10:47:55.544625 11543 net.cpp:137] Memory required for data: 61836400
I0324 10:47:55.544631 11543 layer_factory.hpp:77] Creating layer conv1
I0324 10:47:55.544648 11543 net.cpp:84] Creating Layer conv1
I0324 10:47:55.544656 11543 net.cpp:406] conv1 <- data
I0324 10:47:55.544665 11543 net.cpp:380] conv1 -> conv1
I0324 10:47:56.095295 11543 net.cpp:122] Setting up conv1
I0324 10:47:56.095347 11543 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:47:56.095353 11543 net.cpp:137] Memory required for data: 177996400
I0324 10:47:56.095378 11543 layer_factory.hpp:77] Creating layer relu1
I0324 10:47:56.095386 11543 net.cpp:84] Creating Layer relu1
I0324 10:47:56.095398 11543 net.cpp:406] relu1 <- conv1
I0324 10:47:56.095414 11543 net.cpp:367] relu1 -> conv1 (in-place)
I0324 10:47:56.095780 11543 net.cpp:122] Setting up relu1
I0324 10:47:56.095791 11543 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:47:56.095796 11543 net.cpp:137] Memory required for data: 294156400
I0324 10:47:56.095800 11543 layer_factory.hpp:77] Creating layer norm1
I0324 10:47:56.095808 11543 net.cpp:84] Creating Layer norm1
I0324 10:47:56.095813 11543 net.cpp:406] norm1 <- conv1
I0324 10:47:56.095818 11543 net.cpp:380] norm1 -> norm1
I0324 10:47:56.096168 11543 net.cpp:122] Setting up norm1
I0324 10:47:56.096184 11543 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:47:56.096187 11543 net.cpp:137] Memory required for data: 410316400
I0324 10:47:56.096191 11543 layer_factory.hpp:77] Creating layer pool1
I0324 10:47:56.096197 11543 net.cpp:84] Creating Layer pool1
I0324 10:47:56.096202 11543 net.cpp:406] pool1 <- norm1
I0324 10:47:56.096207 11543 net.cpp:380] pool1 -> pool1
I0324 10:47:56.096230 11543 net.cpp:122] Setting up pool1
I0324 10:47:56.096236 11543 net.cpp:129] Top shape: 100 96 27 27 (6998400)
I0324 10:47:56.096240 11543 net.cpp:137] Memory required for data: 438310000
I0324 10:47:56.096244 11543 layer_factory.hpp:77] Creating layer conv2
I0324 10:47:56.096252 11543 net.cpp:84] Creating Layer conv2
I0324 10:47:56.096256 11543 net.cpp:406] conv2 <- pool1
I0324 10:47:56.096261 11543 net.cpp:380] conv2 -> conv2
I0324 10:47:56.101675 11543 net.cpp:122] Setting up conv2
I0324 10:47:56.101704 11543 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:47:56.101708 11543 net.cpp:137] Memory required for data: 512959600
I0324 10:47:56.101718 11543 layer_factory.hpp:77] Creating layer relu2
I0324 10:47:56.101725 11543 net.cpp:84] Creating Layer relu2
I0324 10:47:56.101730 11543 net.cpp:406] relu2 <- conv2
I0324 10:47:56.101737 11543 net.cpp:367] relu2 -> conv2 (in-place)
I0324 10:47:56.102144 11543 net.cpp:122] Setting up relu2
I0324 10:47:56.102155 11543 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:47:56.102160 11543 net.cpp:137] Memory required for data: 587609200
I0324 10:47:56.102164 11543 layer_factory.hpp:77] Creating layer norm2
I0324 10:47:56.102171 11543 net.cpp:84] Creating Layer norm2
I0324 10:47:56.102176 11543 net.cpp:406] norm2 <- conv2
I0324 10:47:56.102183 11543 net.cpp:380] norm2 -> norm2
I0324 10:47:56.102535 11543 net.cpp:122] Setting up norm2
I0324 10:47:56.102560 11543 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:47:56.102564 11543 net.cpp:137] Memory required for data: 662258800
I0324 10:47:56.102568 11543 layer_factory.hpp:77] Creating layer pool2
I0324 10:47:56.102573 11543 net.cpp:84] Creating Layer pool2
I0324 10:47:56.102578 11543 net.cpp:406] pool2 <- norm2
I0324 10:47:56.102583 11543 net.cpp:380] pool2 -> pool2
I0324 10:47:56.102607 11543 net.cpp:122] Setting up pool2
I0324 10:47:56.102614 11543 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:47:56.102618 11543 net.cpp:137] Memory required for data: 679564400
I0324 10:47:56.102622 11543 layer_factory.hpp:77] Creating layer conv3
I0324 10:47:56.102632 11543 net.cpp:84] Creating Layer conv3
I0324 10:47:56.102636 11543 net.cpp:406] conv3 <- pool2
I0324 10:47:56.102643 11543 net.cpp:380] conv3 -> conv3
I0324 10:47:56.110155 11543 net.cpp:122] Setting up conv3
I0324 10:47:56.110182 11543 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:56.110186 11543 net.cpp:137] Memory required for data: 705522800
I0324 10:47:56.110198 11543 layer_factory.hpp:77] Creating layer relu3
I0324 10:47:56.110205 11543 net.cpp:84] Creating Layer relu3
I0324 10:47:56.110210 11543 net.cpp:406] relu3 <- conv3
I0324 10:47:56.110216 11543 net.cpp:367] relu3 -> conv3 (in-place)
I0324 10:47:56.110608 11543 net.cpp:122] Setting up relu3
I0324 10:47:56.110620 11543 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:56.110625 11543 net.cpp:137] Memory required for data: 731481200
I0324 10:47:56.110628 11543 layer_factory.hpp:77] Creating layer conv4
I0324 10:47:56.110644 11543 net.cpp:84] Creating Layer conv4
I0324 10:47:56.110649 11543 net.cpp:406] conv4 <- conv3
I0324 10:47:56.110687 11543 net.cpp:380] conv4 -> conv4
I0324 10:47:56.119166 11543 net.cpp:122] Setting up conv4
I0324 10:47:56.119194 11543 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:56.119199 11543 net.cpp:137] Memory required for data: 757439600
I0324 10:47:56.119207 11543 layer_factory.hpp:77] Creating layer relu4
I0324 10:47:56.119215 11543 net.cpp:84] Creating Layer relu4
I0324 10:47:56.119220 11543 net.cpp:406] relu4 <- conv4
I0324 10:47:56.119226 11543 net.cpp:367] relu4 -> conv4 (in-place)
I0324 10:47:56.119634 11543 net.cpp:122] Setting up relu4
I0324 10:47:56.119645 11543 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:56.119649 11543 net.cpp:137] Memory required for data: 783398000
I0324 10:47:56.119654 11543 layer_factory.hpp:77] Creating layer conv5
I0324 10:47:56.119663 11543 net.cpp:84] Creating Layer conv5
I0324 10:47:56.119668 11543 net.cpp:406] conv5 <- conv4
I0324 10:47:56.119675 11543 net.cpp:380] conv5 -> conv5
I0324 10:47:56.127117 11543 net.cpp:122] Setting up conv5
I0324 10:47:56.127189 11543 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:47:56.127194 11543 net.cpp:137] Memory required for data: 800703600
I0324 10:47:56.127259 11543 layer_factory.hpp:77] Creating layer relu5
I0324 10:47:56.127271 11543 net.cpp:84] Creating Layer relu5
I0324 10:47:56.127277 11543 net.cpp:406] relu5 <- conv5
I0324 10:47:56.127285 11543 net.cpp:367] relu5 -> conv5 (in-place)
I0324 10:47:56.127708 11543 net.cpp:122] Setting up relu5
I0324 10:47:56.127722 11543 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:47:56.127727 11543 net.cpp:137] Memory required for data: 818009200
I0324 10:47:56.127732 11543 layer_factory.hpp:77] Creating layer pool5
I0324 10:47:56.127739 11543 net.cpp:84] Creating Layer pool5
I0324 10:47:56.127743 11543 net.cpp:406] pool5 <- conv5
I0324 10:47:56.127749 11543 net.cpp:380] pool5 -> pool5
I0324 10:47:56.127782 11543 net.cpp:122] Setting up pool5
I0324 10:47:56.127789 11543 net.cpp:129] Top shape: 100 256 6 6 (921600)
I0324 10:47:56.127792 11543 net.cpp:137] Memory required for data: 821695600
I0324 10:47:56.127796 11543 layer_factory.hpp:77] Creating layer fc6
I0324 10:47:56.127804 11543 net.cpp:84] Creating Layer fc6
I0324 10:47:56.127810 11543 net.cpp:406] fc6 <- pool5
I0324 10:47:56.127815 11543 net.cpp:380] fc6 -> fc6
I0324 10:47:56.409209 11543 net.cpp:122] Setting up fc6
I0324 10:47:56.409241 11543 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:56.409250 11543 net.cpp:137] Memory required for data: 823334000
I0324 10:47:56.409265 11543 layer_factory.hpp:77] Creating layer relu6
I0324 10:47:56.409273 11543 net.cpp:84] Creating Layer relu6
I0324 10:47:56.409278 11543 net.cpp:406] relu6 <- fc6
I0324 10:47:56.409286 11543 net.cpp:367] relu6 -> fc6 (in-place)
I0324 10:47:56.409705 11543 net.cpp:122] Setting up relu6
I0324 10:47:56.409718 11543 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:56.409721 11543 net.cpp:137] Memory required for data: 824972400
I0324 10:47:56.409726 11543 layer_factory.hpp:77] Creating layer drop6
I0324 10:47:56.409732 11543 net.cpp:84] Creating Layer drop6
I0324 10:47:56.409737 11543 net.cpp:406] drop6 <- fc6
I0324 10:47:56.409742 11543 net.cpp:367] drop6 -> fc6 (in-place)
I0324 10:47:56.409770 11543 net.cpp:122] Setting up drop6
I0324 10:47:56.409776 11543 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:56.409780 11543 net.cpp:137] Memory required for data: 826610800
I0324 10:47:56.409785 11543 layer_factory.hpp:77] Creating layer fc7
I0324 10:47:56.409792 11543 net.cpp:84] Creating Layer fc7
I0324 10:47:56.409797 11543 net.cpp:406] fc7 <- fc6
I0324 10:47:56.409802 11543 net.cpp:380] fc7 -> fc7
I0324 10:47:56.535054 11543 net.cpp:122] Setting up fc7
I0324 10:47:56.535104 11543 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:56.535109 11543 net.cpp:137] Memory required for data: 828249200
I0324 10:47:56.535122 11543 layer_factory.hpp:77] Creating layer relu7
I0324 10:47:56.535131 11543 net.cpp:84] Creating Layer relu7
I0324 10:47:56.535145 11543 net.cpp:406] relu7 <- fc7
I0324 10:47:56.535171 11543 net.cpp:367] relu7 -> fc7 (in-place)
I0324 10:47:56.535815 11543 net.cpp:122] Setting up relu7
I0324 10:47:56.535828 11543 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:56.535832 11543 net.cpp:137] Memory required for data: 829887600
I0324 10:47:56.535837 11543 layer_factory.hpp:77] Creating layer drop7
I0324 10:47:56.535852 11543 net.cpp:84] Creating Layer drop7
I0324 10:47:56.535861 11543 net.cpp:406] drop7 <- fc7
I0324 10:47:56.535867 11543 net.cpp:367] drop7 -> fc7 (in-place)
I0324 10:47:56.535890 11543 net.cpp:122] Setting up drop7
I0324 10:47:56.535897 11543 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:56.535902 11543 net.cpp:137] Memory required for data: 831526000
I0324 10:47:56.535905 11543 layer_factory.hpp:77] Creating layer fc8_plantvillage
I0324 10:47:56.535915 11543 net.cpp:84] Creating Layer fc8_plantvillage
I0324 10:47:56.535919 11543 net.cpp:406] fc8_plantvillage <- fc7
I0324 10:47:56.535925 11543 net.cpp:380] fc8_plantvillage -> fc8_plantvillage
I0324 10:47:56.536936 11543 net.cpp:122] Setting up fc8_plantvillage
I0324 10:47:56.536944 11543 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:56.536962 11543 net.cpp:137] Memory required for data: 831541200
I0324 10:47:56.536968 11543 layer_factory.hpp:77] Creating layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:47:56.536975 11543 net.cpp:84] Creating Layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:47:56.536981 11543 net.cpp:406] fc8_plantvillage_fc8_plantvillage_0_split <- fc8_plantvillage
I0324 10:47:56.536986 11543 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:47:56.536993 11543 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:47:56.536998 11543 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:47:56.537031 11543 net.cpp:122] Setting up fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:47:56.537037 11543 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:56.537042 11543 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:56.537046 11543 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:56.537050 11543 net.cpp:137] Memory required for data: 831586800
I0324 10:47:56.537053 11543 layer_factory.hpp:77] Creating layer prob
I0324 10:47:56.537060 11543 net.cpp:84] Creating Layer prob
I0324 10:47:56.537065 11543 net.cpp:406] prob <- fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:47:56.537070 11543 net.cpp:380] prob -> prob
I0324 10:47:56.537590 11543 net.cpp:122] Setting up prob
I0324 10:47:56.537601 11543 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:56.537606 11543 net.cpp:137] Memory required for data: 831602000
I0324 10:47:56.537611 11543 layer_factory.hpp:77] Creating layer hdf5out
I0324 10:47:56.537616 11543 net.cpp:84] Creating Layer hdf5out
I0324 10:47:56.537621 11543 net.cpp:406] hdf5out <- prob
I0324 10:47:56.537626 11543 net.cpp:406] hdf5out <- label_data_1_split_0
I0324 10:47:56.538430 11543 net.cpp:122] Setting up hdf5out
I0324 10:47:56.538439 11543 net.cpp:137] Memory required for data: 831602000
I0324 10:47:56.538444 11543 layer_factory.hpp:77] Creating layer loss
I0324 10:47:56.538450 11543 net.cpp:84] Creating Layer loss
I0324 10:47:56.538455 11543 net.cpp:406] loss <- fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:47:56.538460 11543 net.cpp:406] loss <- label_data_1_split_1
I0324 10:47:56.538466 11543 net.cpp:380] loss -> loss
I0324 10:47:56.538475 11543 layer_factory.hpp:77] Creating layer loss
I0324 10:47:56.539080 11543 net.cpp:122] Setting up loss
I0324 10:47:56.539093 11543 net.cpp:129] Top shape: (1)
I0324 10:47:56.539096 11543 net.cpp:132]     with loss weight 1
I0324 10:47:56.539115 11543 net.cpp:137] Memory required for data: 831602004
I0324 10:47:56.539119 11543 layer_factory.hpp:77] Creating layer accuracy
I0324 10:47:56.539126 11543 net.cpp:84] Creating Layer accuracy
I0324 10:47:56.539130 11543 net.cpp:406] accuracy <- fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:47:56.539149 11543 net.cpp:406] accuracy <- label_data_1_split_2
I0324 10:47:56.539156 11543 net.cpp:380] accuracy -> accuracy
I0324 10:47:56.539165 11543 net.cpp:122] Setting up accuracy
I0324 10:47:56.539170 11543 net.cpp:129] Top shape: (1)
I0324 10:47:56.539172 11543 net.cpp:137] Memory required for data: 831602008
I0324 10:47:56.539178 11543 net.cpp:200] accuracy does not need backward computation.
I0324 10:47:56.539194 11543 net.cpp:198] loss needs backward computation.
I0324 10:47:56.539199 11543 net.cpp:200] hdf5out does not need backward computation.
I0324 10:47:56.539204 11543 net.cpp:200] prob does not need backward computation.
I0324 10:47:56.539208 11543 net.cpp:198] fc8_plantvillage_fc8_plantvillage_0_split needs backward computation.
I0324 10:47:56.539213 11543 net.cpp:198] fc8_plantvillage needs backward computation.
I0324 10:47:56.539218 11543 net.cpp:198] drop7 needs backward computation.
I0324 10:47:56.539222 11543 net.cpp:198] relu7 needs backward computation.
I0324 10:47:56.539227 11543 net.cpp:198] fc7 needs backward computation.
I0324 10:47:56.539230 11543 net.cpp:198] drop6 needs backward computation.
I0324 10:47:56.539234 11543 net.cpp:198] relu6 needs backward computation.
I0324 10:47:56.539238 11543 net.cpp:198] fc6 needs backward computation.
I0324 10:47:56.539242 11543 net.cpp:198] pool5 needs backward computation.
I0324 10:47:56.539247 11543 net.cpp:198] relu5 needs backward computation.
I0324 10:47:56.539250 11543 net.cpp:198] conv5 needs backward computation.
I0324 10:47:56.539254 11543 net.cpp:198] relu4 needs backward computation.
I0324 10:47:56.539258 11543 net.cpp:198] conv4 needs backward computation.
I0324 10:47:56.539263 11543 net.cpp:198] relu3 needs backward computation.
I0324 10:47:56.539266 11543 net.cpp:198] conv3 needs backward computation.
I0324 10:47:56.539270 11543 net.cpp:198] pool2 needs backward computation.
I0324 10:47:56.539275 11543 net.cpp:198] norm2 needs backward computation.
I0324 10:47:56.539279 11543 net.cpp:198] relu2 needs backward computation.
I0324 10:47:56.539283 11543 net.cpp:198] conv2 needs backward computation.
I0324 10:47:56.539288 11543 net.cpp:198] pool1 needs backward computation.
I0324 10:47:56.539291 11543 net.cpp:198] norm1 needs backward computation.
I0324 10:47:56.539295 11543 net.cpp:198] relu1 needs backward computation.
I0324 10:47:56.539299 11543 net.cpp:198] conv1 needs backward computation.
I0324 10:47:56.539304 11543 net.cpp:200] label_data_1_split does not need backward computation.
I0324 10:47:56.539309 11543 net.cpp:200] data does not need backward computation.
I0324 10:47:56.539312 11543 net.cpp:242] This network produces output accuracy
I0324 10:47:56.539316 11543 net.cpp:242] This network produces output loss
I0324 10:47:56.539332 11543 net.cpp:255] Network initialization done.
I0324 10:48:03.204102 11543 caffe.cpp:290] Running for 1 iterations.
I0324 10:48:03.282186 11543 hdf5_output_layer.cpp:32] Saving HDF5 file hdf5_dumps/iter_2376.h5
I0324 10:48:03.282383 11543 hdf5_output_layer.cpp:37] Successfully saved 100 rows
I0324 10:48:03.282620 11543 caffe.cpp:313] Batch 0, accuracy = 0.91
I0324 10:48:03.282637 11543 caffe.cpp:313] Batch 0, loss = 0.390369
I0324 10:48:03.282642 11543 caffe.cpp:318] Loss: 0.390369
I0324 10:48:03.282647 11543 caffe.cpp:330] accuracy = 0.91
I0324 10:48:03.282655 11543 caffe.cpp:330] loss = 0.390369 (* 1 = 0.390369 loss)
