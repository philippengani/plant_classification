I0324 10:47:35.760408 11433 caffe.cpp:275] Use GPU with device ID 0
I0324 10:47:35.760604 11433 caffe.cpp:279] GPU device name: GeForce GTX 1060
I0324 10:47:35.927208 11433 net.cpp:294] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0324 10:47:35.927320 11433 net.cpp:51] Initializing net from parameters: 
state {
  phase: TEST
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto"
  }
  data_param {
    source: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_plantvillage"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_plantvillage"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 38
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc8_plantvillage"
  top: "prob"
  include {
    phase: TEST
  }
}
layer {
  name: "hdf5out"
  type: "HDF5Output"
  bottom: "prob"
  bottom: "label"
  include {
    phase: TEST
  }
  hdf5_output_param {
    file_name: "hdf5_dumps/iter_2160.h5"
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
I0324 10:47:35.927425 11433 layer_factory.hpp:77] Creating layer data
I0324 10:47:35.927482 11433 db_lmdb.cpp:35] Opened lmdb /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db
I0324 10:47:35.927501 11433 net.cpp:84] Creating Layer data
I0324 10:47:35.927507 11433 net.cpp:380] data -> data
I0324 10:47:35.927516 11433 net.cpp:380] data -> label
I0324 10:47:35.927523 11433 data_transformer.cpp:25] Loading mean file from: /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto
I0324 10:47:35.935786 11433 data_layer.cpp:45] output data size: 100,3,227,227
I0324 10:47:36.024104 11433 net.cpp:122] Setting up data
I0324 10:47:36.024129 11433 net.cpp:129] Top shape: 100 3 227 227 (15458700)
I0324 10:47:36.024135 11433 net.cpp:129] Top shape: 100 (100)
I0324 10:47:36.024138 11433 net.cpp:137] Memory required for data: 61835200
I0324 10:47:36.024144 11433 layer_factory.hpp:77] Creating layer label_data_1_split
I0324 10:47:36.024153 11433 net.cpp:84] Creating Layer label_data_1_split
I0324 10:47:36.024158 11433 net.cpp:406] label_data_1_split <- label
I0324 10:47:36.024164 11433 net.cpp:380] label_data_1_split -> label_data_1_split_0
I0324 10:47:36.024173 11433 net.cpp:380] label_data_1_split -> label_data_1_split_1
I0324 10:47:36.024179 11433 net.cpp:380] label_data_1_split -> label_data_1_split_2
I0324 10:47:36.024267 11433 net.cpp:122] Setting up label_data_1_split
I0324 10:47:36.024281 11433 net.cpp:129] Top shape: 100 (100)
I0324 10:47:36.024284 11433 net.cpp:129] Top shape: 100 (100)
I0324 10:47:36.024289 11433 net.cpp:129] Top shape: 100 (100)
I0324 10:47:36.024292 11433 net.cpp:137] Memory required for data: 61836400
I0324 10:47:36.024296 11433 layer_factory.hpp:77] Creating layer conv1
I0324 10:47:36.024310 11433 net.cpp:84] Creating Layer conv1
I0324 10:47:36.024315 11433 net.cpp:406] conv1 <- data
I0324 10:47:36.024322 11433 net.cpp:380] conv1 -> conv1
I0324 10:47:36.567296 11433 net.cpp:122] Setting up conv1
I0324 10:47:36.567333 11433 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:47:36.567338 11433 net.cpp:137] Memory required for data: 177996400
I0324 10:47:36.567366 11433 layer_factory.hpp:77] Creating layer relu1
I0324 10:47:36.567374 11433 net.cpp:84] Creating Layer relu1
I0324 10:47:36.567386 11433 net.cpp:406] relu1 <- conv1
I0324 10:47:36.567402 11433 net.cpp:367] relu1 -> conv1 (in-place)
I0324 10:47:36.567741 11433 net.cpp:122] Setting up relu1
I0324 10:47:36.567752 11433 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:47:36.567756 11433 net.cpp:137] Memory required for data: 294156400
I0324 10:47:36.567760 11433 layer_factory.hpp:77] Creating layer norm1
I0324 10:47:36.567767 11433 net.cpp:84] Creating Layer norm1
I0324 10:47:36.567772 11433 net.cpp:406] norm1 <- conv1
I0324 10:47:36.567777 11433 net.cpp:380] norm1 -> norm1
I0324 10:47:36.568118 11433 net.cpp:122] Setting up norm1
I0324 10:47:36.568128 11433 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:47:36.568132 11433 net.cpp:137] Memory required for data: 410316400
I0324 10:47:36.568136 11433 layer_factory.hpp:77] Creating layer pool1
I0324 10:47:36.568142 11433 net.cpp:84] Creating Layer pool1
I0324 10:47:36.568146 11433 net.cpp:406] pool1 <- norm1
I0324 10:47:36.568151 11433 net.cpp:380] pool1 -> pool1
I0324 10:47:36.568174 11433 net.cpp:122] Setting up pool1
I0324 10:47:36.568181 11433 net.cpp:129] Top shape: 100 96 27 27 (6998400)
I0324 10:47:36.568184 11433 net.cpp:137] Memory required for data: 438310000
I0324 10:47:36.568188 11433 layer_factory.hpp:77] Creating layer conv2
I0324 10:47:36.568197 11433 net.cpp:84] Creating Layer conv2
I0324 10:47:36.568200 11433 net.cpp:406] conv2 <- pool1
I0324 10:47:36.568205 11433 net.cpp:380] conv2 -> conv2
I0324 10:47:36.573240 11433 net.cpp:122] Setting up conv2
I0324 10:47:36.573266 11433 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:47:36.573269 11433 net.cpp:137] Memory required for data: 512959600
I0324 10:47:36.573279 11433 layer_factory.hpp:77] Creating layer relu2
I0324 10:47:36.573287 11433 net.cpp:84] Creating Layer relu2
I0324 10:47:36.573292 11433 net.cpp:406] relu2 <- conv2
I0324 10:47:36.573297 11433 net.cpp:367] relu2 -> conv2 (in-place)
I0324 10:47:36.573645 11433 net.cpp:122] Setting up relu2
I0324 10:47:36.573657 11433 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:47:36.573662 11433 net.cpp:137] Memory required for data: 587609200
I0324 10:47:36.573665 11433 layer_factory.hpp:77] Creating layer norm2
I0324 10:47:36.573673 11433 net.cpp:84] Creating Layer norm2
I0324 10:47:36.573676 11433 net.cpp:406] norm2 <- conv2
I0324 10:47:36.573681 11433 net.cpp:380] norm2 -> norm2
I0324 10:47:36.573952 11433 net.cpp:122] Setting up norm2
I0324 10:47:36.573962 11433 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:47:36.573966 11433 net.cpp:137] Memory required for data: 662258800
I0324 10:47:36.573971 11433 layer_factory.hpp:77] Creating layer pool2
I0324 10:47:36.573976 11433 net.cpp:84] Creating Layer pool2
I0324 10:47:36.573979 11433 net.cpp:406] pool2 <- norm2
I0324 10:47:36.573984 11433 net.cpp:380] pool2 -> pool2
I0324 10:47:36.574007 11433 net.cpp:122] Setting up pool2
I0324 10:47:36.574012 11433 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:47:36.574016 11433 net.cpp:137] Memory required for data: 679564400
I0324 10:47:36.574020 11433 layer_factory.hpp:77] Creating layer conv3
I0324 10:47:36.574028 11433 net.cpp:84] Creating Layer conv3
I0324 10:47:36.574033 11433 net.cpp:406] conv3 <- pool2
I0324 10:47:36.574038 11433 net.cpp:380] conv3 -> conv3
I0324 10:47:36.581342 11433 net.cpp:122] Setting up conv3
I0324 10:47:36.581377 11433 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:36.581382 11433 net.cpp:137] Memory required for data: 705522800
I0324 10:47:36.581394 11433 layer_factory.hpp:77] Creating layer relu3
I0324 10:47:36.581403 11433 net.cpp:84] Creating Layer relu3
I0324 10:47:36.581408 11433 net.cpp:406] relu3 <- conv3
I0324 10:47:36.581414 11433 net.cpp:367] relu3 -> conv3 (in-place)
I0324 10:47:36.581657 11433 net.cpp:122] Setting up relu3
I0324 10:47:36.581666 11433 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:36.581670 11433 net.cpp:137] Memory required for data: 731481200
I0324 10:47:36.581674 11433 layer_factory.hpp:77] Creating layer conv4
I0324 10:47:36.581693 11433 net.cpp:84] Creating Layer conv4
I0324 10:47:36.581697 11433 net.cpp:406] conv4 <- conv3
I0324 10:47:36.581714 11433 net.cpp:380] conv4 -> conv4
I0324 10:47:36.589625 11433 net.cpp:122] Setting up conv4
I0324 10:47:36.589650 11433 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:36.589654 11433 net.cpp:137] Memory required for data: 757439600
I0324 10:47:36.589663 11433 layer_factory.hpp:77] Creating layer relu4
I0324 10:47:36.589671 11433 net.cpp:84] Creating Layer relu4
I0324 10:47:36.589675 11433 net.cpp:406] relu4 <- conv4
I0324 10:47:36.589682 11433 net.cpp:367] relu4 -> conv4 (in-place)
I0324 10:47:36.590095 11433 net.cpp:122] Setting up relu4
I0324 10:47:36.590107 11433 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:47:36.590111 11433 net.cpp:137] Memory required for data: 783398000
I0324 10:47:36.590116 11433 layer_factory.hpp:77] Creating layer conv5
I0324 10:47:36.590124 11433 net.cpp:84] Creating Layer conv5
I0324 10:47:36.590129 11433 net.cpp:406] conv5 <- conv4
I0324 10:47:36.590137 11433 net.cpp:380] conv5 -> conv5
I0324 10:47:36.597390 11433 net.cpp:122] Setting up conv5
I0324 10:47:36.597417 11433 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:47:36.597422 11433 net.cpp:137] Memory required for data: 800703600
I0324 10:47:36.597434 11433 layer_factory.hpp:77] Creating layer relu5
I0324 10:47:36.597441 11433 net.cpp:84] Creating Layer relu5
I0324 10:47:36.597446 11433 net.cpp:406] relu5 <- conv5
I0324 10:47:36.597453 11433 net.cpp:367] relu5 -> conv5 (in-place)
I0324 10:47:36.597895 11433 net.cpp:122] Setting up relu5
I0324 10:47:36.597908 11433 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:47:36.597911 11433 net.cpp:137] Memory required for data: 818009200
I0324 10:47:36.597915 11433 layer_factory.hpp:77] Creating layer pool5
I0324 10:47:36.597923 11433 net.cpp:84] Creating Layer pool5
I0324 10:47:36.597926 11433 net.cpp:406] pool5 <- conv5
I0324 10:47:36.597934 11433 net.cpp:380] pool5 -> pool5
I0324 10:47:36.597968 11433 net.cpp:122] Setting up pool5
I0324 10:47:36.597975 11433 net.cpp:129] Top shape: 100 256 6 6 (921600)
I0324 10:47:36.597978 11433 net.cpp:137] Memory required for data: 821695600
I0324 10:47:36.597982 11433 layer_factory.hpp:77] Creating layer fc6
I0324 10:47:36.597990 11433 net.cpp:84] Creating Layer fc6
I0324 10:47:36.597993 11433 net.cpp:406] fc6 <- pool5
I0324 10:47:36.598001 11433 net.cpp:380] fc6 -> fc6
I0324 10:47:36.857178 11433 net.cpp:122] Setting up fc6
I0324 10:47:36.857209 11433 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:36.857214 11433 net.cpp:137] Memory required for data: 823334000
I0324 10:47:36.857223 11433 layer_factory.hpp:77] Creating layer relu6
I0324 10:47:36.857230 11433 net.cpp:84] Creating Layer relu6
I0324 10:47:36.857235 11433 net.cpp:406] relu6 <- fc6
I0324 10:47:36.857244 11433 net.cpp:367] relu6 -> fc6 (in-place)
I0324 10:47:36.857625 11433 net.cpp:122] Setting up relu6
I0324 10:47:36.857633 11433 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:36.857637 11433 net.cpp:137] Memory required for data: 824972400
I0324 10:47:36.857641 11433 layer_factory.hpp:77] Creating layer drop6
I0324 10:47:36.857646 11433 net.cpp:84] Creating Layer drop6
I0324 10:47:36.857650 11433 net.cpp:406] drop6 <- fc6
I0324 10:47:36.857656 11433 net.cpp:367] drop6 -> fc6 (in-place)
I0324 10:47:36.857682 11433 net.cpp:122] Setting up drop6
I0324 10:47:36.857688 11433 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:36.857692 11433 net.cpp:137] Memory required for data: 826610800
I0324 10:47:36.857697 11433 layer_factory.hpp:77] Creating layer fc7
I0324 10:47:36.857703 11433 net.cpp:84] Creating Layer fc7
I0324 10:47:36.857707 11433 net.cpp:406] fc7 <- fc6
I0324 10:47:36.857713 11433 net.cpp:380] fc7 -> fc7
I0324 10:47:36.967928 11433 net.cpp:122] Setting up fc7
I0324 10:47:36.967957 11433 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:36.967981 11433 net.cpp:137] Memory required for data: 828249200
I0324 10:47:36.967991 11433 layer_factory.hpp:77] Creating layer relu7
I0324 10:47:36.967998 11433 net.cpp:84] Creating Layer relu7
I0324 10:47:36.968009 11433 net.cpp:406] relu7 <- fc7
I0324 10:47:36.968039 11433 net.cpp:367] relu7 -> fc7 (in-place)
I0324 10:47:36.968595 11433 net.cpp:122] Setting up relu7
I0324 10:47:36.968605 11433 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:36.968609 11433 net.cpp:137] Memory required for data: 829887600
I0324 10:47:36.968613 11433 layer_factory.hpp:77] Creating layer drop7
I0324 10:47:36.968618 11433 net.cpp:84] Creating Layer drop7
I0324 10:47:36.968622 11433 net.cpp:406] drop7 <- fc7
I0324 10:47:36.968629 11433 net.cpp:367] drop7 -> fc7 (in-place)
I0324 10:47:36.968650 11433 net.cpp:122] Setting up drop7
I0324 10:47:36.968657 11433 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:47:36.968659 11433 net.cpp:137] Memory required for data: 831526000
I0324 10:47:36.968663 11433 layer_factory.hpp:77] Creating layer fc8_plantvillage
I0324 10:47:36.968669 11433 net.cpp:84] Creating Layer fc8_plantvillage
I0324 10:47:36.968673 11433 net.cpp:406] fc8_plantvillage <- fc7
I0324 10:47:36.968680 11433 net.cpp:380] fc8_plantvillage -> fc8_plantvillage
I0324 10:47:36.969606 11433 net.cpp:122] Setting up fc8_plantvillage
I0324 10:47:36.969612 11433 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:36.969616 11433 net.cpp:137] Memory required for data: 831541200
I0324 10:47:36.969622 11433 layer_factory.hpp:77] Creating layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:47:36.969630 11433 net.cpp:84] Creating Layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:47:36.969636 11433 net.cpp:406] fc8_plantvillage_fc8_plantvillage_0_split <- fc8_plantvillage
I0324 10:47:36.969664 11433 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:47:36.969674 11433 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:47:36.969683 11433 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:47:36.969732 11433 net.cpp:122] Setting up fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:47:36.969738 11433 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:36.969741 11433 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:36.969745 11433 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:36.969748 11433 net.cpp:137] Memory required for data: 831586800
I0324 10:47:36.969753 11433 layer_factory.hpp:77] Creating layer prob
I0324 10:47:36.969758 11433 net.cpp:84] Creating Layer prob
I0324 10:47:36.969763 11433 net.cpp:406] prob <- fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:47:36.969768 11433 net.cpp:380] prob -> prob
I0324 10:47:36.970196 11433 net.cpp:122] Setting up prob
I0324 10:47:36.970204 11433 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:47:36.970208 11433 net.cpp:137] Memory required for data: 831602000
I0324 10:47:36.970212 11433 layer_factory.hpp:77] Creating layer hdf5out
I0324 10:47:36.970219 11433 net.cpp:84] Creating Layer hdf5out
I0324 10:47:36.970223 11433 net.cpp:406] hdf5out <- prob
I0324 10:47:36.970228 11433 net.cpp:406] hdf5out <- label_data_1_split_0
I0324 10:47:36.971010 11433 net.cpp:122] Setting up hdf5out
I0324 10:47:36.971019 11433 net.cpp:137] Memory required for data: 831602000
I0324 10:47:36.971022 11433 layer_factory.hpp:77] Creating layer loss
I0324 10:47:36.971027 11433 net.cpp:84] Creating Layer loss
I0324 10:47:36.971032 11433 net.cpp:406] loss <- fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:47:36.971036 11433 net.cpp:406] loss <- label_data_1_split_1
I0324 10:47:36.971042 11433 net.cpp:380] loss -> loss
I0324 10:47:36.971060 11433 layer_factory.hpp:77] Creating layer loss
I0324 10:47:36.971526 11433 net.cpp:122] Setting up loss
I0324 10:47:36.971535 11433 net.cpp:129] Top shape: (1)
I0324 10:47:36.971539 11433 net.cpp:132]     with loss weight 1
I0324 10:47:36.971556 11433 net.cpp:137] Memory required for data: 831602004
I0324 10:47:36.971560 11433 layer_factory.hpp:77] Creating layer accuracy
I0324 10:47:36.971566 11433 net.cpp:84] Creating Layer accuracy
I0324 10:47:36.971572 11433 net.cpp:406] accuracy <- fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:47:36.971590 11433 net.cpp:406] accuracy <- label_data_1_split_2
I0324 10:47:36.971594 11433 net.cpp:380] accuracy -> accuracy
I0324 10:47:36.971601 11433 net.cpp:122] Setting up accuracy
I0324 10:47:36.971606 11433 net.cpp:129] Top shape: (1)
I0324 10:47:36.971609 11433 net.cpp:137] Memory required for data: 831602008
I0324 10:47:36.971612 11433 net.cpp:200] accuracy does not need backward computation.
I0324 10:47:36.971619 11433 net.cpp:198] loss needs backward computation.
I0324 10:47:36.971623 11433 net.cpp:200] hdf5out does not need backward computation.
I0324 10:47:36.971627 11433 net.cpp:200] prob does not need backward computation.
I0324 10:47:36.971633 11433 net.cpp:198] fc8_plantvillage_fc8_plantvillage_0_split needs backward computation.
I0324 10:47:36.971637 11433 net.cpp:198] fc8_plantvillage needs backward computation.
I0324 10:47:36.971640 11433 net.cpp:198] drop7 needs backward computation.
I0324 10:47:36.971644 11433 net.cpp:198] relu7 needs backward computation.
I0324 10:47:36.971648 11433 net.cpp:198] fc7 needs backward computation.
I0324 10:47:36.971652 11433 net.cpp:198] drop6 needs backward computation.
I0324 10:47:36.971657 11433 net.cpp:198] relu6 needs backward computation.
I0324 10:47:36.971659 11433 net.cpp:198] fc6 needs backward computation.
I0324 10:47:36.971663 11433 net.cpp:198] pool5 needs backward computation.
I0324 10:47:36.971668 11433 net.cpp:198] relu5 needs backward computation.
I0324 10:47:36.971671 11433 net.cpp:198] conv5 needs backward computation.
I0324 10:47:36.971675 11433 net.cpp:198] relu4 needs backward computation.
I0324 10:47:36.971678 11433 net.cpp:198] conv4 needs backward computation.
I0324 10:47:36.971683 11433 net.cpp:198] relu3 needs backward computation.
I0324 10:47:36.971686 11433 net.cpp:198] conv3 needs backward computation.
I0324 10:47:36.971690 11433 net.cpp:198] pool2 needs backward computation.
I0324 10:47:36.971693 11433 net.cpp:198] norm2 needs backward computation.
I0324 10:47:36.971698 11433 net.cpp:198] relu2 needs backward computation.
I0324 10:47:36.971701 11433 net.cpp:198] conv2 needs backward computation.
I0324 10:47:36.971704 11433 net.cpp:198] pool1 needs backward computation.
I0324 10:47:36.971709 11433 net.cpp:198] norm1 needs backward computation.
I0324 10:47:36.971716 11433 net.cpp:198] relu1 needs backward computation.
I0324 10:47:36.971724 11433 net.cpp:198] conv1 needs backward computation.
I0324 10:47:36.971729 11433 net.cpp:200] label_data_1_split does not need backward computation.
I0324 10:47:36.971734 11433 net.cpp:200] data does not need backward computation.
I0324 10:47:36.971737 11433 net.cpp:242] This network produces output accuracy
I0324 10:47:36.971740 11433 net.cpp:242] This network produces output loss
I0324 10:47:36.971756 11433 net.cpp:255] Network initialization done.
I0324 10:47:46.060609 11433 caffe.cpp:290] Running for 1 iterations.
I0324 10:47:46.152061 11433 hdf5_output_layer.cpp:32] Saving HDF5 file hdf5_dumps/iter_2160.h5
I0324 10:47:46.152277 11433 hdf5_output_layer.cpp:37] Successfully saved 100 rows
I0324 10:47:46.152556 11433 caffe.cpp:313] Batch 0, accuracy = 0.91
I0324 10:47:46.152570 11433 caffe.cpp:313] Batch 0, loss = 0.383964
I0324 10:47:46.152575 11433 caffe.cpp:318] Loss: 0.383964
I0324 10:47:46.152580 11433 caffe.cpp:330] accuracy = 0.91
I0324 10:47:46.152588 11433 caffe.cpp:330] loss = 0.383964 (* 1 = 0.383964 loss)
