I0324 10:46:33.028275 11388 caffe.cpp:275] Use GPU with device ID 0
I0324 10:46:33.028465 11388 caffe.cpp:279] GPU device name: GeForce GTX 1060
I0324 10:46:33.282557 11388 net.cpp:294] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0324 10:46:33.283114 11388 net.cpp:51] Initializing net from parameters: 
state {
  phase: TEST
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto"
  }
  data_param {
    source: "/home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_plantvillage"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_plantvillage"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 38
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "fc8_plantvillage"
  top: "prob"
  include {
    phase: TEST
  }
}
layer {
  name: "hdf5out"
  type: "HDF5Output"
  bottom: "prob"
  bottom: "label"
  include {
    phase: TEST
  }
  hdf5_output_param {
    file_name: "hdf5_dumps/iter_1404.h5"
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8_plantvillage"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
I0324 10:46:33.283538 11388 layer_factory.hpp:77] Creating layer data
I0324 10:46:33.283783 11388 db_lmdb.cpp:35] Opened lmdb /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/test_db
I0324 10:46:33.283860 11388 net.cpp:84] Creating Layer data
I0324 10:46:33.283890 11388 net.cpp:380] data -> data
I0324 10:46:33.283926 11388 net.cpp:380] data -> label
I0324 10:46:33.283955 11388 data_transformer.cpp:25] Loading mean file from: /home/ngani/Desktop/SYS866/Plant Classification/Experiment 1/dataset_plantVillage/lmdb/color-20-80/mean.binaryproto
I0324 10:46:33.317767 11388 data_layer.cpp:45] output data size: 100,3,227,227
I0324 10:46:33.425207 11388 net.cpp:122] Setting up data
I0324 10:46:33.425233 11388 net.cpp:129] Top shape: 100 3 227 227 (15458700)
I0324 10:46:33.425240 11388 net.cpp:129] Top shape: 100 (100)
I0324 10:46:33.425243 11388 net.cpp:137] Memory required for data: 61835200
I0324 10:46:33.425248 11388 layer_factory.hpp:77] Creating layer label_data_1_split
I0324 10:46:33.425258 11388 net.cpp:84] Creating Layer label_data_1_split
I0324 10:46:33.425262 11388 net.cpp:406] label_data_1_split <- label
I0324 10:46:33.425269 11388 net.cpp:380] label_data_1_split -> label_data_1_split_0
I0324 10:46:33.425278 11388 net.cpp:380] label_data_1_split -> label_data_1_split_1
I0324 10:46:33.425283 11388 net.cpp:380] label_data_1_split -> label_data_1_split_2
I0324 10:46:33.425401 11388 net.cpp:122] Setting up label_data_1_split
I0324 10:46:33.425415 11388 net.cpp:129] Top shape: 100 (100)
I0324 10:46:33.425420 11388 net.cpp:129] Top shape: 100 (100)
I0324 10:46:33.425423 11388 net.cpp:129] Top shape: 100 (100)
I0324 10:46:33.425427 11388 net.cpp:137] Memory required for data: 61836400
I0324 10:46:33.425431 11388 layer_factory.hpp:77] Creating layer conv1
I0324 10:46:33.425441 11388 net.cpp:84] Creating Layer conv1
I0324 10:46:33.425446 11388 net.cpp:406] conv1 <- data
I0324 10:46:33.425451 11388 net.cpp:380] conv1 -> conv1
I0324 10:46:33.966032 11388 net.cpp:122] Setting up conv1
I0324 10:46:33.966065 11388 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:46:33.966069 11388 net.cpp:137] Memory required for data: 177996400
I0324 10:46:33.966094 11388 layer_factory.hpp:77] Creating layer relu1
I0324 10:46:33.966101 11388 net.cpp:84] Creating Layer relu1
I0324 10:46:33.966114 11388 net.cpp:406] relu1 <- conv1
I0324 10:46:33.966131 11388 net.cpp:367] relu1 -> conv1 (in-place)
I0324 10:46:33.966519 11388 net.cpp:122] Setting up relu1
I0324 10:46:33.966531 11388 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:46:33.966536 11388 net.cpp:137] Memory required for data: 294156400
I0324 10:46:33.966552 11388 layer_factory.hpp:77] Creating layer norm1
I0324 10:46:33.966559 11388 net.cpp:84] Creating Layer norm1
I0324 10:46:33.966563 11388 net.cpp:406] norm1 <- conv1
I0324 10:46:33.966569 11388 net.cpp:380] norm1 -> norm1
I0324 10:46:33.966917 11388 net.cpp:122] Setting up norm1
I0324 10:46:33.966928 11388 net.cpp:129] Top shape: 100 96 55 55 (29040000)
I0324 10:46:33.966931 11388 net.cpp:137] Memory required for data: 410316400
I0324 10:46:33.966935 11388 layer_factory.hpp:77] Creating layer pool1
I0324 10:46:33.966940 11388 net.cpp:84] Creating Layer pool1
I0324 10:46:33.966944 11388 net.cpp:406] pool1 <- norm1
I0324 10:46:33.966949 11388 net.cpp:380] pool1 -> pool1
I0324 10:46:33.966972 11388 net.cpp:122] Setting up pool1
I0324 10:46:33.966979 11388 net.cpp:129] Top shape: 100 96 27 27 (6998400)
I0324 10:46:33.966982 11388 net.cpp:137] Memory required for data: 438310000
I0324 10:46:33.966986 11388 layer_factory.hpp:77] Creating layer conv2
I0324 10:46:33.966995 11388 net.cpp:84] Creating Layer conv2
I0324 10:46:33.966998 11388 net.cpp:406] conv2 <- pool1
I0324 10:46:33.967003 11388 net.cpp:380] conv2 -> conv2
I0324 10:46:33.971962 11388 net.cpp:122] Setting up conv2
I0324 10:46:33.971990 11388 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:46:33.971994 11388 net.cpp:137] Memory required for data: 512959600
I0324 10:46:33.972004 11388 layer_factory.hpp:77] Creating layer relu2
I0324 10:46:33.972012 11388 net.cpp:84] Creating Layer relu2
I0324 10:46:33.972015 11388 net.cpp:406] relu2 <- conv2
I0324 10:46:33.972021 11388 net.cpp:367] relu2 -> conv2 (in-place)
I0324 10:46:33.972352 11388 net.cpp:122] Setting up relu2
I0324 10:46:33.972363 11388 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:46:33.972368 11388 net.cpp:137] Memory required for data: 587609200
I0324 10:46:33.972371 11388 layer_factory.hpp:77] Creating layer norm2
I0324 10:46:33.972378 11388 net.cpp:84] Creating Layer norm2
I0324 10:46:33.972383 11388 net.cpp:406] norm2 <- conv2
I0324 10:46:33.972388 11388 net.cpp:380] norm2 -> norm2
I0324 10:46:33.972632 11388 net.cpp:122] Setting up norm2
I0324 10:46:33.972641 11388 net.cpp:129] Top shape: 100 256 27 27 (18662400)
I0324 10:46:33.972645 11388 net.cpp:137] Memory required for data: 662258800
I0324 10:46:33.972649 11388 layer_factory.hpp:77] Creating layer pool2
I0324 10:46:33.972654 11388 net.cpp:84] Creating Layer pool2
I0324 10:46:33.972658 11388 net.cpp:406] pool2 <- norm2
I0324 10:46:33.972663 11388 net.cpp:380] pool2 -> pool2
I0324 10:46:33.972684 11388 net.cpp:122] Setting up pool2
I0324 10:46:33.972689 11388 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:46:33.972693 11388 net.cpp:137] Memory required for data: 679564400
I0324 10:46:33.972697 11388 layer_factory.hpp:77] Creating layer conv3
I0324 10:46:33.972704 11388 net.cpp:84] Creating Layer conv3
I0324 10:46:33.972708 11388 net.cpp:406] conv3 <- pool2
I0324 10:46:33.972713 11388 net.cpp:380] conv3 -> conv3
I0324 10:46:33.979547 11388 net.cpp:122] Setting up conv3
I0324 10:46:33.979568 11388 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:46:33.979573 11388 net.cpp:137] Memory required for data: 705522800
I0324 10:46:33.979581 11388 layer_factory.hpp:77] Creating layer relu3
I0324 10:46:33.979588 11388 net.cpp:84] Creating Layer relu3
I0324 10:46:33.979593 11388 net.cpp:406] relu3 <- conv3
I0324 10:46:33.979598 11388 net.cpp:367] relu3 -> conv3 (in-place)
I0324 10:46:33.979851 11388 net.cpp:122] Setting up relu3
I0324 10:46:33.979861 11388 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:46:33.979864 11388 net.cpp:137] Memory required for data: 731481200
I0324 10:46:33.979868 11388 layer_factory.hpp:77] Creating layer conv4
I0324 10:46:33.979882 11388 net.cpp:84] Creating Layer conv4
I0324 10:46:33.979887 11388 net.cpp:406] conv4 <- conv3
I0324 10:46:33.979903 11388 net.cpp:380] conv4 -> conv4
I0324 10:46:33.987222 11388 net.cpp:122] Setting up conv4
I0324 10:46:33.987241 11388 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:46:33.987246 11388 net.cpp:137] Memory required for data: 757439600
I0324 10:46:33.987254 11388 layer_factory.hpp:77] Creating layer relu4
I0324 10:46:33.987262 11388 net.cpp:84] Creating Layer relu4
I0324 10:46:33.987267 11388 net.cpp:406] relu4 <- conv4
I0324 10:46:33.987273 11388 net.cpp:367] relu4 -> conv4 (in-place)
I0324 10:46:33.987685 11388 net.cpp:122] Setting up relu4
I0324 10:46:33.987695 11388 net.cpp:129] Top shape: 100 384 13 13 (6489600)
I0324 10:46:33.987699 11388 net.cpp:137] Memory required for data: 783398000
I0324 10:46:33.987704 11388 layer_factory.hpp:77] Creating layer conv5
I0324 10:46:33.987713 11388 net.cpp:84] Creating Layer conv5
I0324 10:46:33.987717 11388 net.cpp:406] conv5 <- conv4
I0324 10:46:33.987723 11388 net.cpp:380] conv5 -> conv5
I0324 10:46:33.994119 11388 net.cpp:122] Setting up conv5
I0324 10:46:33.994141 11388 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:46:33.994145 11388 net.cpp:137] Memory required for data: 800703600
I0324 10:46:33.994156 11388 layer_factory.hpp:77] Creating layer relu5
I0324 10:46:33.994163 11388 net.cpp:84] Creating Layer relu5
I0324 10:46:33.994170 11388 net.cpp:406] relu5 <- conv5
I0324 10:46:33.994175 11388 net.cpp:367] relu5 -> conv5 (in-place)
I0324 10:46:33.994657 11388 net.cpp:122] Setting up relu5
I0324 10:46:33.994668 11388 net.cpp:129] Top shape: 100 256 13 13 (4326400)
I0324 10:46:33.994673 11388 net.cpp:137] Memory required for data: 818009200
I0324 10:46:33.994676 11388 layer_factory.hpp:77] Creating layer pool5
I0324 10:46:33.994686 11388 net.cpp:84] Creating Layer pool5
I0324 10:46:33.994690 11388 net.cpp:406] pool5 <- conv5
I0324 10:46:33.994695 11388 net.cpp:380] pool5 -> pool5
I0324 10:46:33.994726 11388 net.cpp:122] Setting up pool5
I0324 10:46:33.994732 11388 net.cpp:129] Top shape: 100 256 6 6 (921600)
I0324 10:46:33.994736 11388 net.cpp:137] Memory required for data: 821695600
I0324 10:46:33.994740 11388 layer_factory.hpp:77] Creating layer fc6
I0324 10:46:33.994747 11388 net.cpp:84] Creating Layer fc6
I0324 10:46:33.994751 11388 net.cpp:406] fc6 <- pool5
I0324 10:46:33.994756 11388 net.cpp:380] fc6 -> fc6
I0324 10:46:34.249207 11388 net.cpp:122] Setting up fc6
I0324 10:46:34.249236 11388 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:46:34.249240 11388 net.cpp:137] Memory required for data: 823334000
I0324 10:46:34.249253 11388 layer_factory.hpp:77] Creating layer relu6
I0324 10:46:34.249260 11388 net.cpp:84] Creating Layer relu6
I0324 10:46:34.249265 11388 net.cpp:406] relu6 <- fc6
I0324 10:46:34.249272 11388 net.cpp:367] relu6 -> fc6 (in-place)
I0324 10:46:34.249675 11388 net.cpp:122] Setting up relu6
I0324 10:46:34.249684 11388 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:46:34.249688 11388 net.cpp:137] Memory required for data: 824972400
I0324 10:46:34.249692 11388 layer_factory.hpp:77] Creating layer drop6
I0324 10:46:34.249698 11388 net.cpp:84] Creating Layer drop6
I0324 10:46:34.249702 11388 net.cpp:406] drop6 <- fc6
I0324 10:46:34.249711 11388 net.cpp:367] drop6 -> fc6 (in-place)
I0324 10:46:34.249730 11388 net.cpp:122] Setting up drop6
I0324 10:46:34.249737 11388 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:46:34.249740 11388 net.cpp:137] Memory required for data: 826610800
I0324 10:46:34.249744 11388 layer_factory.hpp:77] Creating layer fc7
I0324 10:46:34.249750 11388 net.cpp:84] Creating Layer fc7
I0324 10:46:34.249754 11388 net.cpp:406] fc7 <- fc6
I0324 10:46:34.249758 11388 net.cpp:380] fc7 -> fc7
I0324 10:46:34.361913 11388 net.cpp:122] Setting up fc7
I0324 10:46:34.361937 11388 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:46:34.361941 11388 net.cpp:137] Memory required for data: 828249200
I0324 10:46:34.361950 11388 layer_factory.hpp:77] Creating layer relu7
I0324 10:46:34.361958 11388 net.cpp:84] Creating Layer relu7
I0324 10:46:34.361965 11388 net.cpp:406] relu7 <- fc7
I0324 10:46:34.361981 11388 net.cpp:367] relu7 -> fc7 (in-place)
I0324 10:46:34.362507 11388 net.cpp:122] Setting up relu7
I0324 10:46:34.362522 11388 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:46:34.362526 11388 net.cpp:137] Memory required for data: 829887600
I0324 10:46:34.362530 11388 layer_factory.hpp:77] Creating layer drop7
I0324 10:46:34.362537 11388 net.cpp:84] Creating Layer drop7
I0324 10:46:34.362541 11388 net.cpp:406] drop7 <- fc7
I0324 10:46:34.362546 11388 net.cpp:367] drop7 -> fc7 (in-place)
I0324 10:46:34.362584 11388 net.cpp:122] Setting up drop7
I0324 10:46:34.362591 11388 net.cpp:129] Top shape: 100 4096 (409600)
I0324 10:46:34.362593 11388 net.cpp:137] Memory required for data: 831526000
I0324 10:46:34.362597 11388 layer_factory.hpp:77] Creating layer fc8_plantvillage
I0324 10:46:34.362603 11388 net.cpp:84] Creating Layer fc8_plantvillage
I0324 10:46:34.362607 11388 net.cpp:406] fc8_plantvillage <- fc7
I0324 10:46:34.362614 11388 net.cpp:380] fc8_plantvillage -> fc8_plantvillage
I0324 10:46:34.363575 11388 net.cpp:122] Setting up fc8_plantvillage
I0324 10:46:34.363581 11388 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:46:34.363585 11388 net.cpp:137] Memory required for data: 831541200
I0324 10:46:34.363591 11388 layer_factory.hpp:77] Creating layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:46:34.363597 11388 net.cpp:84] Creating Layer fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:46:34.363601 11388 net.cpp:406] fc8_plantvillage_fc8_plantvillage_0_split <- fc8_plantvillage
I0324 10:46:34.363605 11388 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:46:34.363612 11388 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:46:34.363618 11388 net.cpp:380] fc8_plantvillage_fc8_plantvillage_0_split -> fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:46:34.363649 11388 net.cpp:122] Setting up fc8_plantvillage_fc8_plantvillage_0_split
I0324 10:46:34.363656 11388 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:46:34.363659 11388 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:46:34.363663 11388 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:46:34.363667 11388 net.cpp:137] Memory required for data: 831586800
I0324 10:46:34.363670 11388 layer_factory.hpp:77] Creating layer prob
I0324 10:46:34.363677 11388 net.cpp:84] Creating Layer prob
I0324 10:46:34.363680 11388 net.cpp:406] prob <- fc8_plantvillage_fc8_plantvillage_0_split_0
I0324 10:46:34.363685 11388 net.cpp:380] prob -> prob
I0324 10:46:34.364145 11388 net.cpp:122] Setting up prob
I0324 10:46:34.364154 11388 net.cpp:129] Top shape: 100 38 (3800)
I0324 10:46:34.364158 11388 net.cpp:137] Memory required for data: 831602000
I0324 10:46:34.364162 11388 layer_factory.hpp:77] Creating layer hdf5out
I0324 10:46:34.364168 11388 net.cpp:84] Creating Layer hdf5out
I0324 10:46:34.364173 11388 net.cpp:406] hdf5out <- prob
I0324 10:46:34.364178 11388 net.cpp:406] hdf5out <- label_data_1_split_0
I0324 10:46:34.393378 11388 net.cpp:122] Setting up hdf5out
I0324 10:46:34.393394 11388 net.cpp:137] Memory required for data: 831602000
I0324 10:46:34.393400 11388 layer_factory.hpp:77] Creating layer loss
I0324 10:46:34.393410 11388 net.cpp:84] Creating Layer loss
I0324 10:46:34.393416 11388 net.cpp:406] loss <- fc8_plantvillage_fc8_plantvillage_0_split_1
I0324 10:46:34.393424 11388 net.cpp:406] loss <- label_data_1_split_1
I0324 10:46:34.393429 11388 net.cpp:380] loss -> loss
I0324 10:46:34.393437 11388 layer_factory.hpp:77] Creating layer loss
I0324 10:46:34.394120 11388 net.cpp:122] Setting up loss
I0324 10:46:34.394137 11388 net.cpp:129] Top shape: (1)
I0324 10:46:34.394141 11388 net.cpp:132]     with loss weight 1
I0324 10:46:34.394158 11388 net.cpp:137] Memory required for data: 831602004
I0324 10:46:34.394163 11388 layer_factory.hpp:77] Creating layer accuracy
I0324 10:46:34.394170 11388 net.cpp:84] Creating Layer accuracy
I0324 10:46:34.394176 11388 net.cpp:406] accuracy <- fc8_plantvillage_fc8_plantvillage_0_split_2
I0324 10:46:34.394196 11388 net.cpp:406] accuracy <- label_data_1_split_2
I0324 10:46:34.394207 11388 net.cpp:380] accuracy -> accuracy
I0324 10:46:34.394217 11388 net.cpp:122] Setting up accuracy
I0324 10:46:34.394223 11388 net.cpp:129] Top shape: (1)
I0324 10:46:34.394227 11388 net.cpp:137] Memory required for data: 831602008
I0324 10:46:34.394233 11388 net.cpp:200] accuracy does not need backward computation.
I0324 10:46:34.394243 11388 net.cpp:198] loss needs backward computation.
I0324 10:46:34.394248 11388 net.cpp:200] hdf5out does not need backward computation.
I0324 10:46:34.394254 11388 net.cpp:200] prob does not need backward computation.
I0324 10:46:34.394259 11388 net.cpp:198] fc8_plantvillage_fc8_plantvillage_0_split needs backward computation.
I0324 10:46:34.394268 11388 net.cpp:198] fc8_plantvillage needs backward computation.
I0324 10:46:34.394273 11388 net.cpp:198] drop7 needs backward computation.
I0324 10:46:34.394276 11388 net.cpp:198] relu7 needs backward computation.
I0324 10:46:34.394279 11388 net.cpp:198] fc7 needs backward computation.
I0324 10:46:34.394284 11388 net.cpp:198] drop6 needs backward computation.
I0324 10:46:34.394287 11388 net.cpp:198] relu6 needs backward computation.
I0324 10:46:34.394291 11388 net.cpp:198] fc6 needs backward computation.
I0324 10:46:34.394297 11388 net.cpp:198] pool5 needs backward computation.
I0324 10:46:34.394302 11388 net.cpp:198] relu5 needs backward computation.
I0324 10:46:34.394306 11388 net.cpp:198] conv5 needs backward computation.
I0324 10:46:34.394310 11388 net.cpp:198] relu4 needs backward computation.
I0324 10:46:34.394315 11388 net.cpp:198] conv4 needs backward computation.
I0324 10:46:34.394318 11388 net.cpp:198] relu3 needs backward computation.
I0324 10:46:34.394321 11388 net.cpp:198] conv3 needs backward computation.
I0324 10:46:34.394326 11388 net.cpp:198] pool2 needs backward computation.
I0324 10:46:34.394330 11388 net.cpp:198] norm2 needs backward computation.
I0324 10:46:34.394333 11388 net.cpp:198] relu2 needs backward computation.
I0324 10:46:34.394337 11388 net.cpp:198] conv2 needs backward computation.
I0324 10:46:34.394341 11388 net.cpp:198] pool1 needs backward computation.
I0324 10:46:34.394346 11388 net.cpp:198] norm1 needs backward computation.
I0324 10:46:34.394351 11388 net.cpp:198] relu1 needs backward computation.
I0324 10:46:34.394353 11388 net.cpp:198] conv1 needs backward computation.
I0324 10:46:34.394358 11388 net.cpp:200] label_data_1_split does not need backward computation.
I0324 10:46:34.394362 11388 net.cpp:200] data does not need backward computation.
I0324 10:46:34.394366 11388 net.cpp:242] This network produces output accuracy
I0324 10:46:34.394371 11388 net.cpp:242] This network produces output loss
I0324 10:46:34.394385 11388 net.cpp:255] Network initialization done.
I0324 10:46:53.666478 11388 caffe.cpp:290] Running for 1 iterations.
I0324 10:46:53.762177 11388 hdf5_output_layer.cpp:32] Saving HDF5 file hdf5_dumps/iter_1404.h5
I0324 10:46:53.762372 11388 hdf5_output_layer.cpp:37] Successfully saved 100 rows
I0324 10:46:53.762696 11388 caffe.cpp:313] Batch 0, accuracy = 0.89
I0324 10:46:53.762710 11388 caffe.cpp:313] Batch 0, loss = 0.424318
I0324 10:46:53.762715 11388 caffe.cpp:318] Loss: 0.424318
I0324 10:46:53.762720 11388 caffe.cpp:330] accuracy = 0.89
I0324 10:46:53.762728 11388 caffe.cpp:330] loss = 0.424318 (* 1 = 0.424318 loss)
